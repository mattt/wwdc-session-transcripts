X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1
00:00:00,506 --> 00:00:10,726 A:middle
[ Silence ]

2
00:00:11,226 --> 00:00:12,086 A:middle
>> Howard Miller: Okay welcome

3
00:00:12,086 --> 00:00:16,085 A:middle
to the WWDC 2013
AirPrint Session.

4
00:00:16,085 --> 00:00:16,936 A:middle
I'm Howard Miller.

5
00:00:16,936 --> 00:00:19,206 A:middle
I manage everything
that's related to AirPrint.

6
00:00:19,936 --> 00:00:22,006 A:middle
How many people here
are iOS developers?

7
00:00:22,006 --> 00:00:23,346 A:middle
Show of hands, alright.

8
00:00:23,346 --> 00:00:25,136 A:middle
How many of your
apps already print?

9
00:00:26,326 --> 00:00:27,746 A:middle
A few of you, okay.

10
00:00:27,906 --> 00:00:30,246 A:middle
If they don't print, by
the time you leave today,

11
00:00:30,246 --> 00:00:33,776 A:middle
your app should be printing via
what we tell you here or the lab

12
00:00:33,776 --> 00:00:35,306 A:middle
that immediately follows this.

13
00:00:36,076 --> 00:00:39,006 A:middle
Today's agenda, I'm going
to talk about AirPrint,

14
00:00:39,006 --> 00:00:41,206 A:middle
the success that we've had
in AirPrint and the market.

15
00:00:41,206 --> 00:00:43,126 A:middle
We're going to focus
a little bit

16
00:00:43,126 --> 00:00:45,356 A:middle
on AirPrint in the Enterprise.

17
00:00:45,546 --> 00:00:47,916 A:middle
We've got a lot of new printers
that have come to market

18
00:00:48,226 --> 00:00:51,536 A:middle
that I think will solve a
lot of enterprise issues.

19
00:00:51,536 --> 00:00:53,336 A:middle
And then we're going
to spend the majority

20
00:00:53,336 --> 00:00:57,896 A:middle
of today's session helping you
and your app be able to print.

21
00:00:58,386 --> 00:01:01,056 A:middle
So let's start with the
printing architecture.

22
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

23
00:01:01,286 --> 00:01:02,796 A:middle
Apple has a long tradition.

24
00:01:02,796 --> 00:01:05,736 A:middle
We invented desktop
publishing back in the 80's

25
00:01:05,786 --> 00:01:07,636 A:middle
with the Introduction
to PostScript,

26
00:01:07,896 --> 00:01:10,396 A:middle
the original LaserWriter,
partnership with Adobe.

27
00:01:11,166 --> 00:01:12,746 A:middle
With Mac OS X we brought

28
00:01:12,746 --> 00:01:16,356 A:middle
in a full featured rich printing
system, two sets of API's,

29
00:01:16,356 --> 00:01:18,736 A:middle
high level API's for
your applications,

30
00:01:18,736 --> 00:01:20,936 A:middle
some low level cups API's.

31
00:01:20,936 --> 00:01:24,176 A:middle
We've built in the most robust
printing system in the world,

32
00:01:24,176 --> 00:01:25,876 A:middle
the common Unix Printing System.

33
00:01:26,116 --> 00:01:28,726 A:middle
And as you know there's a
myriad of printer drivers

34
00:01:28,726 --> 00:01:31,646 A:middle
that are available to talk to
tens of thousands of printers.

35
00:01:32,336 --> 00:01:37,006 A:middle
We adapted this system to
eliminate the need for drivers.

36
00:01:37,496 --> 00:01:40,616 A:middle
We built a new printing
standard,

37
00:01:40,616 --> 00:01:43,236 A:middle
which we call AirPrint,
which well,

38
00:01:43,366 --> 00:01:44,696 A:middle
you know marketing
called it AirPrint.

39
00:01:44,696 --> 00:01:48,556 A:middle
It does work on wireless but
it also works on Ethernet

40
00:01:48,826 --> 00:01:51,526 A:middle
and starting next year it
will work on USB as well.

41
00:01:52,596 --> 00:01:56,926 A:middle
This provided a very rich and
complete printing system though

42
00:01:56,926 --> 00:01:59,336 A:middle
because of its history may
be a little bit complicated

43
00:01:59,336 --> 00:02:00,946 A:middle
for application developers.

44
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

45
00:02:01,506 --> 00:02:07,856 A:middle
So what we have done is for
iOS we've brought over the best

46
00:02:08,506 --> 00:02:13,126 A:middle
of the printing system, we've
put a thin layer of API's

47
00:02:13,176 --> 00:02:16,226 A:middle
that get to the essence of
what your app needs to do

48
00:02:16,226 --> 00:02:17,696 A:middle
to print and to print well.

49
00:02:18,166 --> 00:02:22,196 A:middle
So with a minimum amount of
code, maybe 10 lines of code

50
00:02:22,196 --> 00:02:25,756 A:middle
if you already have predefined
content such as PDF or JPEG,

51
00:02:26,036 --> 00:02:30,006 A:middle
you can get desktop quality
output from your application.

52
00:02:30,366 --> 00:02:33,396 A:middle
Okay if you want to do a little
bit more we still have the full

53
00:02:33,396 --> 00:02:36,226 A:middle
richness and powerful
printing system underlying you

54
00:02:36,516 --> 00:02:40,066 A:middle
and you can get desktop
quality output and all the level

55
00:02:40,066 --> 00:02:41,396 A:middle
of control that you would expect

56
00:02:41,396 --> 00:02:44,226 A:middle
from your application
using the AirPrint API's.

57
00:02:45,006 --> 00:02:47,536 A:middle
So let's talk a little
bit about the technology.

58
00:02:47,536 --> 00:02:51,546 A:middle
When we came to iOS the goal
was pretty straight forward,

59
00:02:51,866 --> 00:02:55,326 A:middle
what is the best that
we can do for the user?

60
00:02:56,536 --> 00:02:59,586 A:middle
Printing has been a pain, it's
been a pain since the dawn

61
00:02:59,586 --> 00:03:02,116 A:middle
of time when they were
carving them on stone tablets

62
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

63
00:03:02,116 --> 00:03:03,316 A:middle
and putting them in pyramids.

64
00:03:03,746 --> 00:03:06,156 A:middle
Printing is hard and it
doesn't have to be hard.

65
00:03:06,626 --> 00:03:09,846 A:middle
So our goal is to have
the best quality output

66
00:03:10,306 --> 00:03:13,236 A:middle
with the least amount of
friction for the end user.

67
00:03:13,356 --> 00:03:16,466 A:middle
And to that end we've
completely eliminated drivers,

68
00:03:16,686 --> 00:03:21,026 A:middle
no software to install, there's
no setup, there's no settings,

69
00:03:21,026 --> 00:03:24,786 A:middle
there's no tweaking,
the right thing happens.

70
00:03:24,786 --> 00:03:26,836 A:middle
You get full quality
output and now

71
00:03:26,836 --> 00:03:28,986 A:middle
for you application
developers we ask you

72
00:03:28,986 --> 00:03:30,166 A:middle
to be a partner in this.

73
00:03:30,496 --> 00:03:32,896 A:middle
So for example, if your
app is a photo app,

74
00:03:33,346 --> 00:03:37,206 A:middle
when you print your photo, it's
nice, that's sort of required,

75
00:03:37,206 --> 00:03:39,666 A:middle
that you tell the printing
system, yes it is my intent

76
00:03:39,666 --> 00:03:41,256 A:middle
to be printing a color photo.

77
00:03:41,836 --> 00:03:45,366 A:middle
That will let us optimize the
printing path and the settings

78
00:03:45,366 --> 00:03:48,846 A:middle
in the printer so the user will
get the full quality output,

79
00:03:49,186 --> 00:03:52,016 A:middle
full bleed, edge to edge,
correctly matched with color,

80
00:03:52,016 --> 00:03:55,466 A:middle
pulled from the right tray
without having to pick anything.

81
00:03:56,326 --> 00:04:00,466 A:middle
AirPrint was released
in iOS 4.2 so iOS 4.2

82
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

83
00:04:00,466 --> 00:04:01,646 A:middle
and later will support that.

84
00:04:01,946 --> 00:04:08,696 A:middle
It's also on OS X starting in
10.7, became our default in 10.8

85
00:04:08,696 --> 00:04:10,456 A:middle
and continues in Mavericks.

86
00:04:10,906 --> 00:04:14,006 A:middle
If a customer comes across an
AirPrint printer it will just

87
00:04:14,006 --> 00:04:16,745 A:middle
appear in their print
dialogue on either platform,

88
00:04:16,745 --> 00:04:18,086 A:middle
they pick it and they print.

89
00:04:18,786 --> 00:04:20,116 A:middle
It's all standards based.

90
00:04:20,476 --> 00:04:23,366 A:middle
Of course we put some Apple
secret sauce on top of that.

91
00:04:23,746 --> 00:04:27,236 A:middle
But yet everything that we've
done is available under license

92
00:04:27,236 --> 00:04:30,026 A:middle
at no cost to all
printer manufactures

93
00:04:30,026 --> 00:04:32,716 A:middle
and starting last year
server manufacturers.

94
00:04:33,556 --> 00:04:36,496 A:middle
So we have a few
printer manufacturers

95
00:04:36,496 --> 00:04:38,076 A:middle
that have adopted AirPrint.

96
00:04:38,326 --> 00:04:41,306 A:middle
Just this week you saw
announcements from Xerox

97
00:04:41,356 --> 00:04:45,006 A:middle
and Kyocera, both
bringing midsize business

98
00:04:45,006 --> 00:04:48,076 A:middle
and enterprise class printers
to market with AirPrint in them.

99
00:04:48,076 --> 00:04:51,186 A:middle
You'll notice all of your
favorite vendors probably are

100
00:04:51,186 --> 00:04:52,066 A:middle
on this slide.

101
00:04:52,886 --> 00:04:55,886 A:middle
We have a list of licensees,
some of which I will talk

102
00:04:55,886 --> 00:04:58,196 A:middle
about as we go through
today's presentation.

103
00:04:58,786 --> 00:05:01,806 A:middle
This list of licensees that
I show you have printers

104
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

105
00:05:01,806 --> 00:05:03,816 A:middle
that have AirPrint
and are currently

106
00:05:03,816 --> 00:05:05,636 A:middle
with Apple under certification.

107
00:05:06,966 --> 00:05:11,256 A:middle
If you want to know is your
printer an AirPrint printer,

108
00:05:11,256 --> 00:05:13,966 A:middle
we have this AirPrint basics
knowledge base article

109
00:05:13,966 --> 00:05:15,276 A:middle
which turned out to become one

110
00:05:15,276 --> 00:05:18,546 A:middle
of the 10 most popular
knowledge base articles

111
00:05:18,546 --> 00:05:21,626 A:middle
in Apple's history, this
has the definitive list.

112
00:05:22,056 --> 00:05:25,146 A:middle
For a printer to be on this
list, first the vendor has

113
00:05:25,146 --> 00:05:27,326 A:middle
to have a license,
second they have

114
00:05:27,326 --> 00:05:30,166 A:middle
to have provided working
functional prototypes to Apple

115
00:05:30,166 --> 00:05:32,506 A:middle
when we run a complete
certification sweep.

116
00:05:32,896 --> 00:05:35,726 A:middle
So this is a pretty good
definitive source if you want

117
00:05:35,726 --> 00:05:36,766 A:middle
to find out what's there.

118
00:05:37,816 --> 00:05:43,976 A:middle
So new printers for 2013
so we're going to start

119
00:05:43,976 --> 00:05:45,476 A:middle
with a couple of my favorites.

120
00:05:45,476 --> 00:05:47,896 A:middle
Roll fed printers,
there's a myriad

121
00:05:47,896 --> 00:05:49,896 A:middle
of roll fed printers
in the industry.

122
00:05:49,896 --> 00:05:50,966 A:middle
You see them everywhere.

123
00:05:51,156 --> 00:05:52,776 A:middle
We have, and we'll
demonstrate it later,

124
00:05:52,776 --> 00:05:55,646 A:middle
this is a Brother
Label Roll fed printer.

125
00:05:55,816 --> 00:05:57,656 A:middle
It will come to market
later this year.

126
00:05:57,656 --> 00:06:00,266 A:middle
Actually it's a firmware
update for an existing printer.

127
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

128
00:06:00,786 --> 00:06:02,086 A:middle
Awesome printer and we're going

129
00:06:02,086 --> 00:06:03,886 A:middle
to demo it live with
some demo code.

130
00:06:04,106 --> 00:06:10,366 A:middle
I hold in my hand this which
is an iPhone 5 panorama.

131
00:06:10,636 --> 00:06:14,956 A:middle
This was taken recently
and this has been printed

132
00:06:14,956 --> 00:06:17,096 A:middle
on a printer from ZINK.

133
00:06:17,356 --> 00:06:20,416 A:middle
For those who know ZINK,
ZINK stands for zero ink.

134
00:06:21,016 --> 00:06:24,276 A:middle
Their patented technology lets
the customer just buy paper

135
00:06:24,836 --> 00:06:26,356 A:middle
and always have ink available.

136
00:06:26,706 --> 00:06:29,666 A:middle
This roll fed is 2
inches by 9 inches.

137
00:06:29,666 --> 00:06:32,136 A:middle
It's a beautiful
California scene.

138
00:06:32,136 --> 00:06:39,426 A:middle
And for those in the
back who can't see it,

139
00:06:40,376 --> 00:06:42,666 A:middle
we have a slightly
larger version.

140
00:06:42,746 --> 00:06:46,686 A:middle
This one is 160 some
odd inches by 36 inches.

141
00:06:47,056 --> 00:06:49,476 A:middle
This has been printed
using AirPrint off

142
00:06:49,476 --> 00:06:52,796 A:middle
of shipping HP Designjet T520.

143
00:06:52,796 --> 00:06:56,136 A:middle
That roll fed printer came out
earlier this year with AirPrint

144
00:06:56,136 --> 00:06:59,606 A:middle
and HP's bringing AirPrint to
many other Designjet printers.

145
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

146
00:07:00,326 --> 00:07:01,196 A:middle
Okay thank you guys.

147
00:07:05,726 --> 00:07:08,636 A:middle
I mentioned the enterprise
class, laser printers,

148
00:07:08,846 --> 00:07:10,476 A:middle
one of the preeminent printers

149
00:07:10,476 --> 00:07:13,016 A:middle
in the enterprise
space has been Lexmark.

150
00:07:13,466 --> 00:07:16,186 A:middle
Lexmark makes a wide
array of laser printers.

151
00:07:16,656 --> 00:07:20,856 A:middle
Every printer sold by
Lexmark is AirPrint certified,

152
00:07:20,856 --> 00:07:22,216 A:middle
AirPrint enabled today.

153
00:07:22,696 --> 00:07:24,666 A:middle
They also have enterprise
classes on some

154
00:07:24,666 --> 00:07:28,066 A:middle
of their printers where you set
your printer up in your shop,

155
00:07:28,066 --> 00:07:30,386 A:middle
you connect it to your
active directory server,

156
00:07:31,266 --> 00:07:33,766 A:middle
that printer will
then present itself

157
00:07:33,766 --> 00:07:39,636 A:middle
to iOS users supporting
users in groups, IPPS,

158
00:07:40,126 --> 00:07:43,226 A:middle
using TLS for security so
encrypted data channels.

159
00:07:43,556 --> 00:07:45,846 A:middle
You get all the functionality,
all the capability

160
00:07:45,846 --> 00:07:48,096 A:middle
and all the security
that you would expect

161
00:07:48,096 --> 00:07:50,106 A:middle
in an enterprise class printer.

162
00:07:50,576 --> 00:07:52,436 A:middle
So those are available
from Lexmark.

163
00:07:52,696 --> 00:07:56,946 A:middle
Many of the other vendors, HP,
the Ricoh and the Ricoh family,

164
00:07:56,946 --> 00:07:59,916 A:middle
I mentioned Kyocera and Xerox,
there's a lot of printers made

165
00:07:59,916 --> 00:08:01,646 A:middle
for the Enterprise class.

166
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

167
00:08:01,646 --> 00:08:03,866 A:middle
Label printers, I
mentioned Brother already,

168
00:08:04,116 --> 00:08:07,236 A:middle
Dye Sub printers, again I
don't have big ones of these

169
00:08:07,236 --> 00:08:11,896 A:middle
so you won't be able to
see them in the back,

170
00:08:12,376 --> 00:08:16,606 A:middle
but these printers are off of a
Cannon Selphy Dye-sub Printer,

171
00:08:16,606 --> 00:08:19,386 A:middle
also in certification and
will also be available later

172
00:08:19,386 --> 00:08:19,906 A:middle
this year.

173
00:08:20,216 --> 00:08:23,166 A:middle
I think this will be the must
have Christmas peripheral

174
00:08:23,536 --> 00:08:25,036 A:middle
because straight
from your iPhone

175
00:08:25,036 --> 00:08:29,276 A:middle
with two clicks you
get production quality,

176
00:08:29,596 --> 00:08:33,145 A:middle
color photos, there's tabs on
it so it comes out borderless,

177
00:08:33,145 --> 00:08:34,395 A:middle
right from your iPhone.

178
00:08:34,916 --> 00:08:40,496 A:middle
And then we will see later
this year our first round

179
00:08:40,496 --> 00:08:42,296 A:middle
of certified servers.

180
00:08:42,586 --> 00:08:45,576 A:middle
Yes, these will be the first
AirPrint certified servers

181
00:08:45,576 --> 00:08:46,146 A:middle
in the world.

182
00:08:46,326 --> 00:08:49,826 A:middle
The first one we expect will
probably be from Lexmark.

183
00:08:49,826 --> 00:08:52,026 A:middle
They're bringing their
Enterprise class print

184
00:08:52,026 --> 00:08:55,736 A:middle
and release capability and
the full server capability

185
00:08:55,736 --> 00:08:56,446 A:middle
for printing.

186
00:08:56,696 --> 00:08:58,656 A:middle
They're going to add
AirPrint right on top of that

187
00:08:58,656 --> 00:09:00,536 A:middle
and you'll be able
to print to all

188
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

189
00:09:00,536 --> 00:09:02,976 A:middle
of their printers plus
other third party printers.

190
00:09:04,336 --> 00:09:07,816 A:middle
So let me drill down just a
little bit into the Enterprise,

191
00:09:07,816 --> 00:09:09,136 A:middle
I think I've talked about this.

192
00:09:10,136 --> 00:09:12,766 A:middle
AirPrint itself uses
Bonjour for discovery

193
00:09:12,766 --> 00:09:14,386 A:middle
which works great in the home.

194
00:09:14,386 --> 00:09:15,416 A:middle
We're a small network.

195
00:09:15,416 --> 00:09:17,376 A:middle
You see the printers there
immediately available

196
00:09:17,376 --> 00:09:18,666 A:middle
so you pick it and you print.

197
00:09:19,696 --> 00:09:23,346 A:middle
AirPrint from the beginning
is also supported static DNS

198
00:09:23,626 --> 00:09:24,666 A:middle
entries for printers.

199
00:09:24,706 --> 00:09:27,716 A:middle
So you can define all of
your AirPrint printers

200
00:09:27,716 --> 00:09:30,396 A:middle
and your DNS server and for
whatever search domain your

201
00:09:30,396 --> 00:09:33,976 A:middle
users using they will get a list
of printers that are available

202
00:09:33,976 --> 00:09:35,246 A:middle
and reachable so you can print

203
00:09:35,246 --> 00:09:37,546 A:middle
across the internet
with AirPrint today.

204
00:09:38,956 --> 00:09:43,686 A:middle
New in iOS 7 we've added
iOS profile support

205
00:09:43,686 --> 00:09:48,346 A:middle
so from the Apple Configuration
Utility and it's all documented

206
00:09:48,346 --> 00:09:51,806 A:middle
so hopefully third party
utilities that create profiles,

207
00:09:51,806 --> 00:09:54,466 A:middle
you'll be able to
define AirPrint printers

208
00:09:54,876 --> 00:09:56,746 A:middle
and your users will be
able to print to them

209
00:09:56,746 --> 00:09:58,136 A:middle
from any place in the world.

210
00:09:58,706 --> 00:10:04,086 A:middle
AirPrint natively supports
IPPS which secure IPP with TLS

211
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

212
00:10:04,536 --> 00:10:06,976 A:middle
and we support users in groups.

213
00:10:08,676 --> 00:10:12,566 A:middle
We've also added some higher
end features to laser printers.

214
00:10:12,746 --> 00:10:14,526 A:middle
In Mavericks you will find

215
00:10:14,526 --> 00:10:17,856 A:middle
that if an AirPrint printer
is selected we support all the

216
00:10:17,856 --> 00:10:21,296 A:middle
finishing options that one
would expect, fold, staple,

217
00:10:21,536 --> 00:10:24,736 A:middle
three hole punch, jog, output.

218
00:10:25,046 --> 00:10:26,516 A:middle
If you have a server,

219
00:10:27,246 --> 00:10:29,056 A:middle
this Lexmark server
I'm talking about,

220
00:10:29,056 --> 00:10:30,796 A:middle
and servers from
other manufacturers,

221
00:10:31,036 --> 00:10:33,386 A:middle
print and release will
become a standard feature.

222
00:10:33,386 --> 00:10:36,276 A:middle
You can print from your
phone, go to your printer,

223
00:10:36,916 --> 00:10:39,286 A:middle
type in your code or put
your badge on the printer,

224
00:10:39,506 --> 00:10:41,906 A:middle
see your print jobs and
release them at the printer.

225
00:10:41,906 --> 00:10:45,706 A:middle
And there's also native
support for quotas now built in.

226
00:10:48,196 --> 00:10:51,326 A:middle
So let's talk about
OS X printing.

227
00:10:52,296 --> 00:10:54,356 A:middle
We have all these great
features in AirPrint

228
00:10:54,356 --> 00:10:57,136 A:middle
and if you're an OS X
developer there's a few things

229
00:10:57,136 --> 00:10:58,016 A:middle
that you need to know,

230
00:10:58,016 --> 00:11:00,046 A:middle
well really you don't
need to know anything.

231
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

232
00:11:00,176 --> 00:11:02,156 A:middle
All of these changes are
immediately available

233
00:11:02,156 --> 00:11:02,916 A:middle
to the user.

234
00:11:03,426 --> 00:11:08,036 A:middle
There's no new API's, there's no
new code changes at all in OS X.

235
00:11:09,106 --> 00:11:12,386 A:middle
iOS, which hopefully is
why most everybody is here,

236
00:11:12,736 --> 00:11:16,666 A:middle
we have created what we think
is a really simple way to print

237
00:11:16,666 --> 00:11:18,566 A:middle
but to get really great
quality out there.

238
00:11:19,276 --> 00:11:21,296 A:middle
So I've got just a couple
things I want to mention.

239
00:11:22,376 --> 00:11:25,596 A:middle
On other platforms it's
acceptable to just sort

240
00:11:25,596 --> 00:11:27,756 A:middle
of screen scrape and
drop that to the printer.

241
00:11:27,756 --> 00:11:29,996 A:middle
On our platform that's
not what we are about.

242
00:11:30,286 --> 00:11:34,006 A:middle
We want full quality,
desktop quality output.

243
00:11:34,006 --> 00:11:39,036 A:middle
We want you to use the space
that you would have available

244
00:11:39,036 --> 00:11:41,996 A:middle
on paper and bring the
information to bear

245
00:11:41,996 --> 00:11:46,366 A:middle
that a customer would want to
see on an 8 1/2 by 11 piece

246
00:11:46,366 --> 00:11:48,346 A:middle
of paper or even larger.

247
00:11:49,356 --> 00:11:51,556 A:middle
It's not about a little
screen at that point.

248
00:11:51,556 --> 00:11:53,326 A:middle
It's about what the
user is going to need

249
00:11:53,466 --> 00:11:55,086 A:middle
when they get themselves
to paper.

250
00:11:55,086 --> 00:11:57,456 A:middle
So you should be able
to enhance your content.

251
00:11:58,406 --> 00:12:01,966 A:middle
You should be able to draw
everything at print time

252
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

253
00:12:02,366 --> 00:12:05,566 A:middle
in high quality and you should
be able to use the real estate.

254
00:12:05,566 --> 00:12:08,266 A:middle
So the example that I
always like to use is Maps.

255
00:12:08,266 --> 00:12:10,156 A:middle
And you've seen this
on an iPhone 5.

256
00:12:10,156 --> 00:12:10,946 A:middle
It's gorgeous.

257
00:12:11,246 --> 00:12:14,006 A:middle
It's got a bunch of exciting
features, turn right,

258
00:12:14,006 --> 00:12:16,546 A:middle
turn navigation and they've
even fixed a lot of it

259
00:12:16,546 --> 00:12:17,896 A:middle
so it takes you to
the right place.

260
00:12:18,786 --> 00:12:21,576 A:middle
On the iPad there's
more real estate.

261
00:12:21,576 --> 00:12:22,496 A:middle
You get more maps.

262
00:12:22,496 --> 00:12:25,156 A:middle
There's more interesting
things that they could bring.

263
00:12:25,706 --> 00:12:29,666 A:middle
But when you go to paper, you
don't have the phone telling you

264
00:12:29,666 --> 00:12:33,356 A:middle
to turn by turn and you
have a lot more pixels

265
00:12:33,796 --> 00:12:34,656 A:middle
to bring to bear.

266
00:12:35,016 --> 00:12:38,286 A:middle
So on paper they show you
the same view so you can see

267
00:12:38,286 --> 00:12:40,546 A:middle
where you're going but
they also give you the turn

268
00:12:40,546 --> 00:12:41,726 A:middle
by turn on the side.

269
00:12:42,646 --> 00:12:46,496 A:middle
There is example after
example of this, web browsers

270
00:12:46,496 --> 00:12:47,886 A:middle
where you see all kinds of stuff

271
00:12:47,886 --> 00:12:50,526 A:middle
but when you print you get
the article of interest,

272
00:12:50,526 --> 00:12:53,786 A:middle
receipt point of sale
programs where it's an entry

273
00:12:54,376 --> 00:12:56,386 A:middle
for buying stuff on the iPad

274
00:12:56,386 --> 00:12:59,846 A:middle
but when you hit print you
actually get an itemized receipt

275
00:12:59,846 --> 00:13:02,286 A:middle
with the address of the
return procedures printed

276
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

277
00:13:02,286 --> 00:13:02,876 A:middle
on the bottom.

278
00:13:02,976 --> 00:13:08,366 A:middle
So we expect your apps to look
at print as a larger output form

279
00:13:08,966 --> 00:13:11,556 A:middle
and a static output form, the
thing that somebody's going

280
00:13:11,556 --> 00:13:13,936 A:middle
to fold up and put in their
pocket or put in their binder.

281
00:13:14,956 --> 00:13:16,616 A:middle
Take advantage of that space.

282
00:13:17,596 --> 00:13:22,776 A:middle
Okay so for printing we have
two ways for you to print,

283
00:13:22,776 --> 00:13:23,656 A:middle
I kind of mentioned this.

284
00:13:23,656 --> 00:13:25,846 A:middle
If you already have
pre-formed content,

285
00:13:25,846 --> 00:13:29,836 A:middle
a JPEG or any other image
format supported on the platform

286
00:13:29,836 --> 00:13:34,566 A:middle
or PDF, 10 lines of code,
we'll take care of the rest.

287
00:13:35,146 --> 00:13:39,506 A:middle
You'll tell us what your intent
is for the category of output

288
00:13:39,506 --> 00:13:42,146 A:middle
of photo or general
document or some others

289
00:13:42,486 --> 00:13:44,206 A:middle
and we will make all
the right settings

290
00:13:44,206 --> 00:13:46,536 A:middle
and get the right
output for the user.

291
00:13:46,536 --> 00:13:50,196 A:middle
If you don't already have a PDF
it's a long way around the horn

292
00:13:50,196 --> 00:13:53,006 A:middle
to go and create a PDF to hand
it to the printing system.

293
00:13:53,486 --> 00:13:56,266 A:middle
So in those situations
we'd like your app

294
00:13:56,916 --> 00:13:59,466 A:middle
to do fine grain
drawing at print time.

295
00:13:59,816 --> 00:14:02,516 A:middle
And we have a couple of
different classes that are set

296
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

297
00:14:02,516 --> 00:14:06,286 A:middle
up that will make this
structured and simple for you.

298
00:14:06,766 --> 00:14:08,826 A:middle
And to show you all
those details I'm going

299
00:14:08,826 --> 00:14:10,646 A:middle
to bring up Todd Ritland.

300
00:14:10,646 --> 00:14:13,896 A:middle
And he is going to
go through the API's

301
00:14:13,896 --> 00:14:18,416 A:middle
and give us a demo showing you
how to make your app print.

302
00:14:19,126 --> 00:14:19,576 A:middle
Thank you, Todd.

303
00:14:20,076 --> 00:14:24,076 A:middle
[ Applause ]

304
00:14:24,576 --> 00:14:26,076 A:middle
>> Todd Ritland: I'm Todd
Ritland, AirPrint Engineer.

305
00:14:26,586 --> 00:14:28,496 A:middle
So let's talk about some
iOS printing stuff here.

306
00:14:29,136 --> 00:14:31,506 A:middle
So first I'm going to talk
about picking what to print.

307
00:14:32,566 --> 00:14:33,896 A:middle
We're going to go over the API.

308
00:14:34,416 --> 00:14:36,926 A:middle
We'll talk about your
different UI options for ways

309
00:14:36,926 --> 00:14:38,606 A:middle
to present the printing UI.

310
00:14:39,436 --> 00:14:41,066 A:middle
We'll talk about some
new types of printers

311
00:14:41,066 --> 00:14:43,836 A:middle
like Howard mentioned, roll
fed and label printers,

312
00:14:44,116 --> 00:14:47,136 A:middle
and we'll do a demo
roll fed sample app.

313
00:14:48,306 --> 00:14:50,056 A:middle
So first it's important
to keep in mind

314
00:14:50,056 --> 00:14:51,456 A:middle
that iOS printing is easy.

315
00:14:51,976 --> 00:14:54,876 A:middle
It was designed to be really
easy for users with a simple UI

316
00:14:55,126 --> 00:14:58,406 A:middle
and it's actually really pretty
simple for you as a developer

317
00:14:58,406 --> 00:14:59,766 A:middle
to add printing to your app.

318
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

319
00:15:00,646 --> 00:15:02,266 A:middle
But first the most
important part

320
00:15:02,266 --> 00:15:04,416 A:middle
of printing is providing
really good content,

321
00:15:05,406 --> 00:15:06,206 A:middle
as Howard mentioned.

322
00:15:06,656 --> 00:15:10,956 A:middle
The best apps provide useful,
attractive, high quality output.

323
00:15:12,016 --> 00:15:14,716 A:middle
It's best to think of this as
like high end graphic design.

324
00:15:15,646 --> 00:15:18,066 A:middle
I recommend kind of
designing your output first

325
00:15:18,446 --> 00:15:21,396 A:middle
and then using the classes to
actually make it happen instead

326
00:15:21,396 --> 00:15:23,346 A:middle
of approaching it
the other way around.

327
00:15:24,306 --> 00:15:25,486 A:middle
As Howard mentioned,
what looks good

328
00:15:25,486 --> 00:15:28,056 A:middle
on screen doesn't always
look good on paper.

329
00:15:28,826 --> 00:15:30,536 A:middle
Make use of the dynamic
printing system.

330
00:15:30,966 --> 00:15:32,736 A:middle
The paper size can
actually be anything.

331
00:15:33,076 --> 00:15:34,066 A:middle
A lot of people don't realize

332
00:15:34,106 --> 00:15:37,246 A:middle
but there are two major
paper sizes in the world

333
00:15:37,246 --> 00:15:42,106 A:middle
for documents, A4, which is
taller and thinner then letter,

334
00:15:42,166 --> 00:15:44,346 A:middle
and letter, what we use
in the United States.

335
00:15:44,766 --> 00:15:46,876 A:middle
The iOS printing system will
figure out the correct one

336
00:15:46,876 --> 00:15:49,606 A:middle
to use and your app needs to be
dynamic about the way it lays

337
00:15:49,606 --> 00:15:51,076 A:middle
out its content to best fit.

338
00:15:51,386 --> 00:15:53,576 A:middle
If you're expecting US
letter and you get A4

339
00:15:53,576 --> 00:15:56,946 A:middle
which is narrower you might
get your content clipped off

340
00:15:56,946 --> 00:15:59,406 A:middle
on the sides and you have
a huge market of people

341
00:15:59,406 --> 00:16:00,846 A:middle
that their output is
not going to look right.

342
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

343
00:16:01,546 --> 00:16:03,686 A:middle
Printers also have
paper size sensors.

344
00:16:03,686 --> 00:16:05,596 A:middle
A lot of new printers, all
future AirPrint printers,

345
00:16:05,596 --> 00:16:07,096 A:middle
will have paper size sensors

346
00:16:07,976 --> 00:16:09,796 A:middle
so whatever the user actually
has loaded in the printer,

347
00:16:10,306 --> 00:16:14,376 A:middle
iOS will dynamically figure that
out and pass it on to the app

348
00:16:14,376 --> 00:16:16,326 A:middle
so the best apps are
dynamic about the way

349
00:16:16,326 --> 00:16:17,246 A:middle
that they load up their content.

350
00:16:17,946 --> 00:16:20,166 A:middle
Printer hardware margins
also vary quite a bit.

351
00:16:20,166 --> 00:16:23,046 A:middle
A lot of Inkjets that do
duplexing need a bunch of space

352
00:16:23,046 --> 00:16:24,636 A:middle
at the bottom to
hold on to the page

353
00:16:24,636 --> 00:16:27,956 A:middle
so you might have a really big
margin at the bottom or margins

354
00:16:27,956 --> 00:16:30,476 A:middle
on the left and right and top
can be any number of things

355
00:16:31,236 --> 00:16:33,356 A:middle
so apps that are
dynamic make sure

356
00:16:33,356 --> 00:16:34,756 A:middle
that their content
won't get clipped.

357
00:16:35,476 --> 00:16:37,436 A:middle
So for all these
reasons it's best not

358
00:16:37,436 --> 00:16:39,936 A:middle
to just produce a fixed
sized PDF and hand it

359
00:16:39,936 --> 00:16:40,796 A:middle
to the printing system.

360
00:16:41,296 --> 00:16:42,956 A:middle
We've built classes
for you to be dynamic.

361
00:16:43,666 --> 00:16:47,056 A:middle
So a really good example of
this is Bloomberg for iPad.

362
00:16:47,506 --> 00:16:49,456 A:middle
So here we're looking
at an article

363
00:16:49,676 --> 00:16:51,446 A:middle
about the new spaceship
campus at Apple.

364
00:16:51,446 --> 00:16:54,926 A:middle
And if you print this out,
this is the output you get.

365
00:16:55,716 --> 00:16:57,166 A:middle
We have a nice title at the top.

366
00:16:57,166 --> 00:16:58,526 A:middle
It has the Bloomberg logo.

367
00:16:59,206 --> 00:17:02,696 A:middle
There's you know the picture
has a caption, we have footers

368
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

369
00:17:02,696 --> 00:17:04,675 A:middle
at the bottom that tell
us what page we're on

370
00:17:04,756 --> 00:17:06,346 A:middle
and nice margins on the side.

371
00:17:06,346 --> 00:17:09,566 A:middle
And if the user actually
has US legal,

372
00:17:09,566 --> 00:17:11,576 A:middle
which is a taller paper
loaded in the printer,

373
00:17:12,465 --> 00:17:14,695 A:middle
the Bloomberg app will
be dynamic about things

374
00:17:14,695 --> 00:17:16,376 A:middle
and it will make
the content larger.

375
00:17:16,496 --> 00:17:19,435 A:middle
In this case we can print the
whole thing in just one page.

376
00:17:22,336 --> 00:17:24,256 A:middle
So we'll go over some
of the API's here.

377
00:17:25,195 --> 00:17:28,455 A:middle
The basic steps are first
your app will get the printer

378
00:17:28,455 --> 00:17:30,436 A:middle
controller or the
activity controller

379
00:17:30,436 --> 00:17:31,536 A:middle
if you're using the share sheet.

380
00:17:32,766 --> 00:17:35,596 A:middle
You'll set up the attributes
for the job like the type of job

381
00:17:35,596 --> 00:17:36,986 A:middle
that it is, the job name.

382
00:17:37,736 --> 00:17:40,576 A:middle
You'll provide content and
then you'll present the UI.

383
00:17:40,846 --> 00:17:44,806 A:middle
At this point iOS will
present the user interface.

384
00:17:44,806 --> 00:17:45,946 A:middle
The user can select the printer.

385
00:17:46,266 --> 00:17:47,736 A:middle
iOS will communicate
with the printer,

386
00:17:47,736 --> 00:17:49,466 A:middle
figure out all the
relevant information.

387
00:17:49,766 --> 00:17:52,366 A:middle
The daemon will take
over managing the jobs.

388
00:17:52,366 --> 00:17:53,516 A:middle
The user can cancel it.

389
00:17:53,716 --> 00:17:56,496 A:middle
If it's a print release job
we'll hold on to the job.

390
00:17:56,496 --> 00:17:57,926 A:middle
You know all these
things you don't have

391
00:17:57,926 --> 00:17:59,336 A:middle
to manage in your app.

392
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

393
00:18:00,996 --> 00:18:02,896 A:middle
So here's the basic
classes that we'll be using.

394
00:18:03,416 --> 00:18:05,346 A:middle
I'll just briefly go over them
now and then we'll go on to some

395
00:18:05,346 --> 00:18:06,236 A:middle
of these in more detail.

396
00:18:06,806 --> 00:18:09,856 A:middle
First we have UIPrintInfo
which is basically what you use

397
00:18:09,856 --> 00:18:13,116 A:middle
to put those attributes for
the job like orientation,

398
00:18:13,116 --> 00:18:14,556 A:middle
the job name, the type of job.

399
00:18:15,346 --> 00:18:18,956 A:middle
UIPrintPaper, just
basically represents the paper

400
00:18:18,956 --> 00:18:19,466 A:middle
at the printer.

401
00:18:20,376 --> 00:18:22,736 A:middle
We have a print formatter
which formats content

402
00:18:22,796 --> 00:18:24,116 A:middle
to be put onto the page.

403
00:18:25,136 --> 00:18:27,486 A:middle
Print page renderer which
lets you take full control

404
00:18:27,486 --> 00:18:28,086 A:middle
over the drawing.

405
00:18:28,526 --> 00:18:32,376 A:middle
For the UI we have
UIPrintInteractionController

406
00:18:32,376 --> 00:18:35,736 A:middle
which is the main printing
UI and UIActivityController

407
00:18:35,736 --> 00:18:37,356 A:middle
which is the share
sheet, essentially.

408
00:18:40,506 --> 00:18:42,256 A:middle
So first let's talk
about UIPrintIinfo.

409
00:18:44,076 --> 00:18:45,716 A:middle
First you'll set the job name.

410
00:18:46,386 --> 00:18:47,656 A:middle
Now this is really important.

411
00:18:47,776 --> 00:18:50,076 A:middle
It's shown in the
UI print center

412
00:18:50,076 --> 00:18:51,396 A:middle
when the user's managing
the job.

413
00:18:51,896 --> 00:18:54,266 A:middle
It also gets shown on the front
panel of a lot of printers.

414
00:18:55,336 --> 00:18:58,446 A:middle
This is the way the user is
going to identify your job.

415
00:18:58,876 --> 00:19:02,126 A:middle
Howard mentioned servers, for
print and release situations

416
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

417
00:19:02,126 --> 00:19:04,856 A:middle
and stuff, users will
be identifying their job

418
00:19:04,856 --> 00:19:08,256 A:middle
by the job name so it needs to
be really specific and something

419
00:19:08,256 --> 00:19:11,516 A:middle
that the user would
actually be able to find.

420
00:19:11,556 --> 00:19:13,596 A:middle
Next a really important
one is output type.

421
00:19:14,426 --> 00:19:16,596 A:middle
This is how you'll tell the
printing system the type

422
00:19:16,596 --> 00:19:17,736 A:middle
of content you're printing.

423
00:19:19,026 --> 00:19:20,806 A:middle
We'll change the
default paper size.

424
00:19:21,166 --> 00:19:23,306 A:middle
We'll pick a correct
print quality mode.

425
00:19:23,436 --> 00:19:25,396 A:middle
And we'll show the
appropriate UI based

426
00:19:25,396 --> 00:19:27,076 A:middle
on the content that you tell us.

427
00:19:27,416 --> 00:19:28,676 A:middle
So we have four of these.

428
00:19:29,066 --> 00:19:31,926 A:middle
The first one is just
a general document.

429
00:19:32,346 --> 00:19:33,676 A:middle
Safari is an example of this.

430
00:19:33,676 --> 00:19:35,426 A:middle
It's just mixed text
and graphics.

431
00:19:35,756 --> 00:19:40,106 A:middle
We'll choose a document
size like A4 or letter,

432
00:19:40,106 --> 00:19:41,016 A:middle
depending on the region.

433
00:19:41,396 --> 00:19:44,206 A:middle
Duplex control will be
allowed and page range control,

434
00:19:44,206 --> 00:19:45,566 A:middle
things you would
expect from a document.

435
00:19:46,366 --> 00:19:47,776 A:middle
And we choose normal quality.

436
00:19:49,566 --> 00:19:52,976 A:middle
Next a very similar one
is document Grayscale.

437
00:19:53,596 --> 00:19:55,886 A:middle
This is monochrome
text and graphics.

438
00:19:56,646 --> 00:19:58,996 A:middle
Now you can choose this
and we'll optimize things

439
00:19:58,996 --> 00:20:01,096 A:middle
so that the data over
the network is lower.

440
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

441
00:20:01,396 --> 00:20:04,036 A:middle
We'll tell the printer to print
it using just its black ink

442
00:20:04,036 --> 00:20:05,696 A:middle
so it can save the
user some ink.

443
00:20:06,826 --> 00:20:08,226 A:middle
And just like the
previous example,

444
00:20:08,386 --> 00:20:09,806 A:middle
duplex and page range
is allowed.

445
00:20:10,956 --> 00:20:11,916 A:middle
Next we have photo.

446
00:20:12,616 --> 00:20:14,616 A:middle
This is you know
printing photos.

447
00:20:14,616 --> 00:20:17,266 A:middle
Users want high quality,
borderless

448
00:20:17,546 --> 00:20:19,126 A:middle
and when we show the
UI, when you tell us

449
00:20:19,126 --> 00:20:22,016 A:middle
that you're printing a photo,
we won't show the duplex control

450
00:20:22,016 --> 00:20:24,926 A:middle
or page range because these
don't make sense for a photo.

451
00:20:25,796 --> 00:20:29,816 A:middle
And new in iOS 7 we have
UIPrintInfoOutputPhotoGrayscale.

452
00:20:30,316 --> 00:20:31,916 A:middle
So similar to the last one

453
00:20:31,916 --> 00:20:35,296 A:middle
where we have photo paper sizes
we'll choose the photo tray,

454
00:20:35,296 --> 00:20:37,106 A:middle
if the printer has
one, borderless,

455
00:20:37,376 --> 00:20:39,346 A:middle
but we'll actually tell
the printer to print this

456
00:20:39,346 --> 00:20:40,746 A:middle
in high quality Grayscale.

457
00:20:40,966 --> 00:20:44,336 A:middle
Some printers that are like high
end Cannon printers have a bunch

458
00:20:44,336 --> 00:20:47,626 A:middle
of gray inks and really
excellent gray quality printing

459
00:20:47,696 --> 00:20:49,026 A:middle
and we'll tell the
printer to use

460
00:20:49,026 --> 00:20:53,606 A:middle
that if you choose
this output type.

461
00:20:53,606 --> 00:20:55,006 A:middle
Okay so that's UIPrintInfo.

462
00:20:56,486 --> 00:20:58,136 A:middle
Next we'll go over UIPrintPaper.

463
00:20:58,546 --> 00:21:03,506 A:middle
It's basically just the size
of the page at the printer

464
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

465
00:21:04,106 --> 00:21:06,796 A:middle
and then inside of that we
have the printable area.

466
00:21:07,536 --> 00:21:10,726 A:middle
This is the size minus the
hardware margins of the printer,

467
00:21:10,726 --> 00:21:12,536 A:middle
the area where the
printer can't print

468
00:21:12,606 --> 00:21:14,796 A:middle
because you know it
can't shoot its laser

469
00:21:14,796 --> 00:21:16,506 A:middle
or the print head
can't move towards it.

470
00:21:18,396 --> 00:21:21,346 A:middle
Next we'll talk about
providing content.

471
00:21:21,346 --> 00:21:23,366 A:middle
As Howard mentioned, there's
basically two types of printing,

472
00:21:23,946 --> 00:21:26,976 A:middle
you either have items like PDF's
and images that already exist

473
00:21:27,316 --> 00:21:29,526 A:middle
or you're going to be creating
your pages dynamically.

474
00:21:29,716 --> 00:21:32,246 A:middle
If you're creating pages
dynamically you'll use these

475
00:21:32,246 --> 00:21:34,426 A:middle
formatters and renderer
classes that I've mentioned.

476
00:21:35,246 --> 00:21:37,136 A:middle
If you already have
content like PDF and images,

477
00:21:37,586 --> 00:21:39,876 A:middle
you don't use these things.

478
00:21:40,016 --> 00:21:42,776 A:middle
So the easy example
is printing items.

479
00:21:42,856 --> 00:21:45,966 A:middle
It could be a single item or
you can actually send an array

480
00:21:45,966 --> 00:21:48,266 A:middle
of items like an array
of photos for example

481
00:21:48,266 --> 00:21:49,966 A:middle
that the user selects
in a bunch of photos.

482
00:21:50,126 --> 00:21:54,906 A:middle
This could be JPEG's or any
image type that iOS understands.

483
00:21:55,886 --> 00:21:59,746 A:middle
These can be in the form of
NSURL's, file URL on disk

484
00:21:59,746 --> 00:22:03,646 A:middle
or elsewhere, it could be in
memory in the form of NSData

485
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

486
00:22:04,146 --> 00:22:08,166 A:middle
or a UIImage or CI image
or it could be something

487
00:22:08,166 --> 00:22:12,446 A:middle
in the photo library in the form
of an ALAsset or ALAssetURL.

488
00:22:12,756 --> 00:22:14,266 A:middle
If you provide an
array of items,

489
00:22:14,266 --> 00:22:15,386 A:middle
each one will be a separate job.

490
00:22:15,916 --> 00:22:19,986 A:middle
So here's all the code that
you would need to print a PDF.

491
00:22:21,246 --> 00:22:23,486 A:middle
First we'll ask the
UIPrintInteractionController

492
00:22:23,776 --> 00:22:25,206 A:middle
if it can print the URL.

493
00:22:25,496 --> 00:22:28,586 A:middle
This is a method that gets
the URL to a PDF file.

494
00:22:29,916 --> 00:22:31,936 A:middle
Examples when it wouldn't
be able to print it are

495
00:22:31,936 --> 00:22:34,106 A:middle
if the PDF had password
protection

496
00:22:34,336 --> 00:22:35,906 A:middle
or if it was malformed
in some way

497
00:22:36,156 --> 00:22:37,526 A:middle
and the
UIPrinterActionController

498
00:22:37,526 --> 00:22:39,956 A:middle
actually can tell you
if it can be printed.

499
00:22:39,956 --> 00:22:43,206 A:middle
Next we'll grab the shared
UIPrinterInteractionController.

500
00:22:43,406 --> 00:22:45,286 A:middle
It's a shared object so
you don't initialize it.

501
00:22:45,286 --> 00:22:46,346 A:middle
You just grab the shared one.

502
00:22:47,616 --> 00:22:49,346 A:middle
We'll set the printing
item property

503
00:22:49,406 --> 00:22:51,596 A:middle
to be the URL of our PDF file.

504
00:22:53,386 --> 00:22:54,926 A:middle
We'll set up a UIPrintInfo.

505
00:22:55,056 --> 00:22:56,406 A:middle
Those are the attributes
for the job

506
00:22:57,356 --> 00:22:58,846 A:middle
so we'll initialize
the UIPrintInfo.

507
00:22:59,176 --> 00:23:02,386 A:middle
We'll set the output type
to be output general.

508
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

509
00:23:02,526 --> 00:23:05,566 A:middle
This makes sense for PDF because
PDF typically have, you know,

510
00:23:05,876 --> 00:23:08,736 A:middle
photos in them or other
color content plus text.

511
00:23:09,076 --> 00:23:11,286 A:middle
We'll set the job name
to be name of the file.

512
00:23:11,966 --> 00:23:14,626 A:middle
And then we'll set the
controllers print info property

513
00:23:14,626 --> 00:23:15,916 A:middle
to be the print info
we just created.

514
00:23:16,116 --> 00:23:20,896 A:middle
We'll tell the controller to
turn on the page range control.

515
00:23:21,436 --> 00:23:23,576 A:middle
By default it doesn't show
the page range control.

516
00:23:24,446 --> 00:23:26,216 A:middle
But when our user's printing
a PDF they're probably going

517
00:23:26,216 --> 00:23:29,516 A:middle
to want to be able to choose a
page range inside of the page,

518
00:23:29,896 --> 00:23:33,246 A:middle
I mean inside of the PDF
and then we'll just present.

519
00:23:34,026 --> 00:23:36,226 A:middle
So that's all that it
takes to print a PDF.

520
00:23:36,226 --> 00:23:39,386 A:middle
At this point the iOS will take
control of everything else.

521
00:23:39,386 --> 00:23:42,416 A:middle
If the printer has a bunch of
trays and we actually notice

522
00:23:42,416 --> 00:23:44,936 A:middle
that the PDF file matches
exactly one of those trays

523
00:23:44,936 --> 00:23:48,996 A:middle
like say it's an 11 by 17 PDF,
we'll choose the right tray,

524
00:23:48,996 --> 00:23:50,776 A:middle
everything will just
happen magically.

525
00:23:50,776 --> 00:23:51,956 A:middle
[ laughter ]

526
00:23:51,956 --> 00:23:56,826 A:middle
Okay so formatters, if you're
actually formatting content

527
00:23:56,826 --> 00:23:58,426 A:middle
or rendering content
dynamically,

528
00:23:58,426 --> 00:24:00,116 A:middle
formatters are the first
thing to get to know.

529
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

530
00:24:01,356 --> 00:24:02,706 A:middle
Now what exactly is a formatter?

531
00:24:03,506 --> 00:24:08,216 A:middle
Formatter basically takes
some data in your app

532
00:24:08,216 --> 00:24:12,076 A:middle
and some rectangle on a printed
page and it figures out how

533
00:24:12,076 --> 00:24:13,326 A:middle
to format that for printing.

534
00:24:14,366 --> 00:24:16,776 A:middle
That's just in the
abstract sense here.

535
00:24:17,616 --> 00:24:20,996 A:middle
So an example of this
would be string of text,

536
00:24:20,996 --> 00:24:22,446 A:middle
we use a simple text formatter.

537
00:24:22,446 --> 00:24:25,806 A:middle
The simple text formatter
will just take that string,

538
00:24:25,916 --> 00:24:29,046 A:middle
it will figure out how best
to put it into the rectangle

539
00:24:29,116 --> 00:24:32,206 A:middle
and it will format it.

540
00:24:32,826 --> 00:24:36,566 A:middle
It will figure out the
line breaks, line spacing,

541
00:24:36,656 --> 00:24:39,106 A:middle
you can set font,
color, things like that.

542
00:24:39,546 --> 00:24:42,146 A:middle
Now all of this text doesn't
actually fit in this rectangle

543
00:24:42,596 --> 00:24:44,276 A:middle
so a formatter knows
that it needs

544
00:24:44,276 --> 00:24:45,846 A:middle
to continue on to the next page.

545
00:24:48,016 --> 00:24:49,656 A:middle
So you can use a
formatter directly

546
00:24:49,656 --> 00:24:51,546 A:middle
if all you're doing is
formatting the content.

547
00:24:52,066 --> 00:24:54,116 A:middle
You can use it with
UIPrintInteractionController

548
00:24:54,596 --> 00:24:56,856 A:middle
or you can add it to the
array of activity items

549
00:24:56,966 --> 00:24:58,116 A:middle
if you're using the share sheet.

550
00:24:59,356 --> 00:25:02,586 A:middle
You can also use formatters
as a helper in a full renderer

551
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

552
00:25:02,656 --> 00:25:03,676 A:middle
and we'll go over that later.

553
00:25:04,326 --> 00:25:07,356 A:middle
For plain text, as I
mentioned you can use

554
00:25:07,356 --> 00:25:11,266 A:middle
UISimpleTextFormatter, you
can specify font, color,

555
00:25:11,766 --> 00:25:14,036 A:middle
alignment like center,
left, justified.

556
00:25:14,216 --> 00:25:18,016 A:middle
For HTML we have a really
handy markup text formatter

557
00:25:18,486 --> 00:25:21,266 A:middle
and that knows how to
layout your HTML according

558
00:25:21,266 --> 00:25:23,066 A:middle
to all the HTML rules on a page.

559
00:25:25,146 --> 00:25:29,756 A:middle
So by default a formatter
uses the printable rect inside

560
00:25:29,756 --> 00:25:32,046 A:middle
of the page which is the
area that's printable

561
00:25:32,546 --> 00:25:34,666 A:middle
but some printers have
really small margins,

562
00:25:34,666 --> 00:25:36,926 A:middle
some printers can print you
know up to 1/10 of an inch

563
00:25:36,926 --> 00:25:40,316 A:middle
to the edge of the page and
so that's not probably ideal

564
00:25:40,806 --> 00:25:42,636 A:middle
so that's why we
have content insets.

565
00:25:43,806 --> 00:25:47,016 A:middle
You can specify area
inside the printable rect,

566
00:25:47,256 --> 00:25:48,156 A:middle
left, right and top.

567
00:25:49,526 --> 00:25:51,956 A:middle
Upper page renderer will just
keep rendering the content

568
00:25:52,546 --> 00:25:54,036 A:middle
until it uses up all the content

569
00:25:54,536 --> 00:25:56,306 A:middle
so the bottom content
inside is ignored.

570
00:25:56,796 --> 00:26:01,326 A:middle
So here's an easy example
of using a formatter

571
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

572
00:26:01,326 --> 00:26:04,076 A:middle
to print some HTML text.

573
00:26:04,076 --> 00:26:06,486 A:middle
Here we just create our
UIMarkupTextFormatter.

574
00:26:07,506 --> 00:26:09,676 A:middle
We're initializing
it with the HTML text

575
00:26:09,776 --> 00:26:11,246 A:middle
that was provided
into this method.

576
00:26:12,216 --> 00:26:14,016 A:middle
And then we set the
URIPrinterAction

577
00:26:14,016 --> 00:26:16,926 A:middle
ControllersPrintFormatter
property to be our formatter.

578
00:26:17,376 --> 00:26:19,766 A:middle
So this is all that it takes

579
00:26:19,806 --> 00:26:21,976 A:middle
to print some HTML
text onto a page.

580
00:26:22,496 --> 00:26:27,786 A:middle
And we set up our UIPrintInfo,
general, job name and so

581
00:26:27,786 --> 00:26:32,756 A:middle
on and then we present.

582
00:26:32,856 --> 00:26:35,516 A:middle
Now all of viewers actually
have print formatters so a lot

583
00:26:35,516 --> 00:26:37,726 A:middle
of times you don't need to
create a formatter yourself.

584
00:26:38,336 --> 00:26:40,726 A:middle
In this case we have
a web view in our app.

585
00:26:41,086 --> 00:26:44,136 A:middle
Instead of initializing our own
print formatter we can just grab

586
00:26:44,216 --> 00:26:46,486 A:middle
the view print formatter
from our web view.

587
00:26:47,586 --> 00:26:49,876 A:middle
Another view that this is
really useful for is a map view,

588
00:26:49,876 --> 00:26:52,606 A:middle
if you need to format map
content to put onto a page,

589
00:26:52,956 --> 00:26:54,426 A:middle
you can just grab the
ViewPrintFormatter

590
00:26:54,426 --> 00:26:55,196 A:middle
from the map view.

591
00:26:55,596 --> 00:26:59,616 A:middle
Okay so that's formatters.

592
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

593
00:27:00,486 --> 00:27:02,086 A:middle
Next, page renderers.

594
00:27:04,376 --> 00:27:06,036 A:middle
Now renderers you can use,

595
00:27:06,436 --> 00:27:07,796 A:middle
they're completely
control content.

596
00:27:07,796 --> 00:27:09,826 A:middle
This is total custom printing.

597
00:27:11,316 --> 00:27:12,566 A:middle
What is a renderer
exactly though?

598
00:27:13,686 --> 00:27:14,856 A:middle
Here's our renderer class.

599
00:27:15,456 --> 00:27:17,546 A:middle
It needs to know the number
of pages it's going to print.

600
00:27:17,926 --> 00:27:22,216 A:middle
And then the system basically
asks it to draw each page.

601
00:27:22,976 --> 00:27:27,356 A:middle
It says you know draw first
page and it goes and draws.

602
00:27:28,676 --> 00:27:30,996 A:middle
It can use any of the
screen drawing methods,

603
00:27:30,996 --> 00:27:32,126 A:middle
you know it can use cores.

604
00:27:32,166 --> 00:27:33,776 A:middle
If you want to have
find viewing control

605
00:27:33,776 --> 00:27:35,956 A:middle
over text you can use core text.

606
00:27:36,306 --> 00:27:38,616 A:middle
Basically anything you
print to screen you can use.

607
00:27:40,876 --> 00:27:42,276 A:middle
So we have full drawing control.

608
00:27:42,496 --> 00:27:45,666 A:middle
It will calculate the page count
and then draw the page contents.

609
00:27:46,356 --> 00:27:49,256 A:middle
The class also has capability
to add space for headers

610
00:27:49,256 --> 00:27:51,536 A:middle
and footers and for
more information

611
00:27:51,536 --> 00:27:53,986 A:middle
on that you can take a look
at the developer documentation

612
00:27:54,626 --> 00:27:58,036 A:middle
or come to our lab later
and you can add formatters.

613
00:27:58,516 --> 00:28:01,276 A:middle
Now what does a renderer
with a formatter look like?

614
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

615
00:28:02,316 --> 00:28:03,516 A:middle
Well here we have
our render object.

616
00:28:04,226 --> 00:28:05,576 A:middle
It's told to draw a page.

617
00:28:05,856 --> 00:28:09,486 A:middle
In this case it's just
drawing some accents at the top

618
00:28:09,486 --> 00:28:10,426 A:middle
and bottom of the page.

619
00:28:11,106 --> 00:28:14,026 A:middle
Then the area in the middle
we want to put some text.

620
00:28:14,476 --> 00:28:17,996 A:middle
So the render has a
simple text formatter.

621
00:28:18,676 --> 00:28:22,056 A:middle
Once it's done drawing the
outside part it will use the UI

622
00:28:22,056 --> 00:28:25,616 A:middle
simple text formatter to draw
our Gettysburg Address here.

623
00:28:26,126 --> 00:28:28,556 A:middle
So you can see how you can kind

624
00:28:28,556 --> 00:28:29,786 A:middle
of combine these
things together.

625
00:28:30,306 --> 00:28:31,956 A:middle
You can think of
the renderer as kind

626
00:28:31,956 --> 00:28:34,216 A:middle
of the captain that's
controlling everything.

627
00:28:34,216 --> 00:28:36,996 A:middle
It can kind of draw
using any method possible

628
00:28:36,996 --> 00:28:39,466 A:middle
and a renderer is just one of
those tools that it can use.

629
00:28:41,196 --> 00:28:43,326 A:middle
So you'll subclass
UIPrintPageRenderer.

630
00:28:44,586 --> 00:28:46,506 A:middle
At a minimum you'll
override number of pages

631
00:28:47,276 --> 00:28:49,086 A:middle
and drop content
for page and index.

632
00:28:49,896 --> 00:28:52,356 A:middle
You can also override
draw header for content,

633
00:28:52,826 --> 00:28:55,286 A:middle
draw header for page and
index and draw footer for page

634
00:28:55,286 --> 00:28:56,546 A:middle
and index and some other things.

635
00:28:57,126 --> 00:28:58,526 A:middle
So you'll set, if you're using

636
00:28:58,526 --> 00:28:59,776 A:middle
with a print interaction
controller,

637
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

638
00:29:00,266 --> 00:29:02,146 A:middle
you'll set the print
page renderer property

639
00:29:02,146 --> 00:29:05,306 A:middle
to be the instantiated
object that you just created

640
00:29:05,306 --> 00:29:06,836 A:middle
of your custom print
page renderer.

641
00:29:07,676 --> 00:29:10,236 A:middle
Or you can add that object
to the array of items

642
00:29:10,236 --> 00:29:12,856 A:middle
when you are creating a
UIActivityViewController

643
00:29:12,906 --> 00:29:13,986 A:middle
when you're doing
the view share sheet.

644
00:29:14,386 --> 00:29:17,446 A:middle
To use formatters you'll
actually create your formatter

645
00:29:17,446 --> 00:29:19,986 A:middle
object and then you'll
call add, print formatter,

646
00:29:19,986 --> 00:29:22,056 A:middle
starting at page index.

647
00:29:22,156 --> 00:29:25,876 A:middle
Formatters can start
at any page.

648
00:29:26,076 --> 00:29:28,246 A:middle
Now showing UI, we have a
couple different options

649
00:29:28,246 --> 00:29:29,196 A:middle
for showing UPrintUI.

650
00:29:30,016 --> 00:29:31,916 A:middle
As I've mentioned we have
printing from the share sheet.

651
00:29:32,576 --> 00:29:35,466 A:middle
This is probably where most
people I think expect printing.

652
00:29:35,946 --> 00:29:40,226 A:middle
This is where it appears in
most of the built in iOS apps.

653
00:29:40,226 --> 00:29:41,486 A:middle
And you also get other things

654
00:29:41,726 --> 00:29:43,326 A:middle
like AirDrop, a cool
new feature.

655
00:29:43,866 --> 00:29:46,846 A:middle
So to add printing
to a share sheet,

656
00:29:47,436 --> 00:29:48,636 A:middle
if you're sharing something

657
00:29:48,636 --> 00:29:52,756 A:middle
like in this case we're sharing
our URL text and UI will figure

658
00:29:52,756 --> 00:29:54,746 A:middle
out all the different sharing
items that should be shown.

659
00:29:55,366 --> 00:29:57,956 A:middle
But if the user is sharing a
web page and they're printing,

660
00:29:58,076 --> 00:30:01,126 A:middle
they're probably going to want
the actual web page printed out.

661
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

662
00:30:01,656 --> 00:30:05,116 A:middle
So here we're actually adding a
renderer to our activity items

663
00:30:05,606 --> 00:30:07,056 A:middle
and we can add our print info

664
00:30:07,056 --> 00:30:10,736 A:middle
which has our job
name and output type.

665
00:30:10,736 --> 00:30:14,346 A:middle
So we just create
that array and we set,

666
00:30:14,346 --> 00:30:18,076 A:middle
when we create our
UIActivityViewController we just

667
00:30:18,076 --> 00:30:19,696 A:middle
set the activity items
to be those items

668
00:30:20,156 --> 00:30:24,506 A:middle
and present using
standard present methods.

669
00:30:24,616 --> 00:30:28,666 A:middle
Now if you're printing using
a print button that goes right

670
00:30:28,666 --> 00:30:29,426 A:middle
into the printing UI,

671
00:30:30,216 --> 00:30:32,426 A:middle
that's when you'll be using
UIPrintInteractionController.

672
00:30:32,826 --> 00:30:34,926 A:middle
On iPhone you just imply
call presentAnimated:

673
00:30:34,926 --> 00:30:36,256 A:middle
completionHandler on iPad.

674
00:30:36,256 --> 00:30:40,336 A:middle
It will be a pop over so you'll
be calling presentFromRect

675
00:30:40,336 --> 00:30:41,686 A:middle
or presentFromBarButtonItem.

676
00:30:42,136 --> 00:30:48,296 A:middle
Now if you're printing as a
menu item, in this case pages,

677
00:30:49,656 --> 00:30:53,046 A:middle
we have an embedded printing
control inside of your control,

678
00:30:54,426 --> 00:30:55,876 A:middle
you'll set your class
as a delegate

679
00:30:55,876 --> 00:30:58,046 A:middle
for the shared
UIPrinterActionController.

680
00:30:58,686 --> 00:31:01,426 A:middle
Your class will implement
printInteractionController

681
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

682
00:31:01,486 --> 00:31:02,536 A:middle
ParentViewController.

683
00:31:03,196 --> 00:31:05,456 A:middle
The printer action controller
will call this to figure

684
00:31:05,456 --> 00:31:07,416 A:middle
out what its parent
view controller is.

685
00:31:07,986 --> 00:31:11,376 A:middle
Then when the user taps print
you'll call presentAnimated:

686
00:31:11,616 --> 00:31:12,416 A:middle
CompletionHandler.

687
00:31:13,506 --> 00:31:16,306 A:middle
And if your parent view is the
UINavigationController it will

688
00:31:16,306 --> 00:31:19,036 A:middle
get a push, and that is what
the case is I'm showing here,

689
00:31:19,806 --> 00:31:22,626 A:middle
if it's a ViewControl it will
get a modal presentation.

690
00:31:23,656 --> 00:31:26,216 A:middle
You'll have access to the
object but just don't peek at it

691
00:31:26,216 --> 00:31:28,296 A:middle
because everything
inside of it is subject

692
00:31:28,296 --> 00:31:29,416 A:middle
to change at any time.

693
00:31:30,786 --> 00:31:34,906 A:middle
If you need control over paper
size like pages, for example,

694
00:31:34,906 --> 00:31:36,356 A:middle
at the document center gap

695
00:31:36,356 --> 00:31:39,296 A:middle
where the user is designing
their layout with the page

696
00:31:39,356 --> 00:31:42,176 A:middle
in mind, we also have
capabilities to do that

697
00:31:42,176 --> 00:31:43,996 A:middle
and so first you'll
design your UI

698
00:31:43,996 --> 00:31:46,086 A:middle
for the user to select the page.

699
00:31:46,086 --> 00:31:48,866 A:middle
And you'll use the
delegate method,

700
00:31:48,936 --> 00:31:50,946 A:middle
print interaction
controller choose paper.

701
00:31:52,246 --> 00:31:54,676 A:middle
There'll be an array of papers
that get passed into this

702
00:31:54,676 --> 00:31:58,036 A:middle
and your delegate is responsible
for picking the one to use.

703
00:31:59,146 --> 00:32:01,316 A:middle
This gets called after the
user has selected the printer,

704
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

705
00:32:02,126 --> 00:32:03,696 A:middle
iOS communicates with
the printer to figure

706
00:32:03,696 --> 00:32:05,196 A:middle
out what sizes are available

707
00:32:05,196 --> 00:32:10,166 A:middle
and then some printers
have paper size sensors,

708
00:32:10,166 --> 00:32:12,186 A:middle
like I mentioned, that can
tell the types of papers

709
00:32:12,186 --> 00:32:12,846 A:middle
that are at the printer.

710
00:32:13,496 --> 00:32:14,386 A:middle
The array that gets passed

711
00:32:14,386 --> 00:32:17,186 A:middle
to your app will actually be
those papers that are available

712
00:32:17,186 --> 00:32:18,356 A:middle
at the printer in that case.

713
00:32:18,416 --> 00:32:20,156 A:middle
So this array of
papers that gets passed

714
00:32:20,156 --> 00:32:21,826 A:middle
to you could be a lot
of different things

715
00:32:21,826 --> 00:32:23,946 A:middle
but you'll be responsible
for selecting it.

716
00:32:24,026 --> 00:32:25,506 A:middle
So here's an example of that.

717
00:32:25,866 --> 00:32:27,366 A:middle
Here we're just creating
a paper size,

718
00:32:27,666 --> 00:32:30,516 A:middle
CGSize that's just
basically 8 1/2 by 11.

719
00:32:31,476 --> 00:32:35,656 A:middle
We'll use UIPrintPaper's
best paper for page size method

720
00:32:35,656 --> 00:32:38,226 A:middle
so we provided this as
a great way for matching

721
00:32:38,606 --> 00:32:40,626 A:middle
because paper matching is
actually pretty complicated

722
00:32:40,626 --> 00:32:42,846 A:middle
if you want to find the closest
match so we've provided this

723
00:32:42,846 --> 00:32:44,466 A:middle
for you and we recommend
that you use this.

724
00:32:44,556 --> 00:32:48,156 A:middle
Next we have roll paper, this
is what Howard mentioned,

725
00:32:48,156 --> 00:32:49,536 A:middle
and this is new in iOS 7.

726
00:32:50,136 --> 00:32:52,036 A:middle
Basically you'll use
the delegate method,

727
00:32:52,576 --> 00:32:54,786 A:middle
print interaction controller,
cut length for paper.

728
00:32:55,126 --> 00:32:57,826 A:middle
So this works pretty
similarly to the choose paper

729
00:32:57,826 --> 00:33:00,746 A:middle
but in this case you're
passed in a UIPrintPaper.

730
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

731
00:33:01,706 --> 00:33:04,296 A:middle
Once the user selected a
printer that has a roll loaded,

732
00:33:04,296 --> 00:33:07,436 A:middle
the UIPrintPaper
will have the width,

733
00:33:07,436 --> 00:33:10,626 A:middle
will be the roll width, and
the height will be the maximum

734
00:33:10,626 --> 00:33:12,626 A:middle
height that's possible
on this roll printer.

735
00:33:13,236 --> 00:33:15,626 A:middle
So by default if your app
doesn't implement this cut

736
00:33:15,626 --> 00:33:18,316 A:middle
length for paper and the
user chooses a roll printer,

737
00:33:18,706 --> 00:33:20,966 A:middle
the default length will be
proportional to the height.

738
00:33:21,016 --> 00:33:22,916 A:middle
So if you normally would
be printing US letter,

739
00:33:22,916 --> 00:33:25,656 A:middle
we'll choose a paper size
proportional to US letter

740
00:33:26,596 --> 00:33:28,626 A:middle
or if you have a photo,
4 by 6 or something,

741
00:33:28,626 --> 00:33:30,906 A:middle
we'll choose a size that's
proportional to that.

742
00:33:31,546 --> 00:33:34,816 A:middle
So here's an example of telling
the printer system how long

743
00:33:34,816 --> 00:33:35,176 A:middle
to cut.

744
00:33:35,176 --> 00:33:38,186 A:middle
In this case all we're doing
is returning 2 times the width.

745
00:33:41,866 --> 00:33:43,386 A:middle
So next we'll go
over the demo here.

746
00:33:43,386 --> 00:33:44,786 A:middle
This is what our UI's
going to look like.

747
00:33:45,506 --> 00:33:46,646 A:middle
And I have bad news.

748
00:33:47,616 --> 00:33:50,226 A:middle
I did not win the Apple
design award for this UI.

749
00:33:50,226 --> 00:33:50,566 A:middle
[ laughter ]

750
00:33:50,566 --> 00:33:52,256 A:middle
It's pretty simple.

751
00:33:52,256 --> 00:33:55,676 A:middle
It's just like a text field
and a couple different ways

752
00:33:55,676 --> 00:33:57,496 A:middle
for the user to select
the font and the color.

753
00:33:59,006 --> 00:34:01,636 A:middle
And then when user
selects a roll printer,

754
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

755
00:34:01,636 --> 00:34:03,476 A:middle
we'll be printing a
banner so it will come

756
00:34:03,476 --> 00:34:05,306 A:middle
out as a banner printed
across the roll.

757
00:34:05,666 --> 00:34:07,216 A:middle
So how are we going to do this?

758
00:34:08,306 --> 00:34:12,275 A:middle
We'll have our string of
text, here's our roll of paper

759
00:34:12,335 --> 00:34:13,716 A:middle
that we just found
at the printer.

760
00:34:15,126 --> 00:34:17,315 A:middle
We'll tell the printing
system that we're going

761
00:34:17,315 --> 00:34:18,706 A:middle
to be doing a landscape job

762
00:34:18,706 --> 00:34:20,866 A:middle
so that we print the
text along the roll.

763
00:34:20,866 --> 00:34:24,196 A:middle
We're going to use a UI
simple text formatter

764
00:34:24,196 --> 00:34:27,266 A:middle
to format the text with
the font the user selected.

765
00:34:27,266 --> 00:34:29,956 A:middle
We're going to figure out
how big we can make it.

766
00:34:31,045 --> 00:34:35,466 A:middle
We'll calculate that total size
and we'll return a cut length.

767
00:34:38,106 --> 00:34:39,306 A:middle
And I'll show that demo now.

768
00:34:39,585 --> 00:34:45,176 A:middle
Okay so here we have our
print banner project.

769
00:34:45,456 --> 00:34:47,795 A:middle
So this is available in
the prerelease section

770
00:34:47,795 --> 00:34:49,576 A:middle
of the developer documentation

771
00:34:49,576 --> 00:34:51,126 A:middle
so it's been available
this week.

772
00:34:53,565 --> 00:34:56,976 A:middle
So basically everything that's
going on in this app happens

773
00:34:56,976 --> 00:34:57,886 A:middle
in the view controller.

774
00:34:58,456 --> 00:35:02,816 A:middle
We have some pretty
boiler plate things

775
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

776
00:35:02,816 --> 00:35:05,826 A:middle
that are just finding the
font that the user selected

777
00:35:05,826 --> 00:35:08,776 A:middle
and finding a color that
the user selected in the UI.

778
00:35:10,276 --> 00:35:11,236 A:middle
Here's our print method.

779
00:35:11,946 --> 00:35:14,466 A:middle
First we're grabbing the shared
UIPrintInteractionController.

780
00:35:15,016 --> 00:35:18,356 A:middle
We're setting the controller's
delegate to be ourselves

781
00:35:18,486 --> 00:35:20,986 A:middle
because we want to be called
for cut length for paper.

782
00:35:22,986 --> 00:35:24,946 A:middle
We setup a completion handler

783
00:35:24,946 --> 00:35:27,186 A:middle
which just basically logs an
error if something goes wrong.

784
00:35:28,836 --> 00:35:31,686 A:middle
Here we're setting our printInfo
output type to be general

785
00:35:31,686 --> 00:35:34,196 A:middle
because the user can
select any number of colors

786
00:35:34,366 --> 00:35:35,286 A:middle
so it's not Grayscale.

787
00:35:36,876 --> 00:35:39,226 A:middle
Here we're setting the
orientation to be landscape

788
00:35:39,226 --> 00:35:40,506 A:middle
so we're printing
along the roll.

789
00:35:41,036 --> 00:35:43,686 A:middle
Here we're setting the job name

790
00:35:43,886 --> 00:35:47,096 A:middle
to be just whatever the user
has entered into the text field

791
00:35:47,196 --> 00:35:50,006 A:middle
and then we set the
printInfo on the controller.

792
00:35:52,576 --> 00:35:54,526 A:middle
Next we create our
simple text formatter.

793
00:35:54,886 --> 00:35:57,056 A:middle
We're initializing it with
the text from the text field.

794
00:35:58,256 --> 00:36:02,176 A:middle
We set the text formatters color
to be the users chosen color

795
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

796
00:36:02,686 --> 00:36:04,606 A:middle
and the font to be
the users chosen font.

797
00:36:04,996 --> 00:36:08,636 A:middle
We set the controller
print formatter property

798
00:36:08,636 --> 00:36:11,316 A:middle
to be our simple text
formatter we created

799
00:36:11,316 --> 00:36:13,966 A:middle
and then we just present the UI.

800
00:36:14,076 --> 00:36:16,186 A:middle
Now when the user selects
the printer it has a roll.

801
00:36:18,356 --> 00:36:20,816 A:middle
This delegate will be
called cut length for paper

802
00:36:21,306 --> 00:36:23,746 A:middle
with the UIPrintPaper
representing the roll.

803
00:36:24,176 --> 00:36:28,796 A:middle
Here we're just calculating
the size

804
00:36:28,796 --> 00:36:31,226 A:middle
of our text based
on the default font.

805
00:36:33,336 --> 00:36:35,566 A:middle
We'll do a simple calculation
to figure out how big

806
00:36:35,566 --> 00:36:37,566 A:middle
that we can actually
make it on the page.

807
00:36:38,106 --> 00:36:42,226 A:middle
And we'll create a new
font based on that size

808
00:36:42,226 --> 00:36:43,086 A:middle
that we just calculated.

809
00:36:46,016 --> 00:36:49,086 A:middle
Here we're finding how big our
final text size is going to be

810
00:36:49,086 --> 00:36:52,326 A:middle
with that font that we
calculated using just a size

811
00:36:52,326 --> 00:36:53,086 A:middle
with attributes.

812
00:36:53,386 --> 00:36:58,526 A:middle
And we set our simple text
formatters font to be the font

813
00:36:58,526 --> 00:37:00,536 A:middle
that we just calculated
with the size we calculated.

814
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

815
00:37:02,926 --> 00:37:05,866 A:middle
Now next we actually have
to figure out the margins.

816
00:37:05,996 --> 00:37:08,336 A:middle
So we figured out how wide
our text is going to be

817
00:37:08,446 --> 00:37:10,576 A:middle
but if we just returned

818
00:37:10,576 --> 00:37:13,796 A:middle
that length we wouldn't be
accounting for the margins.

819
00:37:14,296 --> 00:37:17,456 A:middle
Even roll printers can have
margins on top, bottom,

820
00:37:17,456 --> 00:37:20,146 A:middle
left and right so we need
to add in our margins.

821
00:37:21,086 --> 00:37:25,536 A:middle
To figure out margins we just
subtract our printable rect

822
00:37:25,536 --> 00:37:28,686 A:middle
from our paper size so that
gives us margins on both sides.

823
00:37:29,246 --> 00:37:33,776 A:middle
So we'll return the width
of our text plus the length

824
00:37:33,776 --> 00:37:37,086 A:middle
of these margins and plus
some small padding factor

825
00:37:37,176 --> 00:37:38,606 A:middle
to make sure things fit.

826
00:37:40,506 --> 00:37:41,246 A:middle
So we'll run this

827
00:37:41,246 --> 00:37:49,996 A:middle
in the simulator here
and here's our UI.

828
00:37:50,476 --> 00:37:51,186 A:middle
I'll choose script.

829
00:37:52,606 --> 00:37:53,696 A:middle
We'll enter some text in here.

830
00:37:54,196 --> 00:38:01,266 A:middle
[ Silence ]

831
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

832
00:38:01,766 --> 00:38:03,966 A:middle
San Francisco is
full of hipsters.

833
00:38:04,896 --> 00:38:05,536 A:middle
[laughter] This is true.

834
00:38:06,116 --> 00:38:09,176 A:middle
So next, what are we
going to print this on?

835
00:38:10,306 --> 00:38:11,696 A:middle
Well we ship a really great tool

836
00:38:11,696 --> 00:38:14,366 A:middle
with Xcode that's
a printer simulator

837
00:38:14,366 --> 00:38:16,056 A:middle
so as you're developing
your app you don't have

838
00:38:16,056 --> 00:38:17,016 A:middle
to be wasting paper.

839
00:38:17,856 --> 00:38:18,886 A:middle
To get to this simulator,

840
00:38:18,966 --> 00:38:21,366 A:middle
from the iOS simulator
we can just go file,

841
00:38:21,366 --> 00:38:27,416 A:middle
open printer simulator or we
can, from Xcodes developer menu,

842
00:38:29,306 --> 00:38:32,126 A:middle
we can choose open developer
tool, that's available here too.

843
00:38:32,436 --> 00:38:38,656 A:middle
So the printer simulator has
a bunch of simulated printers.

844
00:38:38,656 --> 00:38:41,706 A:middle
We have different
types, color lasers,

845
00:38:41,706 --> 00:38:43,266 A:middle
Inkjets, two sided printers.

846
00:38:44,356 --> 00:38:46,476 A:middle
New in the latest
Xcode, Xcode 5,

847
00:38:47,616 --> 00:38:49,446 A:middle
we have a 36 inch roll printer

848
00:38:49,976 --> 00:38:51,506 A:middle
and we have a simulated
label printer.

849
00:38:54,446 --> 00:38:56,656 A:middle
Now roll printers
always detect the size

850
00:38:56,656 --> 00:38:57,646 A:middle
of the roll that's loaded.

851
00:38:57,646 --> 00:38:58,776 A:middle
You always know the size.

852
00:38:59,496 --> 00:39:02,106 A:middle
So how do we set a size
with our simulated printer?

853
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

854
00:39:03,586 --> 00:39:06,476 A:middle
Well we have this load
paper button here in the UI.

855
00:39:07,236 --> 00:39:10,486 A:middle
We can tap that and
here we get a view

856
00:39:10,486 --> 00:39:12,126 A:middle
of all the different
simulated printers

857
00:39:12,126 --> 00:39:13,556 A:middle
and which size is
loaded in each.

858
00:39:14,616 --> 00:39:16,206 A:middle
We'll go to the simulated
label printer

859
00:39:16,816 --> 00:39:19,036 A:middle
and actually load a 2
inch roll so we're going

860
00:39:19,036 --> 00:39:20,416 A:middle
to print a 2 inch roll banner.

861
00:39:22,476 --> 00:39:23,266 A:middle
Click okay.

862
00:39:25,246 --> 00:39:26,186 A:middle
We'll choose the label printer.

863
00:39:31,276 --> 00:39:32,636 A:middle
And there we have our output

864
00:39:32,786 --> 00:39:36,146 A:middle
so it's been formatted
correctly and spans the roll.

865
00:39:36,536 --> 00:39:43,486 A:middle
Now we're dynamic here,
we're dynamic here

866
00:39:43,486 --> 00:39:44,816 A:middle
so we can choose
a different font.

867
00:39:45,176 --> 00:39:48,306 A:middle
We can go in, load a 4
inch roll if we want,

868
00:39:51,906 --> 00:39:55,096 A:middle
print that same content
to the label printer

869
00:39:55,096 --> 00:39:56,106 A:middle
and then fills the roll.

870
00:39:56,106 --> 00:40:00,876 A:middle
Now as Howard mentioned we have
an actual real printer here.

871
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

872
00:40:01,646 --> 00:40:04,486 A:middle
We'll go ahead and choose that.

873
00:40:08,106 --> 00:40:08,786 A:middle
We'll print that out.

874
00:40:08,786 --> 00:40:11,186 A:middle
So Brother makes really
great, very reliable printers

875
00:40:11,186 --> 00:40:12,336 A:middle
and this one, like
Howard mentioned,

876
00:40:12,336 --> 00:40:15,006 A:middle
will actually be getting
an AirPrint upgrade later

877
00:40:15,006 --> 00:40:15,556 A:middle
this year.

878
00:40:15,556 --> 00:40:16,386 A:middle
It's shipping right now.

879
00:40:17,206 --> 00:40:18,616 A:middle
It takes a little
bit of time for it

880
00:40:18,616 --> 00:40:20,036 A:middle
to get warmed up
here as it prints.

881
00:40:20,796 --> 00:40:24,846 A:middle
It's a thermal printer so the
array needs to get warmed up.

882
00:40:24,846 --> 00:40:26,036 A:middle
We haven't printed to
it in quite a while.

883
00:40:26,456 --> 00:40:27,766 A:middle
And here we go.

884
00:40:27,766 --> 00:40:29,276 A:middle
[ Noise ]

885
00:40:29,276 --> 00:40:38,706 A:middle
And so there we have it, so
there's our printed roll.

886
00:40:43,176 --> 00:40:48,706 A:middle
So I hope we've shown
you that printing

887
00:40:48,706 --> 00:40:50,006 A:middle
in your app is really easy.

888
00:40:51,026 --> 00:40:53,896 A:middle
Printing items like PDF's
and images can be really just

889
00:40:53,896 --> 00:40:55,156 A:middle
like 10 lines of code.

890
00:40:55,856 --> 00:40:57,376 A:middle
We provide formatters
and renderers

891
00:40:57,376 --> 00:40:58,796 A:middle
to give you full
control of printing

892
00:40:58,796 --> 00:41:00,046 A:middle
so you can make beautiful
output.

893
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

894
00:41:00,426 --> 00:41:03,526 A:middle
And like I mentioned the printer
banner sample app is available

895
00:41:03,556 --> 00:41:04,696 A:middle
on the developer website.

896
00:41:05,076 --> 00:41:06,296 A:middle
With that I'll hand it
back over to Howard.

897
00:41:07,246 --> 00:41:13,436 A:middle
>> Howard Miller:
Thanks for coming.

898
00:41:13,936 --> 00:41:16,080 A:middle
[ Applause ]

899
