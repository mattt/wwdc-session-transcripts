X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1
00:00:00,506 --> 00:00:10,426 A:middle
[ Silence ]

2
00:00:10,926 --> 00:00:11,836 A:middle
>> Good morning.

3
00:00:13,126 --> 00:00:16,386 A:middle
[applause] Before
we get started,

4
00:00:17,176 --> 00:00:19,326 A:middle
I'd like to do a
small, informal survey.

5
00:00:19,926 --> 00:00:22,076 A:middle
How many of you are
new Apple developers?

6
00:00:22,076 --> 00:00:27,776 A:middle
Please clap your hands.

7
00:00:27,916 --> 00:00:28,466 A:middle
[applause] Excellent.

8
00:00:28,606 --> 00:00:32,536 A:middle
Welcome. And how many
of you have made an app

9
00:00:32,986 --> 00:00:35,746 A:middle
for iPhone, iPad, or iPod Touch?

10
00:00:35,746 --> 00:00:36,626 A:middle
Please clap your hands.

11
00:00:36,626 --> 00:00:42,086 A:middle
[applause] It sounds
like about all of you.

12
00:00:42,086 --> 00:00:44,756 A:middle
OK. And how many of those

13
00:00:44,756 --> 00:00:47,456 A:middle
that have made apps have
brought those same apps

14
00:00:47,746 --> 00:00:50,146 A:middle
over to OS X, to the Mac?

15
00:00:51,536 --> 00:00:52,666 A:middle
[applause] Sounds
like a few of you.

16
00:00:52,666 --> 00:00:54,636 A:middle
But it sounds like we're all
in the right place today.

17
00:00:54,976 --> 00:00:56,906 A:middle
Did you know that in
the last quarter alone,

18
00:00:56,906 --> 00:00:58,976 A:middle
Apple sold nearly
4 million Macs?

19
00:00:59,866 --> 00:01:02,606 A:middle
Yeah, and we want your apps to
be in every single one of them.

20
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

21
00:01:02,836 --> 00:01:04,696 A:middle
And we're here to show
you how to do that.

22
00:01:05,525 --> 00:01:07,806 A:middle
Now, after you leave
here today, you're going

23
00:01:07,806 --> 00:01:09,666 A:middle
to be ready to do three things.

24
00:01:10,796 --> 00:01:16,176 A:middle
Number one, number one, yeah,
that's all right, you're going

25
00:01:16,176 --> 00:01:19,366 A:middle
to be able to rethink
your iOS app in terms

26
00:01:19,366 --> 00:01:22,766 A:middle
of a Mac, in terms of OS X.

27
00:01:23,156 --> 00:01:25,886 A:middle
Two, you're going
to be able to--

28
00:01:25,886 --> 00:01:28,116 A:middle
you're going to be ready
to restructure your code,

29
00:01:28,276 --> 00:01:30,396 A:middle
just cleanly separate
your model from your view

30
00:01:30,396 --> 00:01:33,516 A:middle
and your controller so that you
can maximize your code reuse.

31
00:01:33,516 --> 00:01:35,076 A:middle
And number 3 is easy.

32
00:01:35,436 --> 00:01:37,616 A:middle
You're going to be ready
to just get started.

33
00:01:38,976 --> 00:01:40,236 A:middle
So let's talk about your design.

34
00:01:40,696 --> 00:01:45,026 A:middle
Many of you may be thinking,
"OK, so I have my iOS app

35
00:01:45,026 --> 00:01:47,206 A:middle
and I'm going to bring it
over to OS X and I'm going

36
00:01:47,206 --> 00:01:48,336 A:middle
to leave everything the same

37
00:01:48,336 --> 00:01:49,976 A:middle
because that's going
to be pretty easy."

38
00:01:50,296 --> 00:01:52,896 A:middle
I'm going to discourage
you from doing that.

39
00:01:53,046 --> 00:01:55,996 A:middle
Your users are going to love
it if you embrace the things

40
00:01:55,996 --> 00:01:56,976 A:middle
that make the Mac great.

41
00:01:57,796 --> 00:01:59,896 A:middle
So what makes the Mac
different form iOS?

42
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

43
00:02:01,126 --> 00:02:04,006 A:middle
Well, for one thing,
screen size.

44
00:02:05,256 --> 00:02:10,476 A:middle
If you think about it, your
iPhone is on a 4-inch display

45
00:02:10,536 --> 00:02:13,136 A:middle
if you have an iPhone 5,
or if you have an iPad,

46
00:02:13,136 --> 00:02:14,306 A:middle
it's on a 10-inch display.

47
00:02:15,196 --> 00:02:17,746 A:middle
But our Macs go from
an 11-inch Macbook Air

48
00:02:17,746 --> 00:02:20,056 A:middle
to a 27-inch Thunderbolt
Display.

49
00:02:20,086 --> 00:02:24,466 A:middle
And your users could
have multiple displays.

50
00:02:25,226 --> 00:02:26,386 A:middle
So, that's something
to think about.

51
00:02:26,506 --> 00:02:30,596 A:middle
And then on top of that,
your content is going to be

52
00:02:30,596 --> 00:02:31,976 A:middle
on a window that's resizable.

53
00:02:32,686 --> 00:02:37,536 A:middle
So, who knows how big your
content will be for the user

54
00:02:37,536 --> 00:02:38,576 A:middle
at any one point in time.

55
00:02:39,146 --> 00:02:41,956 A:middle
So, I'm going to encourage
you to use Auto Layout

56
00:02:42,336 --> 00:02:44,356 A:middle
because that's going to
solve a lot of your issues

57
00:02:44,716 --> 00:02:47,416 A:middle
with these different
display sizes.

58
00:02:48,426 --> 00:02:50,006 A:middle
OK. Let's talk about
input devices.

59
00:02:51,686 --> 00:02:54,576 A:middle
On iOS, your primary input
device is your finger

60
00:02:55,016 --> 00:03:00,616 A:middle
and as such, we've given
you guidance to use controls

61
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

62
00:03:00,616 --> 00:03:03,976 A:middle
and buttons that are
44 points by 44 points.

63
00:03:05,336 --> 00:03:09,936 A:middle
Now, in OS X, your input
devices are a trackpad or mouse,

64
00:03:10,476 --> 00:03:11,726 A:middle
and are much more precise.

65
00:03:11,726 --> 00:03:15,126 A:middle
So you don't want to make your
controls unnecessarily large

66
00:03:15,126 --> 00:03:16,216 A:middle
on OS X.

67
00:03:16,216 --> 00:03:17,796 A:middle
It's going to look-- well,

68
00:03:17,796 --> 00:03:19,966 A:middle
it looks out of place
so keep that in mind.

69
00:03:20,906 --> 00:03:22,246 A:middle
What about other things?

70
00:03:22,246 --> 00:03:24,146 A:middle
What are some other things
that make the Mac different?

71
00:03:25,076 --> 00:03:30,226 A:middle
Well, for one thing, the Mac's
got menus and keyboard shortcuts

72
00:03:30,336 --> 00:03:32,156 A:middle
and these aren't just any menus.

73
00:03:32,856 --> 00:03:35,006 A:middle
Mac users are going to
be expecting to see File,

74
00:03:35,006 --> 00:03:37,816 A:middle
Edit, and the Window menu.

75
00:03:38,256 --> 00:03:39,586 A:middle
And they're going
to be able to--

76
00:03:39,586 --> 00:03:42,916 A:middle
they're expecting to see the
standard keyboard shortcuts

77
00:03:43,336 --> 00:03:44,316 A:middle
for those menus.

78
00:03:44,766 --> 00:03:46,476 A:middle
Like for instance,
Cut, Copy, and Paste.

79
00:03:46,996 --> 00:03:50,956 A:middle
And they're going to expect
to see Undo and Redo support.

80
00:03:51,146 --> 00:03:53,576 A:middle
You may have it in your
iOS apps but you may not.

81
00:03:53,606 --> 00:03:55,766 A:middle
But on the Mac, if
it's appropriate,

82
00:03:55,766 --> 00:03:58,846 A:middle
please use that because your
Mac users will expect it.

83
00:03:58,886 --> 00:04:03,426 A:middle
They're going to expect to be
able to drag files and texts

84
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

85
00:04:03,426 --> 00:04:07,596 A:middle
and images into, out of, and
between windows in your apps.

86
00:04:08,846 --> 00:04:11,666 A:middle
Quick Look is a technology
on OS X that allows users

87
00:04:11,666 --> 00:04:15,556 A:middle
to see the contents of your file
without opening it in your app.

88
00:04:16,586 --> 00:04:18,616 A:middle
And we've handled many
of the common cases

89
00:04:18,616 --> 00:04:20,706 A:middle
like for PDF, and texts, images.

90
00:04:21,406 --> 00:04:23,826 A:middle
But if you're using
a custom file format,

91
00:04:23,826 --> 00:04:25,946 A:middle
if you're making a custom
file format in your app,

92
00:04:26,996 --> 00:04:30,996 A:middle
it'll be great if you added a
Quick Look plugin to allow users

93
00:04:30,996 --> 00:04:34,566 A:middle
to see the contents of your
file without opening your app.

94
00:04:34,566 --> 00:04:35,896 A:middle
That would really
make them happy.

95
00:04:36,786 --> 00:04:40,756 A:middle
Similarly, Spotlight, that's
the technology that allows users

96
00:04:40,756 --> 00:04:42,776 A:middle
to search the contents
of your file.

97
00:04:42,776 --> 00:04:44,656 A:middle
So if you have a
custom file format,

98
00:04:45,596 --> 00:04:48,406 A:middle
consider making a
custom Spotlight indexer

99
00:04:48,406 --> 00:04:51,036 A:middle
so that users can search
the contents of your file.

100
00:04:51,696 --> 00:04:54,286 A:middle
So then, we've talked
about design a little bit.

101
00:04:54,286 --> 00:04:55,416 A:middle
Let's talk about your code.

102
00:04:56,216 --> 00:04:58,836 A:middle
Now the good news is that
you can leverage a lot

103
00:04:58,836 --> 00:05:03,216 A:middle
of existing knowledge that
you already know from iOS.

104
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

105
00:05:03,666 --> 00:05:05,096 A:middle
For instance, the
design patterns,

106
00:05:05,586 --> 00:05:09,376 A:middle
the Model-View-Controller,
the Target-Action pattern,

107
00:05:09,806 --> 00:05:14,596 A:middle
the Responder Chain Delegation,
all of those patterns work

108
00:05:14,596 --> 00:05:16,746 A:middle
on iOS just like
they do in OS X.

109
00:05:17,266 --> 00:05:20,536 A:middle
A new development
environment, Xcode,

110
00:05:20,656 --> 00:05:24,946 A:middle
with its built-in user Interface
Editor and Static Analyzer,

111
00:05:25,416 --> 00:05:29,526 A:middle
its profiling tools,
and all the things

112
00:05:29,526 --> 00:05:32,416 A:middle
like the source control tools
that you get from Xcode,

113
00:05:32,416 --> 00:05:35,216 A:middle
all of those are available
on OS X as well as an iOS

114
00:05:35,216 --> 00:05:37,666 A:middle
because you're using the
same development tool, Xcode.

115
00:05:39,396 --> 00:05:44,926 A:middle
The languages, C, Objective-C,
C++, and many of the frameworks

116
00:05:44,986 --> 00:05:47,526 A:middle
like Core Foundation
and Foundation are going

117
00:05:47,526 --> 00:05:51,106 A:middle
to be the same on iOS
as they are in OS X.

118
00:05:52,156 --> 00:05:53,946 A:middle
The resources, your images,

119
00:05:54,276 --> 00:05:56,636 A:middle
some of your images might be
different because you're going

120
00:05:56,636 --> 00:05:59,486 A:middle
to be resizing them to
make them smaller perhaps,

121
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

122
00:06:00,336 --> 00:06:01,626 A:middle
but some of them
will be the same.

123
00:06:01,626 --> 00:06:02,846 A:middle
You'll be able to
use those again.

124
00:06:03,366 --> 00:06:06,006 A:middle
And then, also the
image technologies,

125
00:06:06,276 --> 00:06:09,736 A:middle
this week we're talking about
asset catalogues, Xcode,

126
00:06:09,736 --> 00:06:12,136 A:middle
the Xcode talked about
that and that's one

127
00:06:12,136 --> 00:06:15,636 A:middle
of the things that's
available on both OS X and iOS

128
00:06:16,646 --> 00:06:19,206 A:middle
and you can use that for this,
and also the naming conventions.

129
00:06:19,206 --> 00:06:22,576 A:middle
If you're doing a Retna Mac,
you're going to add at 2X

130
00:06:22,986 --> 00:06:26,206 A:middle
to your file names just
like you do on iOS.

131
00:06:26,716 --> 00:06:29,216 A:middle
And localizations,
a lot of your--

132
00:06:29,436 --> 00:06:31,456 A:middle
most of your strings are
going to be exactly the same

133
00:06:31,816 --> 00:06:33,416 A:middle
and the technologies used

134
00:06:33,666 --> 00:06:35,006 A:middle
to localize are going
to be the same.

135
00:06:35,006 --> 00:06:37,916 A:middle
So you're going to use NS
localized string method

136
00:06:38,296 --> 00:06:41,866 A:middle
to make sure that your
localizations work.

137
00:06:42,826 --> 00:06:45,096 A:middle
So, I've outlined some of
the things that are the same.

138
00:06:45,096 --> 00:06:45,836 A:middle
So what's different?

139
00:06:45,836 --> 00:06:49,156 A:middle
Well, let's take a deeper
look at the technology stack.

140
00:06:49,736 --> 00:06:54,816 A:middle
So here's a big table
and that has a lot

141
00:06:54,816 --> 00:06:57,506 A:middle
of the frameworks
on iOS and OS X.

142
00:06:57,506 --> 00:06:59,266 A:middle
There's a couple of things
I'd like you to notice.

143
00:06:59,266 --> 00:07:01,966 A:middle
Number one is that a
lot of the frameworks

144
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

145
00:07:01,966 --> 00:07:04,976 A:middle
on iOS are the exact
same as they are in OS X.

146
00:07:04,976 --> 00:07:09,486 A:middle
And this is actually just
a small subset of all

147
00:07:09,486 --> 00:07:11,076 A:middle
of the frameworks that
we have available.

148
00:07:11,076 --> 00:07:12,316 A:middle
I only did one slide here.

149
00:07:13,006 --> 00:07:13,936 A:middle
Actually, I did two.

150
00:07:13,936 --> 00:07:17,046 A:middle
We'll look at the other one
in a second, but, anyway.

151
00:07:17,196 --> 00:07:19,846 A:middle
The-- but yeah, so keep in mind
that most of the frameworks--

152
00:07:19,846 --> 00:07:21,406 A:middle
a lot of the frameworks
are going to be the same.

153
00:07:21,406 --> 00:07:24,086 A:middle
Now, there are some that are
different and of the ones

154
00:07:24,086 --> 00:07:25,266 A:middle
that are different,
most of the ones

155
00:07:25,266 --> 00:07:28,416 A:middle
that are different are going to
be subsets of the OS X version.

156
00:07:28,416 --> 00:07:30,986 A:middle
So you get to keep your code
the same because you're going

157
00:07:30,986 --> 00:07:35,446 A:middle
to be using the subset
part on iOS.

158
00:07:35,446 --> 00:07:37,736 A:middle
So when you move to OS X, you
can even use some new features.

159
00:07:38,746 --> 00:07:43,016 A:middle
The last thing I would like to
point out, most of you are going

160
00:07:43,016 --> 00:07:48,586 A:middle
to be spending a lot of time
in UIKit and the news is

161
00:07:48,586 --> 00:07:51,366 A:middle
that UIKit does not
exist on OS X.

162
00:07:51,756 --> 00:07:54,126 A:middle
But the good news is
that we have AppKit.

163
00:07:54,196 --> 00:07:56,836 A:middle
And actually, UIKit
was inspired by AppKit.

164
00:07:57,186 --> 00:07:57,556 A:middle
That's right.

165
00:07:57,686 --> 00:08:00,806 A:middle
That means that a lot of the
things will feel very familiar.

166
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

167
00:08:00,986 --> 00:08:04,816 A:middle
And we're going to talk about
some of the differences and ways

168
00:08:04,816 --> 00:08:06,016 A:middle
that you can cope with those.

169
00:08:06,656 --> 00:08:08,866 A:middle
And then one more slide on
technology, I want to talk

170
00:08:08,866 --> 00:08:10,666 A:middle
about games briefly
because some of you--

171
00:08:10,926 --> 00:08:12,556 A:middle
many of you may be making games.

172
00:08:13,036 --> 00:08:15,316 A:middle
If you're making games
for OS X, the good--

173
00:08:15,376 --> 00:08:16,446 A:middle
there's some great news.

174
00:08:16,446 --> 00:08:19,056 A:middle
One thing is we have OpenGL,
Game Center, and SpriteKit.

175
00:08:19,056 --> 00:08:24,236 A:middle
And if you're making a Mac 2D
game, really take advantage

176
00:08:24,236 --> 00:08:27,446 A:middle
of SpriteKit if you can
because that's going to do most

177
00:08:27,446 --> 00:08:28,496 A:middle
of the heavy lifting for you.

178
00:08:28,496 --> 00:08:30,216 A:middle
That's already cross-platform

179
00:08:30,216 --> 00:08:32,056 A:middle
and so you'll have an
app that works on both.

180
00:08:33,135 --> 00:08:36,135 A:middle
So, now that we've talked
a little bit about that,

181
00:08:36,226 --> 00:08:38,785 A:middle
let's go into design patterns.

182
00:08:40,076 --> 00:08:41,446 A:middle
Someone recognize that,

183
00:08:41,446 --> 00:08:43,606 A:middle
that's the Model-View-Controller
design pattern,

184
00:08:44,346 --> 00:08:46,086 A:middle
and hopefully you're
using that in your apps.

185
00:08:46,526 --> 00:08:47,036 A:middle
If you're not,

186
00:08:47,436 --> 00:08:50,326 A:middle
Model-View-Controller is a
software architecture pattern

187
00:08:50,326 --> 00:08:53,346 A:middle
that separates the
representation of information

188
00:08:53,346 --> 00:08:54,816 A:middle
from the user's interaction
with it.

189
00:08:55,626 --> 00:08:58,116 A:middle
And the model, we're
going to talk about first,

190
00:08:58,986 --> 00:09:02,736 A:middle
is only supposed to be used
for your data structures,

191
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

192
00:09:03,556 --> 00:09:04,896 A:middle
your business rules and logic.

193
00:09:05,336 --> 00:09:07,516 A:middle
And if you cleanly
separate it out that way,

194
00:09:07,616 --> 00:09:09,126 A:middle
you're going to get
some benefits.

195
00:09:09,596 --> 00:09:12,816 A:middle
Almost all of your model
code is going to be reusable.

196
00:09:13,136 --> 00:09:17,026 A:middle
Why? Because the frameworks
underneath the model

197
00:09:17,026 --> 00:09:18,886 A:middle
are cross-platform.

198
00:09:19,346 --> 00:09:21,686 A:middle
So what that means,
if you have some code

199
00:09:21,686 --> 00:09:25,616 A:middle
and here's some iOS code,
that's-- it's going to--

200
00:09:25,616 --> 00:09:29,906 A:middle
in it an array, a beautiful
array with ten elements

201
00:09:30,246 --> 00:09:34,966 A:middle
and we're going to add a string
to it, in this case, WWDC 2013.

202
00:09:35,466 --> 00:09:37,186 A:middle
Your OS X code is going
to look like this.

203
00:09:37,306 --> 00:09:39,126 A:middle
It's the same, right?

204
00:09:39,126 --> 00:09:40,856 A:middle
That's great.

205
00:09:40,856 --> 00:09:42,056 A:middle
So you don't have to
do any work there.

206
00:09:42,326 --> 00:09:44,216 A:middle
So cleanly separate your model.

207
00:09:44,216 --> 00:09:45,836 A:middle
Now, one thing to
keep in mind is

208
00:09:45,836 --> 00:09:49,816 A:middle
that your model code may be
making an assumption that's not

209
00:09:49,816 --> 00:09:54,816 A:middle
true on the Mac which is
Macs are 64 bit and iOS,

210
00:09:54,896 --> 00:09:57,456 A:middle
your iOS code may not
be ready to handle that.

211
00:09:57,456 --> 00:09:59,006 A:middle
So how do you-- what
do you for that?

212
00:09:59,156 --> 00:10:01,926 A:middle
Well, it's really easy.

213
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

214
00:10:02,636 --> 00:10:04,416 A:middle
Adapt NSInteger and NSUInterger.

215
00:10:04,556 --> 00:10:06,756 A:middle
Those are variably sized
integers that are going

216
00:10:06,756 --> 00:10:08,726 A:middle
to give you 64 bit
on the hardware

217
00:10:08,806 --> 00:10:11,746 A:middle
and we'll give you 32
bits when you need it.

218
00:10:12,316 --> 00:10:14,346 A:middle
So, that's perfect.

219
00:10:14,346 --> 00:10:17,816 A:middle
Now what if you really do need
a 32 bit integer and not 64 bit?

220
00:10:18,066 --> 00:10:19,066 A:middle
Like for instance,
if you're doing

221
00:10:19,066 --> 00:10:22,906 A:middle
about binary file format that's
already specified and you want

222
00:10:22,906 --> 00:10:26,686 A:middle
to make sure that it is
right, well, we recommend

223
00:10:26,686 --> 00:10:29,366 A:middle
that you use uint
32 t and its cousins

224
00:10:30,556 --> 00:10:31,756 A:middle
and that's got you
taken care of.

225
00:10:31,756 --> 00:10:35,336 A:middle
So what about platform
specific code?

226
00:10:36,096 --> 00:10:39,766 A:middle
So if I'm writing iOS only code
and there may be some times

227
00:10:39,766 --> 00:10:41,856 A:middle
that you do that, you're going

228
00:10:41,856 --> 00:10:45,976 A:middle
to use the preprocessor
macro #if TARGET OS IPHONE.

229
00:10:46,506 --> 00:10:49,316 A:middle
And if you're doing
Mac only code,

230
00:10:49,916 --> 00:10:55,886 A:middle
you would use #if TARGET OS
MAC and not TARGET OS IPHONE.

231
00:10:57,096 --> 00:10:59,856 A:middle
OK. So now that we've
talked about the model,

232
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

233
00:11:00,106 --> 00:11:00,956 A:middle
let's go on to the view.

234
00:11:01,886 --> 00:11:05,506 A:middle
The view is any output
representation of your data

235
00:11:06,116 --> 00:11:08,126 A:middle
and it's also where you're
user interface lives.

236
00:11:08,846 --> 00:11:12,416 A:middle
So, a big part of the user
interface are the built-in

237
00:11:12,416 --> 00:11:13,066 A:middle
control set.

238
00:11:13,636 --> 00:11:17,556 A:middle
So what does it look
like on OS X?

239
00:11:18,516 --> 00:11:20,326 A:middle
Well here's kind of an
idea of the landscape.

240
00:11:20,666 --> 00:11:23,566 A:middle
We have a lot of controls
on iOS a ton of controls,

241
00:11:23,566 --> 00:11:25,046 A:middle
even more controls on OS X.

242
00:11:25,046 --> 00:11:28,306 A:middle
And they overlap and there are
a lot of controls in common

243
00:11:28,306 --> 00:11:29,446 A:middle
but there are some
that are different.

244
00:11:29,446 --> 00:11:31,726 A:middle
So, you'll need to
look at alternatives

245
00:11:31,726 --> 00:11:33,326 A:middle
in some cases between the two.

246
00:11:33,326 --> 00:11:37,926 A:middle
One of the most used controls
on iOS is the TableView,

247
00:11:38,576 --> 00:11:41,926 A:middle
and good news, there's
a TableView on OS X.

248
00:11:42,786 --> 00:11:44,486 A:middle
So, it's called NSTableView.

249
00:11:45,306 --> 00:11:48,886 A:middle
If you're noticing a pattern,
it's just a coincidence

250
00:11:49,126 --> 00:11:51,946 A:middle
but all the UIs and
actually, yeah.

251
00:11:52,406 --> 00:11:55,076 A:middle
So, there's some
similarities between the two.

252
00:11:55,076 --> 00:11:57,946 A:middle
They both use data
sources as their delegates.

253
00:11:58,726 --> 00:12:02,886 A:middle
They both encourage the use
of reusable cells that's going

254
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

255
00:12:02,886 --> 00:12:04,076 A:middle
to maximize your performance.

256
00:12:04,566 --> 00:12:08,906 A:middle
And they both animate insertion,
deletion, and moving of cells.

257
00:12:08,906 --> 00:12:10,686 A:middle
So, that's great.

258
00:12:11,276 --> 00:12:12,616 A:middle
There are some differences too.

259
00:12:12,706 --> 00:12:14,656 A:middle
One of the things
that's different is

260
00:12:14,656 --> 00:12:16,926 A:middle
that NSTableView actually
has two different variants,

261
00:12:17,086 --> 00:12:19,326 A:middle
that's for legacy reasons.

262
00:12:20,016 --> 00:12:21,536 A:middle
You want to use the
view-based variant.

263
00:12:21,646 --> 00:12:23,046 A:middle
That's most similar to iOS.

264
00:12:23,046 --> 00:12:26,066 A:middle
The other one NSCell and
I'm done talking about that.

265
00:12:26,066 --> 00:12:30,086 A:middle
It's an NScell-based
variant but don't use that.

266
00:12:30,086 --> 00:12:33,006 A:middle
OK. The other thing to keep
in mind is that you're going

267
00:12:33,006 --> 00:12:34,106 A:middle
to get multiple columns.

268
00:12:34,266 --> 00:12:35,506 A:middle
So, yay, that's cool.

269
00:12:36,206 --> 00:12:40,256 A:middle
And lastly, is this really
the right control for you?

270
00:12:40,576 --> 00:12:41,096 A:middle
It may be.

271
00:12:41,576 --> 00:12:45,636 A:middle
If you're doing tabular data
then it's the right control

272
00:12:45,636 --> 00:12:47,216 A:middle
for iOS and OS X.

273
00:12:47,216 --> 00:12:49,026 A:middle
But if you're doing
something else,

274
00:12:49,326 --> 00:12:52,016 A:middle
then it might be the
right control for iOS

275
00:12:52,016 --> 00:12:53,656 A:middle
but maybe not for OS X.

276
00:12:53,656 --> 00:12:55,326 A:middle
So let's take a look
at some examples.

277
00:12:56,206 --> 00:13:00,336 A:middle
So here on your left, you're
going to see a TableView

278
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

279
00:13:00,336 --> 00:13:04,716 A:middle
that the user selecting a region
out of a whole list of regions.

280
00:13:05,396 --> 00:13:07,436 A:middle
In this case, they've
selected United States.

281
00:13:07,906 --> 00:13:10,966 A:middle
On OS X, the appropriate control

282
00:13:10,966 --> 00:13:13,236 A:middle
to use here would
be a popup menu.

283
00:13:13,836 --> 00:13:16,186 A:middle
So, think about that.

284
00:13:16,566 --> 00:13:19,636 A:middle
Now, one thing about that
is that you can make those

285
00:13:19,636 --> 00:13:23,136 A:middle
with NSPopupBotton or just drag
them out from Interface Builder.

286
00:13:23,136 --> 00:13:24,396 A:middle
That's probably the
easier way to go.

287
00:13:25,496 --> 00:13:26,546 A:middle
So what about something else?

288
00:13:26,546 --> 00:13:27,656 A:middle
OK. So let's look at this one.

289
00:13:28,606 --> 00:13:30,986 A:middle
OK. So, here's a TableView

290
00:13:31,166 --> 00:13:32,786 A:middle
where it has it broken
up into sections.

291
00:13:32,786 --> 00:13:34,606 A:middle
So this first section, again,
you're selecting an item

292
00:13:34,606 --> 00:13:36,346 A:middle
out of-- in this
case, just two items.

293
00:13:36,916 --> 00:13:39,976 A:middle
So, on OS X, we'd recommend
using a radio-button

294
00:13:40,006 --> 00:13:41,056 A:middle
matrix instead.

295
00:13:42,946 --> 00:13:47,546 A:middle
And on OS X-- sorry, on
iOS, we have a on-off switch

296
00:13:47,946 --> 00:13:51,616 A:middle
in your TableView, and
that would be best suited

297
00:13:51,616 --> 00:13:52,696 A:middle
for a checkbox.

298
00:13:53,056 --> 00:13:55,246 A:middle
And if-- one thing else
I'd like to point out.

299
00:13:55,246 --> 00:13:57,676 A:middle
This window here can be
made with a StackView

300
00:13:57,756 --> 00:13:59,806 A:middle
which will make your
job a lot easier.

301
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

302
00:14:00,016 --> 00:14:00,856 A:middle
So check out that.

303
00:14:01,286 --> 00:14:04,506 A:middle
NSStackView, it's a new
technology for Mavericks.

304
00:14:05,276 --> 00:14:08,436 A:middle
OK. So, what if I want
to do a custom view

305
00:14:08,586 --> 00:14:11,556 A:middle
like making a custom button
or that kind of things?

306
00:14:11,796 --> 00:14:13,426 A:middle
In a lot of cases,
you're going to want

307
00:14:13,426 --> 00:14:15,926 A:middle
to overwrite UIView or NSView.

308
00:14:16,356 --> 00:14:18,226 A:middle
So, what if-- so
what's the differences?

309
00:14:18,226 --> 00:14:19,816 A:middle
While they both receive
and handle events,

310
00:14:20,716 --> 00:14:24,996 A:middle
they're both responsible for
drawing, but there's a couple

311
00:14:24,996 --> 00:14:26,416 A:middle
of differences so
let's go in those.

312
00:14:27,026 --> 00:14:29,676 A:middle
The UIView's origin
is in the upper left

313
00:14:30,086 --> 00:14:32,466 A:middle
and the NSView's origin
is in the lower left.

314
00:14:33,036 --> 00:14:36,236 A:middle
Before you despair, we'll have
some information on how to fix

315
00:14:36,546 --> 00:14:38,156 A:middle
that or accommodate for that.

316
00:14:38,616 --> 00:14:43,526 A:middle
The UIView always has a layer, a
Core Animation layer backing it,

317
00:14:43,526 --> 00:14:45,896 A:middle
and that has some
interesting benefits.

318
00:14:46,206 --> 00:14:47,836 A:middle
On NSView, you can have
a Core Animation layer

319
00:14:47,836 --> 00:14:48,806 A:middle
but you have to opt-in to that.

320
00:14:49,716 --> 00:14:53,756 A:middle
And then, subviews can draw
outside their bounds on UIView

321
00:14:53,756 --> 00:14:56,006 A:middle
but they're clip to
their bounds for NSView.

322
00:14:56,226 --> 00:14:57,356 A:middle
So let's talk about origins.

323
00:14:57,456 --> 00:14:59,336 A:middle
I promised to show
you how to do that.

324
00:14:59,336 --> 00:15:00,416 A:middle
Here's what it looks like.

325
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

326
00:15:00,556 --> 00:15:04,366 A:middle
In UIView, you've got your upper
left origin, NSView, lower left,

327
00:15:04,556 --> 00:15:07,076 A:middle
you're just going to overwrite
isFlipped and return yes.

328
00:15:07,786 --> 00:15:08,836 A:middle
And what does that give you?

329
00:15:09,306 --> 00:15:11,066 A:middle
Well, that.

330
00:15:12,866 --> 00:15:15,096 A:middle
So, there are some controls

331
00:15:15,206 --> 00:15:19,596 A:middle
that are actually already have
the origin flipped for you

332
00:15:20,126 --> 00:15:25,126 A:middle
in advance, so be aware, and
they are NSButton, NSScrollView,

333
00:15:25,176 --> 00:15:27,706 A:middle
NSSPlitView, NSTabView,
and NSTableView.

334
00:15:28,026 --> 00:15:29,706 A:middle
So, what about layer
backed views?

335
00:15:29,706 --> 00:15:33,806 A:middle
So we have the Core
Animation layers on UIView.

336
00:15:34,126 --> 00:15:35,096 A:middle
What are the benefits?

337
00:15:35,096 --> 00:15:36,516 A:middle
Why would we want to opt-in?

338
00:15:37,216 --> 00:15:38,736 A:middle
Well, we'd get smoother
animation.

339
00:15:38,776 --> 00:15:40,936 A:middle
And if you want to do
anything with CAFilters,

340
00:15:41,276 --> 00:15:43,546 A:middle
then that's the right
choice for you.

341
00:15:43,886 --> 00:15:46,086 A:middle
CAFfilters are pretty cool

342
00:15:46,086 --> 00:15:48,486 A:middle
and if you watched
the SpriteKit Talk,

343
00:15:48,486 --> 00:15:49,576 A:middle
then you know a little
bit about that.

344
00:15:50,636 --> 00:15:53,716 A:middle
The downsides are that
there a lot more--

345
00:15:53,716 --> 00:15:55,566 A:middle
they can be more
resource extensive.

346
00:15:55,846 --> 00:15:57,756 A:middle
So, we urge you to test.

347
00:15:57,756 --> 00:16:01,216 A:middle
Try it out, see if it works
better, see if it fits

348
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

349
00:16:01,216 --> 00:16:04,456 A:middle
in within the resources you
want to use, and then pick one.

350
00:16:04,986 --> 00:16:07,376 A:middle
So what about layer
backed views?

351
00:16:07,376 --> 00:16:08,106 A:middle
I had-- sorry.

352
00:16:08,106 --> 00:16:10,666 A:middle
So we have layer backed views, I
told you what the benefits are,

353
00:16:10,666 --> 00:16:13,396 A:middle
and the UIViews are
automatically

354
00:16:13,396 --> 00:16:15,146 A:middle
and you have to opt-in
on NSViews.

355
00:16:15,766 --> 00:16:17,866 A:middle
So, how do you opt-in?

356
00:16:18,246 --> 00:16:21,106 A:middle
Well, in code, you would
call setWantsLayer, yes.

357
00:16:22,066 --> 00:16:23,416 A:middle
But you can also do an Xcode.

358
00:16:24,236 --> 00:16:28,756 A:middle
And so in Xcode, you go into the
Interface Builder portion of it

359
00:16:28,756 --> 00:16:32,036 A:middle
and you would-- in the inspector
on the right, you're going

360
00:16:32,036 --> 00:16:38,106 A:middle
to pick the last tab, that
one there, and then you click

361
00:16:38,106 --> 00:16:39,776 A:middle
on the little checkbox
next to your View

362
00:16:39,776 --> 00:16:41,326 A:middle
and that would make
it layer backed.

363
00:16:42,306 --> 00:16:46,456 A:middle
OK. So for iOS, your animation
code might look like this.

364
00:16:46,456 --> 00:16:48,406 A:middle
So it's-- you do an
animateWithDuration,

365
00:16:49,236 --> 00:16:52,376 A:middle
you pass it a time,
and then you're going

366
00:16:52,376 --> 00:16:53,436 A:middle
to give it an animation block.

367
00:16:53,436 --> 00:16:56,026 A:middle
Here we're setting the frame so
we're going to animate the frame

368
00:16:56,026 --> 00:16:57,266 A:middle
and then I'm closing the block.

369
00:16:57,526 --> 00:16:59,886 A:middle
On OS X, we're going to
use animation proxies.

370
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

371
00:17:00,346 --> 00:17:03,186 A:middle
The codes look very
familiar but it's going

372
00:17:03,186 --> 00:17:04,336 A:middle
to be slightly different.

373
00:17:04,925 --> 00:17:07,945 A:middle
So, instead of changing the
frame on the view directly,

374
00:17:08,026 --> 00:17:10,246 A:middle
you're going to do
something like this

375
00:17:10,496 --> 00:17:14,256 A:middle
where you call this
animator proxy in the middle

376
00:17:14,256 --> 00:17:15,576 A:middle
and that's going to make sure

377
00:17:15,576 --> 00:17:17,705 A:middle
that your view gets
its frame set

378
00:17:18,326 --> 00:17:20,925 A:middle
and also that it will animate.

379
00:17:22,506 --> 00:17:24,705 A:middle
Now, we do also have
some additional--

380
00:17:24,856 --> 00:17:26,215 A:middle
if you notice here that the--

381
00:17:26,215 --> 00:17:27,726 A:middle
we're not setting the
time of the animation

382
00:17:27,726 --> 00:17:31,056 A:middle
that has an implicit duration
and there's some more details

383
00:17:31,056 --> 00:17:32,666 A:middle
on that that you
can learn about.

384
00:17:33,146 --> 00:17:37,476 A:middle
And we'll have references
to that at the end.

385
00:17:38,286 --> 00:17:40,176 A:middle
So, what about events?

386
00:17:40,246 --> 00:17:45,486 A:middle
So you have on iOS these gesture
recognizers and they're great.

387
00:17:46,256 --> 00:17:48,086 A:middle
So, you have the
UIGestureRecognizer

388
00:17:48,086 --> 00:17:50,906 A:middle
and its subclasses and it makes
it really easy to handle events.

389
00:17:51,206 --> 00:17:54,386 A:middle
On OS X, you can handle all
those same events but we--

390
00:17:54,386 --> 00:17:56,386 A:middle
there's no such thing as
an NSGestureRecognizer.

391
00:17:56,386 --> 00:17:57,186 A:middle
So how do you do it?

392
00:17:57,296 --> 00:17:59,456 A:middle
So here's a
TapGestureRecognizer.

393
00:17:59,826 --> 00:18:02,936 A:middle
And TapGestureRecognizer,
the idea here it's a lot

394
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

395
00:18:02,936 --> 00:18:04,656 A:middle
of times you use for
a simple interactions

396
00:18:04,656 --> 00:18:05,656 A:middle
like a simple touch.

397
00:18:06,176 --> 00:18:09,766 A:middle
So, on OS X, you'd be-- it
would be a simple click.

398
00:18:10,226 --> 00:18:13,906 A:middle
And so, you would
overwrite the mouseUp event

399
00:18:13,906 --> 00:18:16,006 A:middle
and handle your click there.

400
00:18:16,586 --> 00:18:19,016 A:middle
So, pretty easy, and you
could do mouseDown as well

401
00:18:19,016 --> 00:18:22,636 A:middle
but we recommend mouseUp because
it's more what the user expects.

402
00:18:23,126 --> 00:18:25,566 A:middle
So they can cancel the event.

403
00:18:25,866 --> 00:18:27,216 A:middle
OK. So what about long press?

404
00:18:28,506 --> 00:18:30,526 A:middle
Well, for long press,
you could do this.

405
00:18:30,756 --> 00:18:33,746 A:middle
It's kind of complicated but it
all just run through real quick.

406
00:18:33,746 --> 00:18:37,756 A:middle
You set up a timer and
half a second timer that's

407
00:18:37,756 --> 00:18:41,716 A:middle
to mimic the way that the
default long press recognizer

408
00:18:41,716 --> 00:18:42,076 A:middle
set up.

409
00:18:42,076 --> 00:18:43,826 A:middle
And then you're going
to do something.

410
00:18:44,226 --> 00:18:45,766 A:middle
You've set up the
selector to do something,

411
00:18:45,766 --> 00:18:46,706 A:middle
that's the bottom method.

412
00:18:47,156 --> 00:18:51,146 A:middle
And then in your mouseUp event,
you can invalidate that timer.

413
00:18:51,146 --> 00:18:53,946 A:middle
So, like for instance that they
mouseUp before the half second

414
00:18:53,946 --> 00:18:55,236 A:middle
was over then it would stop it.

415
00:18:55,236 --> 00:18:57,806 A:middle
So, you'd be effectively
doing a long press there.

416
00:18:58,106 --> 00:19:01,116 A:middle
But 99 percent of the
time, you're going to want

417
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

418
00:19:01,116 --> 00:19:02,536 A:middle
to use a Right Click instead

419
00:19:03,446 --> 00:19:06,236 A:middle
because the long press is not
really going to be familiar

420
00:19:06,236 --> 00:19:10,686 A:middle
with a-- for the OS X crowd,
and so, use the right click.

421
00:19:11,286 --> 00:19:13,686 A:middle
And you're going to want
to show a menu probably.

422
00:19:14,226 --> 00:19:17,186 A:middle
So to help you with
that, we have a method

423
00:19:17,186 --> 00:19:19,666 A:middle
that you can overwrite which is
menuForEvent and that's going

424
00:19:19,666 --> 00:19:22,076 A:middle
to get called if you
right click on something

425
00:19:22,076 --> 00:19:23,596 A:middle
or if you control click on it,

426
00:19:23,726 --> 00:19:26,496 A:middle
any kind of contextual
click, will give you this.

427
00:19:27,446 --> 00:19:30,306 A:middle
And with this, you're
going to pass back the menu

428
00:19:30,596 --> 00:19:31,916 A:middle
which is going to
handle the interaction.

429
00:19:32,536 --> 00:19:33,806 A:middle
So what about dragging?

430
00:19:34,096 --> 00:19:37,396 A:middle
Well, one thing you
could do is you could set

431
00:19:37,396 --> 00:19:38,866 A:middle
up the mouseDown
event and you're going

432
00:19:38,866 --> 00:19:43,716 A:middle
to record your drag start
location and your mouseDragged,

433
00:19:43,956 --> 00:19:46,886 A:middle
you're going to do-- you're
going to move the view and then

434
00:19:46,886 --> 00:19:48,466 A:middle
in the mouseUp event
you'd clean up.

435
00:19:48,466 --> 00:19:50,856 A:middle
And that works really
well especially it will--

436
00:19:50,856 --> 00:19:54,266 A:middle
I should say that works really
well if you're inside of a View.

437
00:19:54,266 --> 00:19:56,086 A:middle
So if you're moving
something within a View,

438
00:19:56,886 --> 00:19:58,066 A:middle
then that works great.

439
00:19:58,066 --> 00:20:00,346 A:middle
So-- and that's kind of
what you're used to in iOS.

440
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

441
00:20:01,046 --> 00:20:03,586 A:middle
But what if you wanted to do
something really fancy like,

442
00:20:03,786 --> 00:20:07,206 A:middle
say drag something from
one window to another

443
00:20:07,206 --> 00:20:08,946 A:middle
or perhaps one application
to another.

444
00:20:08,946 --> 00:20:09,786 A:middle
How would you do that?

445
00:20:10,256 --> 00:20:11,416 A:middle
Well, it's pretty simple.

446
00:20:11,416 --> 00:20:12,056 A:middle
I'll show you how to do it.

447
00:20:12,056 --> 00:20:15,886 A:middle
So you're going to use this
for mouseDown or mouseDragged

448
00:20:16,566 --> 00:20:19,046 A:middle
and then you're going
to set up a pasteboard

449
00:20:19,856 --> 00:20:21,736 A:middle
and in your pasteboard,
you're going

450
00:20:21,736 --> 00:20:23,986 A:middle
to clear the current pasteboard
and then you're going to pass

451
00:20:23,986 --> 00:20:25,826 A:middle
in the element that
you want to have--

452
00:20:26,566 --> 00:20:29,786 A:middle
actually, the model behind
what you want to have dragged.

453
00:20:29,786 --> 00:20:32,776 A:middle
In this example, we're dragging
an image, so we're going

454
00:20:32,776 --> 00:20:35,376 A:middle
to just pass in one
element array,

455
00:20:35,846 --> 00:20:39,686 A:middle
that's the new array syntax-,
and, pass in that image.

456
00:20:39,816 --> 00:20:43,806 A:middle
And then we're going
to call this bad boy.

457
00:20:43,806 --> 00:20:49,626 A:middle
drawImage at offset event
pasteboard source slideBack.

458
00:20:49,906 --> 00:20:51,536 A:middle
OK. So what is all that stuff.

459
00:20:52,116 --> 00:20:55,526 A:middle
So, first thing is the dragImage

460
00:20:55,606 --> 00:20:57,466 A:middle
and that's the image
underneath the mouse pointer

461
00:20:57,466 --> 00:20:58,126 A:middle
as you're dragging.

462
00:20:58,626 --> 00:20:59,926 A:middle
The second thing you're going

463
00:20:59,926 --> 00:21:02,176 A:middle
to pass is the location,
the start location.

464
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

465
00:21:02,686 --> 00:21:05,016 A:middle
And the dragOffset
actually is ignored

466
00:21:05,016 --> 00:21:07,816 A:middle
so let's not talk
about that anymore.

467
00:21:07,816 --> 00:21:12,806 A:middle
The event is the mouseDown
event that you've been passed in

468
00:21:12,806 --> 00:21:15,736 A:middle
or mouseDragged event
and only use this

469
00:21:15,736 --> 00:21:17,206 A:middle
with mouseDown and mouseDragged.

470
00:21:18,006 --> 00:21:19,816 A:middle
The documentation-- by the
way, if there's anything here

471
00:21:19,816 --> 00:21:21,956 A:middle
that I'm saying, go look
at the documentations,

472
00:21:21,956 --> 00:21:22,646 A:middle
it's got all the stuff.

473
00:21:22,676 --> 00:21:24,456 A:middle
But I'm just pointing you
in the right direction here.

474
00:21:25,036 --> 00:21:28,196 A:middle
Pasteboard, so the pasteboard
is what you just set up there,

475
00:21:28,196 --> 00:21:30,116 A:middle
the source is self
and then slideBack.

476
00:21:30,116 --> 00:21:34,006 A:middle
That's when if the user cancels
than whether it slides back

477
00:21:34,006 --> 00:21:35,476 A:middle
in the place, cool
animation there.

478
00:21:35,906 --> 00:21:37,756 A:middle
So, that's-- you can
put yes or no there.

479
00:21:38,366 --> 00:21:40,526 A:middle
OK. So, now that we've
talked about the view,

480
00:21:41,236 --> 00:21:42,566 A:middle
let's take a look
at the controller.

481
00:21:42,566 --> 00:21:46,346 A:middle
Now, the controller is the part

482
00:21:46,346 --> 00:21:50,126 A:middle
of your Model-View-Controller
system that handles user input.

483
00:21:50,126 --> 00:21:54,816 A:middle
And it's going to mediate that
input and send it to commands

484
00:21:54,816 --> 00:21:56,226 A:middle
for the Model or View to handle.

485
00:21:56,906 --> 00:21:59,656 A:middle
So, what do we do--
what are some tips

486
00:21:59,656 --> 00:22:00,746 A:middle
for migrating the controller?

487
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

488
00:22:00,936 --> 00:22:04,696 A:middle
First off, this is the common
mistake, UIViewController.

489
00:22:04,756 --> 00:22:06,196 A:middle
There is an NSViewController

490
00:22:06,196 --> 00:22:07,656 A:middle
but it's probably not
what you're looking for.

491
00:22:07,776 --> 00:22:10,406 A:middle
You probably want to use
NSWindowController instead

492
00:22:10,406 --> 00:22:12,666 A:middle
which is a lot more similar
to the UIVIewController.

493
00:22:12,666 --> 00:22:15,276 A:middle
So, look there if you want that.

494
00:22:16,046 --> 00:22:19,466 A:middle
And a lot of you may be using
or I would say almost all

495
00:22:19,466 --> 00:22:22,286 A:middle
of you are using
UINavigationControllers.

496
00:22:22,816 --> 00:22:25,306 A:middle
There is no such thing as
an NSNavigationController.

497
00:22:26,066 --> 00:22:28,116 A:middle
And the reason-- let me think
about that for a second.

498
00:22:28,506 --> 00:22:30,846 A:middle
UINavigationController,
what does it do?

499
00:22:31,286 --> 00:22:33,756 A:middle
Well, it allows you to
navigate between lots

500
00:22:33,756 --> 00:22:36,496 A:middle
of different TableViews that are
stacked on top of each other.

501
00:22:36,496 --> 00:22:37,916 A:middle
And why do we stack them
on top of each other?

502
00:22:37,916 --> 00:22:39,216 A:middle
Because we have a 4-inch screen.

503
00:22:39,566 --> 00:22:41,626 A:middle
So, we don't really
need that on OS X.

504
00:22:41,626 --> 00:22:44,286 A:middle
In any case, it doesn't exist
on OS X so you're going to have

505
00:22:44,286 --> 00:22:45,206 A:middle
to find some alternative.

506
00:22:45,866 --> 00:22:47,716 A:middle
But it's not the right
interaction anyway.

507
00:22:47,716 --> 00:22:51,896 A:middle
So, the next thing that I
will point out is Bindings.

508
00:22:51,896 --> 00:22:54,446 A:middle
Bindings is going to really help
you out here with controllers

509
00:22:55,196 --> 00:22:58,796 A:middle
because bindings is a way
on OS X that you can wire

510
00:22:58,796 --> 00:23:03,466 A:middle
up your user interface
without using any code inside

511
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

512
00:23:03,466 --> 00:23:04,286 A:middle
of Interface Builder.

513
00:23:04,286 --> 00:23:05,016 A:middle
So that's pretty cool.

514
00:23:06,096 --> 00:23:10,026 A:middle
OK. Next, NSDocument,
NSDocument is amazing.

515
00:23:11,596 --> 00:23:13,996 A:middle
It allows you to do some really
cool stuff and it's going

516
00:23:13,996 --> 00:23:16,586 A:middle
to really reduce the
amount of controller code

517
00:23:16,586 --> 00:23:17,206 A:middle
that you have to write.

518
00:23:18,636 --> 00:23:21,416 A:middle
And you may be thinking,
"NSDocument, that sounds like--

519
00:23:21,506 --> 00:23:23,096 A:middle
is that similar to UIDocument?"

520
00:23:23,096 --> 00:23:24,076 A:middle
Well, yes it is.

521
00:23:25,316 --> 00:23:27,436 A:middle
In fact, they have a
lot of similarities.

522
00:23:27,776 --> 00:23:30,456 A:middle
Both of them are responsible
for saving and loading,

523
00:23:31,506 --> 00:23:35,176 A:middle
both of them will give you undo
support very, very cheaply,

524
00:23:36,086 --> 00:23:38,016 A:middle
and both of them are
your tickets to iCloud.

525
00:23:38,526 --> 00:23:41,776 A:middle
So if you want to get to
iCloud, adopt UIDocument

526
00:23:41,776 --> 00:23:44,956 A:middle
or NSDocument or both really.

527
00:23:45,396 --> 00:23:48,636 A:middle
And-- but there's
some differences

528
00:23:48,636 --> 00:23:50,396 A:middle
between NSDocument
and UIDocument.

529
00:23:50,396 --> 00:23:53,656 A:middle
NSDocument has some extras,
some real nice things

530
00:23:53,656 --> 00:23:55,416 A:middle
that you should take
advantage of.

531
00:23:55,926 --> 00:23:58,236 A:middle
You'll get for free
really most of them.

532
00:23:58,236 --> 00:23:59,586 A:middle
One of them is that
you're going to get--

533
00:23:59,586 --> 00:24:01,806 A:middle
if you set up a document-based
app on OS X, you're going

534
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

535
00:24:01,806 --> 00:24:04,236 A:middle
to get a File, Edit, and
Windows menu for free

536
00:24:04,666 --> 00:24:08,136 A:middle
and they're almost entirely work
without any code on your part.

537
00:24:08,746 --> 00:24:11,806 A:middle
You're going to get open
panels and save sheets.

538
00:24:12,936 --> 00:24:17,016 A:middle
And, you know, when you quit
your app and you haven't saved,

539
00:24:17,116 --> 00:24:18,566 A:middle
you get that little
dialogue that comes down,

540
00:24:18,566 --> 00:24:20,396 A:middle
that's for free, you'll
get that, unless you turn

541
00:24:20,396 --> 00:24:22,376 A:middle
on auto save and then,
you don't really need it.

542
00:24:22,956 --> 00:24:25,946 A:middle
But if you turn on auto
save, you get versions.

543
00:24:26,346 --> 00:24:30,116 A:middle
Yes, you're going to get this
cool UI, a time machine UI right

544
00:24:30,116 --> 00:24:34,026 A:middle
within your app, that allows
you to compare one version

545
00:24:34,026 --> 00:24:35,136 A:middle
of your file with another one.

546
00:24:35,366 --> 00:24:36,286 A:middle
So that's really cool.

547
00:24:36,286 --> 00:24:39,326 A:middle
And there's a really a lot
more that NSDocument can do.

548
00:24:39,326 --> 00:24:42,936 A:middle
So, check out the
documentation for NSDocuments.

549
00:24:43,926 --> 00:24:46,956 A:middle
OK. So, I'm going to
bring Dan Schimpf on stage

550
00:24:46,956 --> 00:24:48,956 A:middle
and we've been talking a lot
in abstract and he's going

551
00:24:48,956 --> 00:24:52,176 A:middle
to show you an iOS
app that we're going

552
00:24:52,176 --> 00:24:53,246 A:middle
to bring to OS X in a second.

553
00:24:53,376 --> 00:24:55,086 A:middle
So, take it away, Dan.

554
00:24:55,541 --> 00:24:57,541 A:middle
[applause]

555
00:24:57,996 --> 00:24:59,466 A:middle
>> Hi, good morning.

556
00:24:59,996 --> 00:25:02,476 A:middle
OK. I'm going to show you--
I'm first going to start off

557
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

558
00:25:02,476 --> 00:25:06,566 A:middle
with my awesome iOS application
that I'm working on some

559
00:25:06,566 --> 00:25:08,816 A:middle
into the store, and it's a
simple graphics application.

560
00:25:09,376 --> 00:25:13,356 A:middle
And what we can do here is
just tap and make a few shapes.

561
00:25:15,646 --> 00:25:18,876 A:middle
So, I can also change
what size I want to make

562
00:25:19,126 --> 00:25:20,446 A:middle
or what shape I'm going to make.

563
00:25:20,706 --> 00:25:22,856 A:middle
I can drag-- even drag it
around and put that around top

564
00:25:22,856 --> 00:25:25,836 A:middle
of there, like do
three whole shapes.

565
00:25:27,136 --> 00:25:32,776 A:middle
You can even change the
color, sure, let's do that.

566
00:25:33,326 --> 00:25:35,616 A:middle
So now I have a nice little
picture of a house with my--

567
00:25:35,616 --> 00:25:37,326 A:middle
this is what my house
looks like.

568
00:25:37,826 --> 00:25:40,456 A:middle
OK. So, that's just a demo.

569
00:25:40,456 --> 00:25:43,136 A:middle
That's my brand new application
but I'm thinking I want

570
00:25:43,136 --> 00:25:44,776 A:middle
to bring this application
to OS X.

571
00:25:44,776 --> 00:25:49,316 A:middle
So, I'm going to open the
project here and let's just go

572
00:25:49,316 --> 00:25:50,446 A:middle
through some of the code.

573
00:25:50,756 --> 00:25:53,696 A:middle
So, as you can see I've
already separated my code

574
00:25:53,696 --> 00:25:56,206 A:middle
out into a Model
View and Controller.

575
00:25:56,856 --> 00:25:58,656 A:middle
So this is my document model.

576
00:25:58,986 --> 00:26:01,996 A:middle
Don't need to go through a whole
lot of this right now but it--

577
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

578
00:26:02,206 --> 00:26:04,066 A:middle
but the important thing
is that a lot of it--

579
00:26:04,066 --> 00:26:06,306 A:middle
this is all things that
are cross-platform.

580
00:26:06,306 --> 00:26:10,536 A:middle
It imports foundation, things
that are on both platforms.

581
00:26:10,536 --> 00:26:14,666 A:middle
And the view side, I have the
document view itself, the thing,

582
00:26:14,706 --> 00:26:17,876 A:middle
the canvas, and then I have
the shape view which is--

583
00:26:18,176 --> 00:26:20,166 A:middle
stand for each of
these individual shapes

584
00:26:20,166 --> 00:26:21,076 A:middle
that I can drag around.

585
00:26:21,606 --> 00:26:22,926 A:middle
And then on the controller side,

586
00:26:23,966 --> 00:26:27,306 A:middle
I have a standard controller
hierarchy, an app delegate,

587
00:26:27,306 --> 00:26:29,196 A:middle
and then I have adopted
UIDocument because I want

588
00:26:29,306 --> 00:26:31,826 A:middle
to bring this to iPod and win
an Apple design award next year.

589
00:26:32,926 --> 00:26:35,176 A:middle
And then I've got a view
controller for the view

590
00:26:35,176 --> 00:26:37,286 A:middle
that I see and then
two controllers

591
00:26:37,286 --> 00:26:40,646 A:middle
for the things that pop up.

592
00:26:40,896 --> 00:26:42,256 A:middle
So, this is all pretty standard.

593
00:26:42,256 --> 00:26:45,386 A:middle
And now I want to start
on bringing this to OS X.

594
00:26:45,666 --> 00:26:46,576 A:middle
So what's the first thing I do?

595
00:26:46,576 --> 00:26:49,906 A:middle
Well, the first thing I'm going
to do is just make a new target.

596
00:26:50,176 --> 00:26:53,486 A:middle
So I'm going to make
an OS X application,

597
00:26:54,026 --> 00:26:55,236 A:middle
so the Cocoa application.

598
00:26:56,426 --> 00:26:59,296 A:middle
I'm going to make
this shape heart OS X.

599
00:26:59,406 --> 00:27:00,986 A:middle
You don't have to call it--

600
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

601
00:27:01,016 --> 00:27:03,176 A:middle
if you don't have the OS X
at the end, I'm just going

602
00:27:03,426 --> 00:27:06,666 A:middle
to say OS X just so there's
no confusion during this demo.

603
00:27:06,846 --> 00:27:09,046 A:middle
And I'm also going to make a
document-based application.

604
00:27:11,856 --> 00:27:15,556 A:middle
So, you can see this is
made a target for me.

605
00:27:15,806 --> 00:27:18,796 A:middle
And also because I know this is
a heavy graphics application,

606
00:27:18,796 --> 00:27:20,026 A:middle
I'm also going to
add a framework.

607
00:27:20,026 --> 00:27:25,926 A:middle
I can search the courts
framework and it knows

608
00:27:25,926 --> 00:27:27,356 A:middle
that this is an OS X
target so it's going

609
00:27:27,356 --> 00:27:30,356 A:middle
to only give me the OS
X version of courts.

610
00:27:31,616 --> 00:27:34,716 A:middle
OK. So now, I have
this basic app

611
00:27:35,226 --> 00:27:38,786 A:middle
and because I've separated my
model cleanly, I can select all

612
00:27:38,786 --> 00:27:43,166 A:middle
of the model classes and just
simply add them into my--

613
00:27:43,166 --> 00:27:46,316 A:middle
excuse me, add them
to my OS X target.

614
00:27:46,316 --> 00:27:50,956 A:middle
Now, if I switch to my OS X
target, I can actually build

615
00:27:51,266 --> 00:27:53,446 A:middle
and run and see what it gets me.

616
00:27:53,676 --> 00:27:57,406 A:middle
So here we have-- this
is what you get for free.

617
00:27:57,526 --> 00:27:59,326 A:middle
You get a whole-- you have
windows, you can make--

618
00:27:59,326 --> 00:28:00,276 A:middle
I can make many of them,

619
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

620
00:28:01,276 --> 00:28:05,396 A:middle
I got all of the menu bar
items that actually work.

621
00:28:05,396 --> 00:28:08,186 A:middle
And I probably don't
want to shift

622
00:28:08,186 --> 00:28:11,706 A:middle
with my document contents there
but it's a good starting point

623
00:28:11,706 --> 00:28:16,026 A:middle
that you get for free and then
you can adapt it from there.

624
00:28:16,026 --> 00:28:18,466 A:middle
So I'm going to hand
it back to Cortis,

625
00:28:18,466 --> 00:28:19,616 A:middle
he's going to talk
more about that part.

626
00:28:20,666 --> 00:28:21,096 A:middle
>> Thanks, Dan.

627
00:28:22,146 --> 00:28:23,576 A:middle
So, awesome.

628
00:28:23,576 --> 00:28:27,226 A:middle
So we have this app and it
does some really cool things

629
00:28:27,226 --> 00:28:28,406 A:middle
like your documents here.

630
00:28:28,786 --> 00:28:31,686 A:middle
But we don't-- we're going
to have-- where's our colors?

631
00:28:31,686 --> 00:28:33,066 A:middle
Where's our little shapes?

632
00:28:33,436 --> 00:28:34,286 A:middle
So let's talk about--

633
00:28:34,286 --> 00:28:36,976 A:middle
we're going to talk about
some migration strategies.

634
00:28:37,396 --> 00:28:40,076 A:middle
They're going to help you move
over your view and controller

635
00:28:40,076 --> 00:28:42,246 A:middle
because we've only moved
over the model at this point.

636
00:28:43,026 --> 00:28:46,126 A:middle
Now keep in mind, this is kind
of a tool box of approaches.

637
00:28:46,126 --> 00:28:47,766 A:middle
We're going to give you a
bunch of different approaches.

638
00:28:48,216 --> 00:28:52,056 A:middle
You know your code so you should
decide what's the right approach

639
00:28:52,056 --> 00:28:53,086 A:middle
for which situation.

640
00:28:53,276 --> 00:28:55,946 A:middle
And your apps may
use several of these.

641
00:28:56,836 --> 00:29:02,126 A:middle
And so to help with this, we're
going to talk about it in terms

642
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

643
00:29:02,236 --> 00:29:03,766 A:middle
of a particular example.

644
00:29:04,126 --> 00:29:06,656 A:middle
In this case, we're going to
talk about it in terms of color.

645
00:29:07,786 --> 00:29:11,416 A:middle
Now, on iOS, you may all
be familiar with UIColor.

646
00:29:11,586 --> 00:29:15,456 A:middle
It's a relatively simple class,
it allows you to create colors

647
00:29:15,816 --> 00:29:18,136 A:middle
with red, green, blue,
and alpha, and allows you

648
00:29:18,136 --> 00:29:20,236 A:middle
to set them on the
current context.

649
00:29:20,956 --> 00:29:25,166 A:middle
Now, it turns out that there's
another class on OS X called,

650
00:29:25,546 --> 00:29:29,216 A:middle
surprisingly enough,
NSColor, and it allows you

651
00:29:29,436 --> 00:29:31,766 A:middle
to create a color with red,
green, blue, and alpha and set

652
00:29:31,766 --> 00:29:32,836 A:middle
in on the current context.

653
00:29:32,836 --> 00:29:34,496 A:middle
Now, NSColor does
some other cool things

654
00:29:34,496 --> 00:29:36,626 A:middle
like it will allow you to
set up seem like cake colors

655
00:29:36,626 --> 00:29:38,846 A:middle
and patterns, color spaces.

656
00:29:39,056 --> 00:29:41,666 A:middle
But for now, let's just
focus on those two things.

657
00:29:42,586 --> 00:29:48,836 A:middle
OK. So, if were overwriting
code that we're using UIColor,

658
00:29:48,836 --> 00:29:49,896 A:middle
I might do something like this.

659
00:29:49,936 --> 00:29:52,986 A:middle
UIColor redColor, that's going
to make a new color for me,

660
00:29:53,426 --> 00:29:56,516 A:middle
and then your color,
aColor that set.

661
00:29:56,846 --> 00:29:58,436 A:middle
So that's going to set
on the current context.

662
00:29:58,496 --> 00:29:59,176 A:middle
Pretty simple.

663
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

664
00:30:00,246 --> 00:30:04,786 A:middle
On OS X it might look like this
and the only difference here is

665
00:30:04,786 --> 00:30:08,696 A:middle
that we have a different class
name in place of the UIColor.

666
00:30:09,476 --> 00:30:12,266 A:middle
Now, this is what we're going to
call the mirrored code strategy

667
00:30:13,206 --> 00:30:16,766 A:middle
and for purposes of talking
about it, I don't know

668
00:30:16,766 --> 00:30:18,586 A:middle
if it's really officially
called that

669
00:30:19,126 --> 00:30:20,306 A:middle
but we're going to call that.

670
00:30:20,306 --> 00:30:23,566 A:middle
Now, just to show you a little
bit more what that might look

671
00:30:23,566 --> 00:30:26,386 A:middle
like in a more complicated case,
let's look at this next one.

672
00:30:26,726 --> 00:30:28,036 A:middle
This is not with colors.

673
00:30:28,326 --> 00:30:31,886 A:middle
There's a fair bit of code so
let me explain what it's doing.

674
00:30:31,886 --> 00:30:35,806 A:middle
It says to create a new
view, it's going to center it

675
00:30:35,806 --> 00:30:37,396 A:middle
on its parent view
and then it's going

676
00:30:37,396 --> 00:30:40,516 A:middle
to insert it underneath all of
the other views on that view.

677
00:30:40,896 --> 00:30:43,306 A:middle
OK. So this first
bit of code is going

678
00:30:43,306 --> 00:30:45,596 A:middle
to compute the new
origin, the new X and Y.

679
00:30:45,596 --> 00:30:48,656 A:middle
And we did that with a little
bit of math and it turns

680
00:30:48,656 --> 00:30:51,066 A:middle
out that the math for OS
X is going to be the same.

681
00:30:51,716 --> 00:30:53,116 A:middle
So that part of the
code is the same.

682
00:30:53,976 --> 00:30:55,966 A:middle
And then we're going to
create the view itself.

683
00:30:56,216 --> 00:31:00,396 A:middle
We'll make the frame, the
CGRect frame, and we're going

684
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

685
00:31:00,396 --> 00:31:01,786 A:middle
to create it with initWithFrame.

686
00:31:02,746 --> 00:31:05,526 A:middle
And if you notice, the
OS X code is very similar

687
00:31:05,526 --> 00:31:06,926 A:middle
but there's a couple of changes.

688
00:31:06,926 --> 00:31:09,456 A:middle
One is that we're using an
NSRect instead of CGRect,

689
00:31:10,356 --> 00:31:15,566 A:middle
and we also are using an NSView
instead of a UIView, so--

690
00:31:15,566 --> 00:31:17,196 A:middle
but very similar at this point.

691
00:31:17,196 --> 00:31:18,776 A:middle
And then for this last bit,

692
00:31:19,136 --> 00:31:21,596 A:middle
we're going to insert it
underneath all the other views

693
00:31:21,726 --> 00:31:22,316 A:middle
on that view.

694
00:31:22,566 --> 00:31:25,076 A:middle
So this is subview, so
all of the other subviews.

695
00:31:25,606 --> 00:31:28,906 A:middle
I'm going to use
insertSubview atIndex on iOS.

696
00:31:29,676 --> 00:31:33,166 A:middle
On OS X, we don't actually
have that API so in that case,

697
00:31:33,166 --> 00:31:35,246 A:middle
we're going to have
to call addSubview,

698
00:31:35,246 --> 00:31:36,596 A:middle
positioned, relativeTo.

699
00:31:37,066 --> 00:31:39,836 A:middle
And so what that does is it--
we're going to add the subview

700
00:31:40,656 --> 00:31:43,056 A:middle
which is the one that we just
made, and then we're going

701
00:31:43,056 --> 00:31:45,576 A:middle
to position it with
NSWindowBelow

702
00:31:45,846 --> 00:31:47,356 A:middle
and that's we below something.

703
00:31:47,806 --> 00:31:50,406 A:middle
And since we're passing
nil for our relativeTo,

704
00:31:50,406 --> 00:31:51,616 A:middle
it's going to be
below everything.

705
00:31:51,616 --> 00:31:53,386 A:middle
So it does the same
thing as the iOS code.

706
00:31:53,876 --> 00:31:56,276 A:middle
OK. So that's the
mirrored code strategy.

707
00:31:56,766 --> 00:31:57,896 A:middle
What are some of the benefits?

708
00:31:57,896 --> 00:32:00,346 A:middle
Well, it's going to give
us a lot of flexibility.

709
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

710
00:32:00,746 --> 00:32:02,706 A:middle
So we're going to
have things on iOS,

711
00:32:02,706 --> 00:32:04,856 A:middle
we're going to write our
code completely different

712
00:32:04,856 --> 00:32:05,666 A:middle
on iOS from OS X.

713
00:32:05,666 --> 00:32:07,286 A:middle
In fact it can give you
something completely different.

714
00:32:07,326 --> 00:32:12,786 A:middle
So that's kind of cool but
it has some downsides, right?

715
00:32:13,356 --> 00:32:17,686 A:middle
If there's code duplication
there which means

716
00:32:17,686 --> 00:32:20,786 A:middle
that whenever we want to change
something on the iOS side,

717
00:32:20,786 --> 00:32:23,116 A:middle
let' say add a feature
or fix a bug,

718
00:32:24,036 --> 00:32:26,376 A:middle
it's going to require a
change on the OS X side.

719
00:32:26,776 --> 00:32:29,226 A:middle
So there's greater maintenance
cost but greater testing cost.

720
00:32:29,226 --> 00:32:30,586 A:middle
So when do we use this strategy?

721
00:32:30,586 --> 00:32:31,506 A:middle
Is it ever appropriate?

722
00:32:31,796 --> 00:32:34,436 A:middle
The answer is yes, it is,
sometimes appropriate.

723
00:32:34,916 --> 00:32:37,406 A:middle
When you're using heavily
platform dependent code,

724
00:32:37,406 --> 00:32:39,596 A:middle
when there's stuff that's
really just very different

725
00:32:39,596 --> 00:32:42,006 A:middle
between the two, then this
might be the right approach.

726
00:32:42,336 --> 00:32:44,346 A:middle
But there are some other
approaches that we can take.

727
00:32:44,626 --> 00:32:47,296 A:middle
So let's take a look at those.

728
00:32:47,296 --> 00:32:50,876 A:middle
One thing that we can do is
that, it turns out that UIKit

729
00:32:51,366 --> 00:32:54,266 A:middle
and AppKit are actually built
upon a common framework.

730
00:32:54,826 --> 00:32:56,706 A:middle
And so, we can drop down
to that lower framework.

731
00:32:57,266 --> 00:33:00,406 A:middle
And it turns out that
that will give us code

732
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

733
00:33:00,406 --> 00:33:02,656 A:middle
that is cross-platform
out of the box.

734
00:33:02,656 --> 00:33:03,916 A:middle
Let's look at some code.

735
00:33:03,916 --> 00:33:06,726 A:middle
Here we're dropping down
to the Core Image framework

736
00:33:06,726 --> 00:33:10,706 A:middle
and it turns out that Core
Image has a CIColor there

737
00:33:11,896 --> 00:33:14,436 A:middle
and CIColor has a color
with red, green, blue,

738
00:33:14,436 --> 00:33:15,896 A:middle
alpha so we can create
a red color.

739
00:33:16,756 --> 00:33:19,106 A:middle
And in this case, we're
actually going to--

740
00:33:19,216 --> 00:33:20,586 A:middle
we're not setting on
the current context.

741
00:33:20,586 --> 00:33:22,296 A:middle
We're creating an image with
that color because that's one

742
00:33:22,296 --> 00:33:24,356 A:middle
of the things that Core
Image would want to do.

743
00:33:24,816 --> 00:33:27,186 A:middle
And so, that's the code
there for doing that.

744
00:33:27,756 --> 00:33:30,556 A:middle
Now, some benefits
to using this--

745
00:33:31,376 --> 00:33:33,656 A:middle
since lower level
frameworks are cross-platform,

746
00:33:33,936 --> 00:33:38,026 A:middle
we're going to get-- we're going
to maximize our code reuse.

747
00:33:38,616 --> 00:33:41,416 A:middle
It's very robust and there's
a lot less maintenance

748
00:33:41,416 --> 00:33:43,706 A:middle
because we only have one
set of code to deal with

749
00:33:43,706 --> 00:33:46,056 A:middle
and with the interface
is common so all

750
00:33:46,056 --> 00:33:48,116 A:middle
of our code calling this
is going to be the same.

751
00:33:48,426 --> 00:33:50,116 A:middle
There are some downsides.

752
00:33:50,686 --> 00:33:53,636 A:middle
For one thing, it's going to
require that you rewrite a bunch

753
00:33:53,636 --> 00:33:56,826 A:middle
of your code and
perhaps most importantly,

754
00:33:56,826 --> 00:33:58,776 A:middle
and I want to stress
this, you're losing a lot

755
00:33:58,776 --> 00:34:01,096 A:middle
of functionality by dropping
to the low level framework.

756
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

757
00:34:01,096 --> 00:34:04,236 A:middle
There's a reason why
we're making NSColor

758
00:34:04,336 --> 00:34:06,656 A:middle
and UIColor available.

759
00:34:07,076 --> 00:34:09,176 A:middle
And it's not just to
like duplicate work.

760
00:34:09,766 --> 00:34:11,985 A:middle
So, because, you know,

761
00:34:12,076 --> 00:34:14,315 A:middle
and CIColor doesn't
handle color spaces,

762
00:34:14,315 --> 00:34:16,606 A:middle
it won't do CMYK color,
it won't do patterns.

763
00:34:16,946 --> 00:34:18,436 A:middle
So, these are all things
that you're going to lose.

764
00:34:18,436 --> 00:34:19,826 A:middle
If you ever think that
you're going to need that,

765
00:34:19,826 --> 00:34:22,626 A:middle
then probably not
the right strategy.

766
00:34:22,626 --> 00:34:23,726 A:middle
So when do you use this?

767
00:34:24,016 --> 00:34:26,226 A:middle
It's when the lower level
framework provides the needed

768
00:34:26,226 --> 00:34:28,936 A:middle
functionality that you needed,
for now and in the future.

769
00:34:29,036 --> 00:34:31,856 A:middle
So look at it and say "Hey,
is this appropriate match?"

770
00:34:32,295 --> 00:34:35,255 A:middle
And if it's not, then let's
look at some other strategies.

771
00:34:35,416 --> 00:34:38,896 A:middle
OK. So, from software
engineering, if any of you took

772
00:34:38,896 --> 00:34:40,746 A:middle
that in college,
you may be familiar

773
00:34:40,746 --> 00:34:42,005 A:middle
with the adapter pattern.

774
00:34:42,906 --> 00:34:45,226 A:middle
The idea here is that we
have some common source

775
00:34:45,226 --> 00:34:46,886 A:middle
and it's already targeting iOS.

776
00:34:47,956 --> 00:34:52,686 A:middle
And the code is already
written so we don't really have

777
00:34:52,686 --> 00:34:53,585 A:middle
to do anything on iOS.

778
00:34:53,585 --> 00:34:57,396 A:middle
But what if we made the OS
X code work the same way?

779
00:34:57,396 --> 00:34:59,136 A:middle
So we could stick
an adapter in there

780
00:34:59,766 --> 00:35:04,086 A:middle
and that would give us the same
interface for iOS and OS X.

781
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

782
00:35:04,086 --> 00:35:06,446 A:middle
And let me just modify
this slightly.

783
00:35:06,446 --> 00:35:07,026 A:middle
We're going to stick--

784
00:35:07,026 --> 00:35:08,676 A:middle
we're going to make this
a little bit different.

785
00:35:08,676 --> 00:35:11,166 A:middle
I want to make that
adapter actually

786
00:35:11,166 --> 00:35:12,846 A:middle
across both iOS and OS X?

787
00:35:12,846 --> 00:35:15,586 A:middle
So if we do this, it will take
a little bit of extra code

788
00:35:15,586 --> 00:35:19,516 A:middle
but it means that our iOS
code-- sorry, the iOS framework

789
00:35:19,516 --> 00:35:23,606 A:middle
and the OS X framework can
change and it doesn't matter

790
00:35:23,606 --> 00:35:26,766 A:middle
because our code, our adapter
code can stay the same.

791
00:35:26,766 --> 00:35:29,316 A:middle
And so, the code that's calling
it doesn't need to change.

792
00:35:30,086 --> 00:35:33,596 A:middle
And so, we can just
change the implementation.

793
00:35:33,686 --> 00:35:35,506 A:middle
So that's actually
a nice approach.

794
00:35:36,426 --> 00:35:38,126 A:middle
And it would look
like this in code.

795
00:35:38,746 --> 00:35:40,966 A:middle
Perhaps, this is
a very simplified,

796
00:35:40,966 --> 00:35:42,356 A:middle
just the header file
version of it

797
00:35:42,686 --> 00:35:45,476 A:middle
and without all the interfaces

798
00:35:45,476 --> 00:35:47,896 A:middle
that you would need
for various things.

799
00:35:47,896 --> 00:35:48,896 A:middle
But this gives you an idea.

800
00:35:49,216 --> 00:35:52,856 A:middle
We created class
called XPlatformColor

801
00:35:53,336 --> 00:35:56,236 A:middle
and we'd base it off of
NSObject, and underneath

802
00:35:56,236 --> 00:36:00,586 A:middle
that class, we'll place a
UIColor as the underlying color.

803
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

804
00:36:00,646 --> 00:36:04,406 A:middle
And so, whenever we need to
do something on the color,

805
00:36:04,406 --> 00:36:07,486 A:middle
we'd actually call through
to iOS to do that for us

806
00:36:07,486 --> 00:36:10,936 A:middle
so we wouldn't have to
duplicate that code.

807
00:36:10,936 --> 00:36:13,146 A:middle
And on OS X, we could put
this in a separate file.

808
00:36:13,146 --> 00:36:14,666 A:middle
In this case, we're
putting it in on one slide

809
00:36:14,666 --> 00:36:16,186 A:middle
so we use the condition--

810
00:36:16,186 --> 00:36:20,266 A:middle
the cross-platform macros
that we talked about earlier.

811
00:36:20,816 --> 00:36:24,466 A:middle
But in this case, we're
going to base XPlatformColor

812
00:36:24,466 --> 00:36:26,166 A:middle
on the underlying
color of NSColor.

813
00:36:26,886 --> 00:36:28,846 A:middle
So that's what that
would look like.

814
00:36:28,946 --> 00:36:30,246 A:middle
So what are the benefits
of that?

815
00:36:30,476 --> 00:36:31,316 A:middle
And so you're going to have to--

816
00:36:31,316 --> 00:36:35,076 A:middle
by the way, this is doing
some hand waving on the rest

817
00:36:35,076 --> 00:36:37,586 A:middle
of the interface because you're
going to have things like color

818
00:36:37,586 --> 00:36:39,766 A:middle
with red, green, blue, alpha
perhaps, or a red color

819
00:36:39,766 --> 00:36:41,646 A:middle
or whatever you want to
have as your interface.

820
00:36:41,646 --> 00:36:42,386 A:middle
You can choose, right?

821
00:36:42,386 --> 00:36:43,786 A:middle
This is your class
that you're making.

822
00:36:44,366 --> 00:36:46,186 A:middle
So what are the benefits
of that?

823
00:36:46,186 --> 00:36:48,086 A:middle
Well, one thing, you're
going to be flexible again,

824
00:36:48,776 --> 00:36:50,446 A:middle
a lot more flexible
than mirrored code.

825
00:36:50,446 --> 00:36:53,326 A:middle
You're going to maximize
your code reuse.

826
00:36:53,326 --> 00:36:56,396 A:middle
This is a lot more reuse
than mirrored code.

827
00:36:57,316 --> 00:36:57,816 A:middle
Why is that?

828
00:36:57,816 --> 00:36:59,126 A:middle
Because your interface
is the same.

829
00:36:59,206 --> 00:37:00,996 A:middle
So any place that you need
to color, you're going

830
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

831
00:37:00,996 --> 00:37:01,956 A:middle
to call XPlatformColor.

832
00:37:01,956 --> 00:37:04,516 A:middle
And all of your platform
specific stuff is hidden

833
00:37:04,516 --> 00:37:07,016 A:middle
underneath an implementation
of the XPlatformColor code.

834
00:37:07,096 --> 00:37:08,136 A:middle
So that's nice.

835
00:37:08,736 --> 00:37:10,646 A:middle
It's a simplified interface
because you're making it.

836
00:37:10,646 --> 00:37:12,806 A:middle
It's tailor-made for
you, so that's great.

837
00:37:12,806 --> 00:37:16,596 A:middle
And it requires less maintenance
because, again, you're--

838
00:37:16,756 --> 00:37:19,656 A:middle
you have a common interface and
unlike mirrored code where you,

839
00:37:19,656 --> 00:37:22,146 A:middle
you know, you want to change
something, you had to change

840
00:37:22,146 --> 00:37:23,466 A:middle
in all different places.

841
00:37:23,766 --> 00:37:24,636 A:middle
So that's great.

842
00:37:25,526 --> 00:37:27,516 A:middle
The downsides are, it
has some downsides,

843
00:37:27,846 --> 00:37:30,026 A:middle
it's a lot of additional
code that you got to write.

844
00:37:30,596 --> 00:37:36,106 A:middle
So-- and so, there's going to
be another strategy we can talk

845
00:37:36,106 --> 00:37:38,346 A:middle
about next that has a little
bit less code, so, anyway.

846
00:37:38,576 --> 00:37:39,436 A:middle
When do you use this?

847
00:37:39,536 --> 00:37:42,106 A:middle
Well, you use this
when you're dealing

848
00:37:42,106 --> 00:37:45,416 A:middle
with an underlying API that's
significantly different

849
00:37:46,196 --> 00:37:47,516 A:middle
between iOS and OS X.

850
00:37:47,516 --> 00:37:49,016 A:middle
And this is a great
pattern for that.

851
00:37:49,016 --> 00:37:50,806 A:middle
OK. So, this is a
great strategy.

852
00:37:50,806 --> 00:37:52,346 A:middle
What about another strategy?

853
00:37:52,346 --> 00:37:55,896 A:middle
OK. So here's one that we can
take advantage of in some cases

854
00:37:55,896 --> 00:37:59,336 A:middle
and that is the adapter
pattern using #define.

855
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

856
00:38:00,296 --> 00:38:02,576 A:middle
Now, #define is the
pre-processor macro

857
00:38:03,106 --> 00:38:05,676 A:middle
that in this case is, what
we're going to do is we're going

858
00:38:05,676 --> 00:38:08,926 A:middle
to substitute every occurrence
of XPlatformColor with UIColor.

859
00:38:08,926 --> 00:38:11,086 A:middle
And we're doing that before
the compiler ever gets to it.

860
00:38:11,386 --> 00:38:14,726 A:middle
So this happens before
compile time and that's going

861
00:38:14,726 --> 00:38:16,906 A:middle
to have some cool
advantages for that.

862
00:38:16,906 --> 00:38:20,096 A:middle
And for OS X, we would
substitute that with NSColor.

863
00:38:20,096 --> 00:38:22,316 A:middle
So every time we
see XPlatformColor,

864
00:38:22,316 --> 00:38:23,666 A:middle
it's an automatically
insert that.

865
00:38:24,396 --> 00:38:28,576 A:middle
Now, what does that do for us
and what is it not do to us?

866
00:38:28,576 --> 00:38:29,366 A:middle
There's a couple of things.

867
00:38:29,646 --> 00:38:32,406 A:middle
For one thing, there's
almost no new code to write.

868
00:38:32,406 --> 00:38:33,616 A:middle
You saw it there, that's it.

869
00:38:34,156 --> 00:38:36,216 A:middle
OK. So, that's nice.

870
00:38:36,516 --> 00:38:38,586 A:middle
It's going to give you
compile time air checking.

871
00:38:38,586 --> 00:38:42,006 A:middle
So because it's doing it before
the compiler ever gets to it,

872
00:38:42,336 --> 00:38:45,546 A:middle
it will tell you if you're using
it wrong, the compiler will.

873
00:38:45,946 --> 00:38:48,846 A:middle
So if you're using a selector
that's not appropriate,

874
00:38:49,096 --> 00:38:50,126 A:middle
it's going to tell you that.

875
00:38:50,546 --> 00:38:56,166 A:middle
Now, there's some downsides
and the first one is key.

876
00:38:56,276 --> 00:38:57,266 A:middle
Everyone pay attention.

877
00:38:57,576 --> 00:38:59,546 A:middle
This is only for
supported classes.

878
00:38:59,946 --> 00:39:00,766 A:middle
Let me say that again.

879
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

880
00:39:00,766 --> 00:39:02,446 A:middle
Only for supported classes.

881
00:39:02,446 --> 00:39:03,496 A:middle
So what are those classes?

882
00:39:04,776 --> 00:39:11,136 A:middle
UIColor and NSColor, UIFont and
NSFont, UIImage and NSImage,

883
00:39:11,746 --> 00:39:14,086 A:middle
and UIBezierPath
and NSBezierPath.

884
00:39:14,086 --> 00:39:17,806 A:middle
If you have a class that is
not in this set of four pairs

885
00:39:18,376 --> 00:39:20,736 A:middle
and you want to use the
strategy, please don't.

886
00:39:22,856 --> 00:39:24,616 A:middle
You will have undefined results.

887
00:39:24,706 --> 00:39:28,196 A:middle
So-- and the other thing to
keep in mind is that even

888
00:39:28,196 --> 00:39:31,116 A:middle
for these classes, it's
got limited API coverage.

889
00:39:31,116 --> 00:39:33,186 A:middle
So just because we're doing
this #define it doesn't mean

890
00:39:33,186 --> 00:39:35,646 A:middle
that we magically
get CMYK on UIColor.

891
00:39:35,986 --> 00:39:37,446 A:middle
We don't. It doesn't
happen that way.

892
00:39:38,026 --> 00:39:41,336 A:middle
So-- but the compiler
will warn you if you try

893
00:39:41,336 --> 00:39:42,516 A:middle
to use it so, that's good.

894
00:39:42,516 --> 00:39:46,336 A:middle
It will say, "Hey,
you-- this is an error."

895
00:39:46,336 --> 00:39:46,866 A:middle
So, anyway.

896
00:39:46,866 --> 00:39:50,366 A:middle
The other thing to
keep in mind is that,

897
00:39:50,526 --> 00:39:53,676 A:middle
if you're doing cross-platform
work which you obviously are

898
00:39:53,676 --> 00:39:55,606 A:middle
because you're in this talk
and that's what this is about,

899
00:39:56,086 --> 00:39:58,916 A:middle
and you're doing
archiving of your things,

900
00:39:58,916 --> 00:40:00,976 A:middle
it's going to require
some custom archiving.

901
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

902
00:40:01,046 --> 00:40:03,326 A:middle
because if you archive,
what ultimately ends

903
00:40:03,326 --> 00:40:05,066 A:middle
up being a UIColor
and you try to bring

904
00:40:05,066 --> 00:40:08,276 A:middle
that into OS X using
iCloud, that is going to say,

905
00:40:08,276 --> 00:40:10,836 A:middle
"I don't know UIColor is,"
and it's going to barf on you.

906
00:40:10,836 --> 00:40:12,176 A:middle
So, you're going to have

907
00:40:12,176 --> 00:40:14,146 A:middle
to write some custom
archiving code for that.

908
00:40:14,346 --> 00:40:15,066 A:middle
And that's pretty easy.

909
00:40:15,066 --> 00:40:16,996 A:middle
What you just want to do is
you want to save it in the way

910
00:40:16,996 --> 00:40:18,566 A:middle
that both platforms
can recognize.

911
00:40:19,056 --> 00:40:23,256 A:middle
So, migration testing
is my next slide.

912
00:40:23,766 --> 00:40:26,486 A:middle
And one thing to keep in mind
is all of the stuff means

913
00:40:26,486 --> 00:40:28,456 A:middle
that if you're code
compiles, it doesn't mean--

914
00:40:28,456 --> 00:40:29,536 A:middle
necessarily mean it's correct.

915
00:40:30,006 --> 00:40:30,996 A:middle
So please test.

916
00:40:32,096 --> 00:40:34,356 A:middle
Unit tests are good,
very, very good.

917
00:40:34,356 --> 00:40:35,076 A:middle
You should use them.

918
00:40:35,496 --> 00:40:39,056 A:middle
Xcode has some cool things in
it, Xcode 5 for doing that.

919
00:40:39,246 --> 00:40:41,686 A:middle
Manual testing is important too
because there are some things

920
00:40:41,686 --> 00:40:43,346 A:middle
that you probably can't
cover in a unit test.

921
00:40:43,596 --> 00:40:45,086 A:middle
Don't forget to send
it to your users.

922
00:40:45,086 --> 00:40:47,356 A:middle
They have different system
configurations and they're going

923
00:40:47,356 --> 00:40:48,826 A:middle
to use the software
differently than you.

924
00:40:49,256 --> 00:40:50,576 A:middle
So, do beta testing.

925
00:40:50,576 --> 00:40:54,526 A:middle
That's why there's reason why
we have the provisioning profile

926
00:40:54,526 --> 00:40:56,176 A:middle
so you can send out your
apps to those people.

927
00:40:57,206 --> 00:41:01,076 A:middle
And testing plans, you know,
if you have a testing plan,

928
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

929
00:41:01,346 --> 00:41:03,236 A:middle
then it means that every
single time that you come

930
00:41:03,236 --> 00:41:05,226 A:middle
out with a release and
you follow that plan,

931
00:41:05,226 --> 00:41:08,946 A:middle
it's going to mean that your
software is a lot more--

932
00:41:08,946 --> 00:41:10,796 A:middle
well, at least it's
tested, right?

933
00:41:11,196 --> 00:41:17,346 A:middle
Now, I stress this because the
number one reason why apps get

934
00:41:17,346 --> 00:41:19,996 A:middle
rejected from the app
store at least initially is

935
00:41:19,996 --> 00:41:22,406 A:middle
because they crash
during the review process.

936
00:41:22,406 --> 00:41:24,826 A:middle
So you don't want your app to be
one of those because it's going

937
00:41:24,826 --> 00:41:26,366 A:middle
to take more time
to get it reviewed.

938
00:41:26,366 --> 00:41:29,276 A:middle
And that's actually good
news because if it crashes

939
00:41:29,276 --> 00:41:30,826 A:middle
for the reviewers
then it's not going

940
00:41:30,826 --> 00:41:32,576 A:middle
to be crashing for your users.

941
00:41:32,576 --> 00:41:34,756 A:middle
That may even worse if it
didn't-- so do your testing.

942
00:41:35,376 --> 00:41:38,296 A:middle
Anyway, I'm going to bring Dan
back on stage and he's going

943
00:41:38,296 --> 00:41:39,686 A:middle
to show you how we've
implemented some

944
00:41:39,686 --> 00:41:42,936 A:middle
of these strategies to
bring the iOS app to OS X.

945
00:41:42,936 --> 00:41:43,356 A:middle
Thanks Dan.

946
00:41:43,856 --> 00:41:47,646 A:middle
[applause]

947
00:41:48,146 --> 00:41:48,656 A:middle
>> Thank you, Cortis.

948
00:41:49,336 --> 00:41:51,506 A:middle
I've been hard at work while
Cortis has been talking

949
00:41:51,676 --> 00:41:55,276 A:middle
and now I have a new final
copy of my application.

950
00:41:55,976 --> 00:41:57,876 A:middle
So here we are, this
is an untitled document

951
00:41:58,306 --> 00:42:00,536 A:middle
and you see instead of
the toolbar at the bottom,

952
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

953
00:42:00,536 --> 00:42:03,106 A:middle
I have a toolbar on the
top that has selectors

954
00:42:03,106 --> 00:42:05,916 A:middle
for the different shapes and
the Stroke and Fill colors.

955
00:42:06,126 --> 00:42:07,446 A:middle
So-- but the same
things applies.

956
00:42:07,446 --> 00:42:09,536 A:middle
I click, I can create things.

957
00:42:09,996 --> 00:42:13,556 A:middle
I can even create a new
document and I can even--

958
00:42:13,556 --> 00:42:15,906 A:middle
I can use that to make the
same shape that I did before.

959
00:42:16,386 --> 00:42:18,006 A:middle
I can drag it.

960
00:42:18,286 --> 00:42:22,366 A:middle
All right, two documents here.

961
00:42:22,586 --> 00:42:24,206 A:middle
And I can change my Fill color.

962
00:42:24,206 --> 00:42:28,146 A:middle
Let's do, I'm going to make the
same [inaudible], a nice purple,

963
00:42:28,336 --> 00:42:29,206 A:middle
it could be different planet.

964
00:42:29,486 --> 00:42:31,776 A:middle
OK. So then here we have
[laughter] roughly the same

965
00:42:31,776 --> 00:42:33,686 A:middle
document here.

966
00:42:33,686 --> 00:42:39,036 A:middle
And I can give this a name, see,

967
00:42:39,576 --> 00:42:44,416 A:middle
"My House," saved
on the desktop.

968
00:42:44,606 --> 00:42:46,876 A:middle
So let's say-- OK
and I saved it.

969
00:42:47,626 --> 00:42:49,416 A:middle
I have made some other
changes by mistake.

970
00:42:49,836 --> 00:42:51,076 A:middle
Let's say-- oh, and
now I kind of want

971
00:42:51,076 --> 00:42:54,676 A:middle
to see what, versions
in the past.

972
00:42:54,676 --> 00:42:58,626 A:middle
So I can use Browser Versions
and then this is entirely

973
00:42:58,626 --> 00:43:00,966 A:middle
for free just by do-- but
by dotting in this document.

974
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

975
00:43:01,936 --> 00:43:04,256 A:middle
And I can go-- oh, this is
the one I actually wanted us

976
00:43:04,256 --> 00:43:04,696 A:middle
to save.

977
00:43:05,376 --> 00:43:09,356 A:middle
Now, this is-- that's
how it works.

978
00:43:09,416 --> 00:43:13,306 A:middle
OK. So let's go back
and look at the code.

979
00:43:13,306 --> 00:43:17,386 A:middle
OK. So, I've re-organized
my code a bit.

980
00:43:17,816 --> 00:43:19,876 A:middle
I have-- I've broken
all the common code out

981
00:43:19,876 --> 00:43:22,666 A:middle
and take the common source
and I have as different spots

982
00:43:22,706 --> 00:43:24,096 A:middle
for iOS and the macro source.

983
00:43:24,816 --> 00:43:27,196 A:middle
So in my common source,
we have all the model bits

984
00:43:27,646 --> 00:43:28,196 A:middle
and I was [inaudible].

985
00:43:28,196 --> 00:43:30,086 A:middle
We had already done some--

986
00:43:30,086 --> 00:43:31,926 A:middle
a little bit of work
that like of--

987
00:43:31,926 --> 00:43:33,926 A:middle
well of course, I was talking
about what the platform color.

988
00:43:33,926 --> 00:43:38,246 A:middle
So here we have our platform
color and I can show you,

989
00:43:38,246 --> 00:43:39,466 A:middle
let's see, well, on a shape.

990
00:43:42,536 --> 00:43:43,706 A:middle
The shape has all these things.

991
00:43:43,706 --> 00:43:45,996 A:middle
It also has a Fill
Color and a Stroke Color

992
00:43:45,996 --> 00:43:47,826 A:middle
and it's using this
platform color.

993
00:43:48,846 --> 00:43:51,766 A:middle
And again, like what
Cortis is talking about,

994
00:43:52,126 --> 00:43:52,926 A:middle
let's see, let's go down.

995
00:43:52,926 --> 00:43:54,406 A:middle
This is about-- this
my archiving code.

996
00:43:54,406 --> 00:43:56,896 A:middle
This is when I-- how I
init in from the archive.

997
00:43:57,336 --> 00:43:59,736 A:middle
Let's hide this to
easier to see.

998
00:43:59,736 --> 00:44:03,796 A:middle
So you can see, I'm
using-- when I encode it,

999
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1000
00:44:04,556 --> 00:44:07,796 A:middle
I'm actually using a CIColor
to archive it to a file

1001
00:44:07,796 --> 00:44:10,126 A:middle
because that's something
that exist on both platforms.

1002
00:44:10,336 --> 00:44:14,966 A:middle
So that's something I can use
to make a consistent archive

1003
00:44:14,966 --> 00:44:17,066 A:middle
so I can open the same
document on both sides.

1004
00:44:17,216 --> 00:44:21,246 A:middle
So if the models are the same,

1005
00:44:21,246 --> 00:44:23,146 A:middle
what is the controller
level look like?

1006
00:44:23,336 --> 00:44:25,106 A:middle
So on the view side,
it looks very similar.

1007
00:44:25,106 --> 00:44:27,986 A:middle
I've got a Document
View that respond--

1008
00:44:27,986 --> 00:44:29,156 A:middle
that corresponds to the canvas.

1009
00:44:29,676 --> 00:44:31,776 A:middle
I've got a Shape View that
corresponds to each shape

1010
00:44:32,046 --> 00:44:34,536 A:middle
and these are both
subclasses of NSView.

1011
00:44:35,756 --> 00:44:39,766 A:middle
And then on the controller
side, I've got a single document

1012
00:44:39,766 --> 00:44:40,636 A:middle
because there's some--

1013
00:44:40,906 --> 00:44:43,556 A:middle
the document can serve as the
controller for the whole thing

1014
00:44:43,556 --> 00:44:45,456 A:middle
because there are not other
screens that could show up.

1015
00:44:46,476 --> 00:44:50,976 A:middle
And the document really
only has support for--

1016
00:44:51,086 --> 00:44:54,936 A:middle
really only need to do things
like it has some undo support.

1017
00:44:54,936 --> 00:45:00,736 A:middle
And then it does-- this
is the data, same code.

1018
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1019
00:45:00,736 --> 00:45:03,386 A:middle
So this takes the archiving
and then it reads it.

1020
00:45:04,146 --> 00:45:06,956 A:middle
So I can build this and
I'm back to my same data

1021
00:45:07,126 --> 00:45:11,236 A:middle
and I should mention that I
can also do keyboard shortcuts.

1022
00:45:11,236 --> 00:45:14,686 A:middle
So if I can do Command-Z,
see the Edit Menu Flash

1023
00:45:14,686 --> 00:45:16,186 A:middle
and those shapes go away.

1024
00:45:16,186 --> 00:45:18,486 A:middle
I can also go back
up here, do the redo.

1025
00:45:18,486 --> 00:45:19,736 A:middle
This is all again for free just

1026
00:45:19,736 --> 00:45:21,606 A:middle
by using NSUndoManager,
my model.

1027
00:45:22,396 --> 00:45:24,086 A:middle
And I can use keyboard
equivalence.

1028
00:45:24,186 --> 00:45:25,786 A:middle
These are custom
things that I set up.

1029
00:45:25,786 --> 00:45:28,686 A:middle
I can use keyboard
equivalence to change the shape.

1030
00:45:28,816 --> 00:45:31,086 A:middle
And these are things that
our users are going to expect

1031
00:45:31,086 --> 00:45:32,126 A:middle
when they come to
your application.

1032
00:45:32,296 --> 00:45:35,586 A:middle
So I'm going to hand it back
over to Cortis to finish up.

1033
00:45:35,996 --> 00:45:36,266 A:middle
Thank you.

1034
00:45:36,411 --> 00:45:38,411 A:middle
[applause]

1035
00:45:38,556 --> 00:45:39,116 A:middle
>> Thanks Dan.

1036
00:45:39,216 --> 00:45:40,386 A:middle
That is some amazing work.

1037
00:45:40,966 --> 00:45:42,766 A:middle
He's a fast coder isn't he?

1038
00:45:42,766 --> 00:45:46,906 A:middle
OK. So, like I said before,
there's three things I'd

1039
00:45:46,906 --> 00:45:49,136 A:middle
like you to take home today.

1040
00:45:49,486 --> 00:45:52,726 A:middle
Number one is I want you
to rethink your iOS apps

1041
00:45:53,006 --> 00:45:55,256 A:middle
in terms of OS X apps, OK?

1042
00:45:55,426 --> 00:45:57,116 A:middle
So there are some changes that
you'll need to make there.

1043
00:45:57,326 --> 00:45:59,806 A:middle
Number two, restructure
your code

1044
00:45:59,806 --> 00:46:02,366 A:middle
so that your model is cleanly
separated from your view

1045
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1046
00:46:02,366 --> 00:46:03,066 A:middle
and you're controller.

1047
00:46:03,066 --> 00:46:04,746 A:middle
That way, you'll be
able to take advantage

1048
00:46:05,516 --> 00:46:07,736 A:middle
of the maximum code
reuse possible.

1049
00:46:08,466 --> 00:46:10,326 A:middle
And three, just get started.

1050
00:46:10,526 --> 00:46:12,356 A:middle
You know, your customers
are going to love it

1051
00:46:12,356 --> 00:46:14,346 A:middle
that you have an
OS X app especially

1052
00:46:14,346 --> 00:46:16,806 A:middle
if you integrate your iOS
and OS X app experience.

1053
00:46:16,806 --> 00:46:17,636 A:middle
So that's going to be great.

1054
00:46:18,146 --> 00:46:19,256 A:middle
If you want more information,

1055
00:46:19,256 --> 00:46:21,366 A:middle
please take contact
Jake Behrens.

1056
00:46:21,786 --> 00:46:22,416 A:middle
He's awesome.

1057
00:46:22,416 --> 00:46:24,736 A:middle
He will answer your
emails maybe.

1058
00:46:25,226 --> 00:46:25,726 A:middle
I think he will.

1059
00:46:26,166 --> 00:46:27,306 A:middle
>> He will.

1060
00:46:27,716 --> 00:46:28,556 A:middle
>> He will, he says.

1061
00:46:28,806 --> 00:46:33,376 A:middle
OK. Documentation, go
to AppKit documentation

1062
00:46:33,376 --> 00:46:36,006 A:middle
at developer.apple.com/mac.

1063
00:46:36,256 --> 00:46:39,646 A:middle
For the User Interface
Guidelines, this is important

1064
00:46:39,646 --> 00:46:41,786 A:middle
because this is going to show
you how to make a great Mac app.

1065
00:46:42,126 --> 00:46:43,606 A:middle
So go to that one.

1066
00:46:43,606 --> 00:46:45,856 A:middle
That's developer.apple.com/ue.

1067
00:46:46,256 --> 00:46:48,946 A:middle
The Developer Forums, a great
place to talk to developers.

1068
00:46:49,736 --> 00:46:51,106 A:middle
We've got real developers there.

1069
00:46:51,176 --> 00:46:55,026 A:middle
We haven't put Siri to work yet
there but real Apple developers.

1070
00:46:56,656 --> 00:46:58,676 A:middle
Some great talks to look at.

1071
00:46:58,946 --> 00:47:01,916 A:middle
So we have taken control
of Auto Layout in Xcode 5.

1072
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1073
00:47:02,316 --> 00:47:03,516 A:middle
If you want to know
how to do X--

1074
00:47:03,516 --> 00:47:05,346 A:middle
Auto Layout, that's
a great one to go to.

1075
00:47:05,346 --> 00:47:07,636 A:middle
There are lots of also
talks from previous years

1076
00:47:07,636 --> 00:47:08,886 A:middle
that you're going to have access

1077
00:47:08,916 --> 00:47:11,916 A:middle
to on your WWDC app
for Auto Layout.

1078
00:47:12,096 --> 00:47:14,346 A:middle
Introduction to SpriteKit, I
made a plug for it earlier.

1079
00:47:14,346 --> 00:47:16,256 A:middle
That's going to be great
if you're doing any kind

1080
00:47:16,256 --> 00:47:18,156 A:middle
of cross-platform 2D Game.

1081
00:47:18,876 --> 00:47:21,246 A:middle
Best practices for Cocoa
Animation, that's a great place

1082
00:47:21,246 --> 00:47:23,376 A:middle
to go to for information
on NSStackView

1083
00:47:23,766 --> 00:47:27,496 A:middle
for core animation
changes and for things

1084
00:47:27,496 --> 00:47:28,916 A:middle
about auto layout as well.

1085
00:47:28,916 --> 00:47:29,656 A:middle
And we'll give you a few--

1086
00:47:29,836 --> 00:47:31,316 A:middle
things about animation
and auto layout.

1087
00:47:31,316 --> 00:47:33,126 A:middle
And then Introducing TextKit,
and then we haven't talked

1088
00:47:33,126 --> 00:47:34,726 A:middle
about that at all
in this session

1089
00:47:35,086 --> 00:47:37,026 A:middle
but if you've attended some
of the earlier sessions,

1090
00:47:37,026 --> 00:47:38,316 A:middle
you'll probably be
quite pleased.

1091
00:47:38,316 --> 00:47:39,386 A:middle
But we didn't really
talk about that

1092
00:47:39,386 --> 00:47:41,996 A:middle
but the TextKit is
actually implemented

1093
00:47:41,996 --> 00:47:46,256 A:middle
on the same fundamentals
as the OS X Cocoa Text.

1094
00:47:46,696 --> 00:47:52,096 A:middle
So, all of the things that you
can do is Cocoa Text or sorry,

1095
00:47:52,096 --> 00:47:54,866 A:middle
in TextKit that you've
learned about, you can also do

1096
00:47:54,866 --> 00:47:56,596 A:middle
in Cocoa Text and your code
is going to be the same.

1097
00:47:56,596 --> 00:47:59,606 A:middle
So, your NSLayout Managers
and your NSText Storage,

1098
00:47:59,606 --> 00:48:01,126 A:middle
all of that is on OS X

1099
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1100
00:48:01,236 --> 00:48:02,816 A:middle
and you're code can
be largely the same.

1101
00:48:03,246 --> 00:48:03,996 A:middle
Thank for coming.

1102
00:48:03,996 --> 00:48:05,236 A:middle
Enjoy the rest of your show.

1103
00:48:05,626 --> 00:48:07,626 A:middle
[Applause]

1104
00:48:08,016 --> 00:48:13,026 A:middle
[ Silence ]

1105
