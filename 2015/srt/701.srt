X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1
00:00:06,726 --> 00:00:16,015 A:middle
>> DANVIN RUANGCHAN: All
right, good morning, everyone,

2
00:00:26,206 --> 00:00:31,476 A:middle
and welcome to session 701.

3
00:00:31,746 --> 00:00:34,646 A:middle
My name is Danvin, and I'm
really excited to be here today

4
00:00:34,646 --> 00:00:36,876 A:middle
to talk to you guys
about Wallet,

5
00:00:37,596 --> 00:00:40,136 A:middle
the app formerly
known as Passbook.

6
00:00:40,606 --> 00:00:41,016 A:middle
All right.

7
00:00:41,016 --> 00:00:44,856 A:middle
With a new name, we
also have a new logo!

8
00:00:45,676 --> 00:00:48,996 A:middle
And you may have seen our
icon if you installed iOS 9,

9
00:00:49,226 --> 00:00:54,136 A:middle
this is now our new icon, but
beauty is more than skin deep.

10
00:00:54,606 --> 00:00:57,156 A:middle
We have been working on a
lot of features for Wallet

11
00:00:57,156 --> 00:00:58,306 A:middle
over the past few years.

12
00:00:58,586 --> 00:01:00,836 A:middle
We will talk about a
few of those today.

13

14
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

15
00:00:58,586 --> 00:01:00,836 A:middle
We will talk about a
few of those today.

16
00:01:01,236 --> 00:01:03,506 A:middle
So let's take a look at
our agenda and take a look

17
00:01:03,506 --> 00:01:05,206 A:middle
at what we will be
talking about today.

18
00:01:05,786 --> 00:01:08,166 A:middle
First we're going to take a
glance at what we've been up to

19
00:01:08,906 --> 00:01:11,676 A:middle
and then a quick history lesson

20
00:01:11,836 --> 00:01:13,976 A:middle
and review all of
Wallet's features.

21
00:01:14,186 --> 00:01:16,086 A:middle
We will talk about
what is a Pass.

22
00:01:17,066 --> 00:01:19,586 A:middle
We will talk about PassKit,
our framework inside iOS

23
00:01:19,586 --> 00:01:24,356 A:middle
and we're going to talk about
Apple Pay and then there's more!

24
00:01:24,606 --> 00:01:25,276 A:middle
So stick around.

25
00:01:25,276 --> 00:01:27,316 A:middle
We have a lot of content
to talk about today.

26
00:01:27,946 --> 00:01:28,996 A:middle
So what have we been up to?

27
00:01:29,646 --> 00:01:32,126 A:middle
Well, Apple Pay is
what we have been up to

28
00:01:32,386 --> 00:01:34,906 A:middle
and Apple Pay was
introduced last fall,

29
00:01:35,366 --> 00:01:37,566 A:middle
and the responses
have been great!

30
00:01:38,236 --> 00:01:40,426 A:middle
Consumers have loved
its ease of use.

31
00:01:40,746 --> 00:01:43,726 A:middle
And merchants have loved
its higher conversion rates.

32
00:01:44,876 --> 00:01:48,276 A:middle
And now with Apple Pay we have
now enabled contactless payments

33
00:01:48,626 --> 00:01:50,526 A:middle
on our phones, our watches.

34
00:01:50,766 --> 00:01:52,006 A:middle
We even released an API

35
00:01:52,006 --> 00:01:56,946 A:middle
so you can take Apple Pay
inside your apps as well.

36
00:01:58,226 --> 00:02:00,646 A:middle
But to understand the
essence of Wallet,

37

38
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

39
00:01:58,226 --> 00:02:00,646 A:middle
But to understand the
essence of Wallet,

40
00:02:00,756 --> 00:02:04,826 A:middle
to understand what we are about,
we need to take a look back.

41
00:02:05,396 --> 00:02:08,906 A:middle
Take a look back and
see how we got here.

42
00:02:09,936 --> 00:02:12,346 A:middle
Does this ring a bell?

43
00:02:12,346 --> 00:02:13,656 A:middle
Does this look familiar
to anyone.

44
00:02:13,656 --> 00:02:15,836 A:middle
Does anyone have a wallet
that looks like this?

45
00:02:17,296 --> 00:02:18,526 A:middle
I'm sure someone out there

46
00:02:18,526 --> 00:02:19,876 A:middle
who has a wallet
that looks like this.

47
00:02:19,876 --> 00:02:21,966 A:middle
This is a real problem.

48
00:02:22,406 --> 00:02:25,606 A:middle
We stick our gift cards in here,
our debit cards and credit cards

49
00:02:25,606 --> 00:02:28,626 A:middle
and our coupons and
then when we try

50
00:02:28,626 --> 00:02:31,316 A:middle
to find something,
we can't find it.

51
00:02:32,726 --> 00:02:36,196 A:middle
The overstuffed wallet
is a real problem.

52
00:02:36,756 --> 00:02:39,206 A:middle
And we are trying to solve
that problem with Wallet.

53
00:02:40,036 --> 00:02:41,846 A:middle
We do so with passes.

54
00:02:41,846 --> 00:02:45,176 A:middle
We have beautiful
passes inside Wallet.

55
00:02:45,376 --> 00:02:50,716 A:middle
We have passes for coupons, for
event tickets for store cards,

56
00:02:51,186 --> 00:02:53,016 A:middle
and even for boarding
passes as well.

57
00:02:53,716 --> 00:02:56,106 A:middle
But all the things that
these passes have in common,

58
00:02:56,416 --> 00:03:00,646 A:middle
is that they all allow us to
take action in the real world.

59

60
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

61
00:02:56,416 --> 00:03:00,646 A:middle
is that they all allow us to
take action in the real world.

62
00:03:01,216 --> 00:03:05,426 A:middle
And now, with Apple Pay,
we have your credit cards

63
00:03:05,766 --> 00:03:08,386 A:middle
and debit cards inside
Wallet as well.

64
00:03:08,386 --> 00:03:10,116 A:middle
But we went beyond that.

65
00:03:10,116 --> 00:03:12,196 A:middle
We want to solve the problem
where we can't find the thing

66
00:03:12,196 --> 00:03:13,806 A:middle
at the right place at the
right time so we built

67
00:03:13,806 --> 00:03:17,076 A:middle
in relevancy inside
our passes as well.

68
00:03:17,076 --> 00:03:17,946 A:middle
And they look like this.

69
00:03:17,946 --> 00:03:19,416 A:middle
If you come to the airport,

70
00:03:19,716 --> 00:03:21,786 A:middle
your boarding pass is right
there waiting for you.

71
00:03:22,316 --> 00:03:24,636 A:middle
All I do is swipe
on the lock screen

72
00:03:24,886 --> 00:03:27,636 A:middle
and my boarding pass
is ready to use.

73
00:03:28,456 --> 00:03:29,816 A:middle
It's so great!

74
00:03:29,816 --> 00:03:32,736 A:middle
It's that great surprise in the
light factor that this brings.

75
00:03:32,956 --> 00:03:37,246 A:middle
But let's take a
look at these passes.

76
00:03:37,366 --> 00:03:39,996 A:middle
In essence, these passes
contain information.

77
00:03:40,536 --> 00:03:43,766 A:middle
On the top left-hand corner
you will see there's a logo.

78
00:03:44,286 --> 00:03:47,876 A:middle
It clearly states the entity
that this pass belongs to.

79
00:03:48,016 --> 00:03:49,236 A:middle
In this particular
case we are looking

80
00:03:49,236 --> 00:03:50,526 A:middle
at a United boarding pass.

81
00:03:51,606 --> 00:03:54,306 A:middle
So their logo is
predominantly up there

82
00:03:54,306 --> 00:03:55,566 A:middle
in the top left-hand corner.

83
00:03:56,746 --> 00:03:59,386 A:middle
We put our important
information in our header field.

84

85
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

86
00:04:00,546 --> 00:04:02,716 A:middle
In this case, our gate
information is present there.

87
00:04:03,176 --> 00:04:05,826 A:middle
Our users will know exactly
what gate they need to go to,

88
00:04:06,216 --> 00:04:07,816 A:middle
when boarding time arrives.

89
00:04:08,356 --> 00:04:12,646 A:middle
We put our important information
down in our primary fields.

90
00:04:13,606 --> 00:04:17,005 A:middle
And this particular case, we
have a flight that takes off

91
00:04:17,005 --> 00:04:20,046 A:middle
from Newark and arrives
in Stockholm.

92
00:04:21,875 --> 00:04:25,326 A:middle
We also have auxiliary and
secondary fields and this is

93
00:04:25,326 --> 00:04:28,466 A:middle
where we put our nice go to
know pieces of information,

94
00:04:28,466 --> 00:04:30,196 A:middle
things like the seat number.

95
00:04:30,726 --> 00:04:34,806 A:middle
And, of course, we
have our bar code.

96
00:04:34,806 --> 00:04:36,296 A:middle
And this is that link.

97
00:04:36,686 --> 00:04:39,826 A:middle
It's the message that connects
the users to your system,

98
00:04:39,826 --> 00:04:42,526 A:middle
to be able to take action in the
real world, and in this case,

99
00:04:42,526 --> 00:04:46,786 A:middle
this boarding pass will allow
the user to board a flight.

100
00:04:46,786 --> 00:04:50,646 A:middle
And we can flip this
to the back.

101
00:04:51,016 --> 00:04:53,396 A:middle
We call this the
back of the pass.

102
00:04:53,486 --> 00:04:54,346 A:middle
And you'll notice right away

103
00:04:54,346 --> 00:04:58,066 A:middle
on the very top you can
associate an app with this pass,

104
00:04:58,626 --> 00:05:02,926 A:middle
and appropriately we have the
United Airlines app associated

105

106
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

107
00:04:58,626 --> 00:05:02,926 A:middle
and appropriately we have the
United Airlines app associated

108
00:05:02,926 --> 00:05:03,556 A:middle
with this pass.

109
00:05:04,376 --> 00:05:06,326 A:middle
There are two options
for users here as well.

110
00:05:06,506 --> 00:05:08,666 A:middle
To be able to automatically
update this pass,

111
00:05:08,706 --> 00:05:10,256 A:middle
that's very important
we're going touch

112
00:05:10,256 --> 00:05:12,956 A:middle
on that a little bit later in
our presentation to be able

113
00:05:12,956 --> 00:05:16,286 A:middle
to update these passes to
keep information up to date.

114
00:05:17,186 --> 00:05:20,006 A:middle
We can also turn on and
off relevancy on and off

115
00:05:20,006 --> 00:05:21,226 A:middle
on the back of the pass as well.

116
00:05:21,226 --> 00:05:24,246 A:middle
That's the option there,
Suggest Pass on Lock Screen.

117
00:05:24,586 --> 00:05:26,526 A:middle
And along with that, on
the back of the pass,

118
00:05:26,526 --> 00:05:29,066 A:middle
with he have some other nice
to know pieces of information,

119
00:05:29,126 --> 00:05:34,386 A:middle
things like terms can go
open the back of the pass.

120
00:05:34,386 --> 00:05:35,546 A:middle
What makes a pass a pass?

121
00:05:36,236 --> 00:05:40,586 A:middle
Let's take a look at this
beautiful MLB event ticket.

122
00:05:41,756 --> 00:05:45,426 A:middle
The pass is made from
a pass.json file.

123
00:05:45,426 --> 00:05:47,046 A:middle
The contents and the layout

124
00:05:47,046 --> 00:05:49,136 A:middle
of this pass is defined
in that file.

125
00:05:49,136 --> 00:05:52,296 A:middle
And it just your standard JSON
file with keys and values.

126
00:05:52,816 --> 00:05:55,566 A:middle
In this case the keys and
values determine the content

127
00:05:55,716 --> 00:05:57,676 A:middle
and the styling and the
layout of this pass.

128
00:05:59,456 --> 00:06:02,666 A:middle
And this MLB pass also has
some really beautiful images.

129

130
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

131
00:05:59,456 --> 00:06:02,666 A:middle
And this MLB pass also has
some really beautiful images.

132
00:06:02,666 --> 00:06:06,536 A:middle
We have a logo that's an image
on the top left-hand corner

133
00:06:07,456 --> 00:06:09,656 A:middle
and we have a strip image
that spans that pass.

134
00:06:09,656 --> 00:06:11,476 A:middle
It really makes that
pass come to life.

135
00:06:11,916 --> 00:06:14,306 A:middle
And when we package
all of these things

136
00:06:14,306 --> 00:06:18,236 A:middle
up together we get what
is called a PKPass file.

137
00:06:19,506 --> 00:06:21,516 A:middle
And the file hierarchy
looks something like this.

138
00:06:22,226 --> 00:06:25,106 A:middle
Your PKPass file will
contain the pass.json

139
00:06:25,256 --> 00:06:28,596 A:middle
and those images we talked
about and there are a couple

140
00:06:28,596 --> 00:06:30,396 A:middle
of other files in there
I want to point out.

141
00:06:31,306 --> 00:06:33,406 A:middle
First of all, there are
localized strings in here.

142
00:06:33,946 --> 00:06:35,636 A:middle
Yes, passes can be localized,

143
00:06:35,636 --> 00:06:37,296 A:middle
I will encourage
you guys to do so.

144
00:06:37,826 --> 00:06:40,866 A:middle
You'll also notice
on the bottom,

145
00:06:41,296 --> 00:06:43,546 A:middle
the manifest file
and a signature file.

146
00:06:44,686 --> 00:06:46,626 A:middle
Our passes are cryptographically
signed

147
00:06:46,746 --> 00:06:49,056 A:middle
so that their authenticity
can be verified

148
00:06:49,496 --> 00:06:52,616 A:middle
and that the users know that the
pass came from a known entity.

149
00:06:53,126 --> 00:06:54,636 A:middle
This is great.

150
00:06:55,036 --> 00:06:56,766 A:middle
So now with a PK pass file

151
00:06:56,766 --> 00:06:58,606 A:middle
and this is now just
a generic pass file.

152
00:06:58,606 --> 00:06:59,666 A:middle
How do we make this unique?

153
00:06:59,666 --> 00:07:01,636 A:middle
How do we make this your pass?

154

155
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

156
00:06:59,666 --> 00:07:01,636 A:middle
How do we make this your pass?

157
00:07:02,416 --> 00:07:04,746 A:middle
Well we use three
different values to be able

158
00:07:04,746 --> 00:07:06,946 A:middle
to determine the
uniqueness of your pass.

159
00:07:08,486 --> 00:07:10,886 A:middle
The first one is
the teamIdentifier

160
00:07:10,886 --> 00:07:14,016 A:middle
and this is just a 10 character
string that you can find

161
00:07:14,016 --> 00:07:16,986 A:middle
in the developer portal and
we use this to entitle apps

162
00:07:17,866 --> 00:07:20,726 A:middle
to gain access via
PassKit, our framework.

163
00:07:21,236 --> 00:07:25,616 A:middle
The second value we use
is a passTypeIdentifier.

164
00:07:25,976 --> 00:07:29,296 A:middle
And now this defines the class
or the category of passes

165
00:07:29,396 --> 00:07:31,966 A:middle
that this particular pass is.

166
00:07:31,966 --> 00:07:34,446 A:middle
You register for this in the
developer portal as well.

167
00:07:34,846 --> 00:07:37,896 A:middle
We also use this value
to group passes together.

168
00:07:38,726 --> 00:07:42,226 A:middle
And lastly, we have
the pass serialNumber.

169
00:07:43,216 --> 00:07:45,556 A:middle
And now, this is unique
for every single pass.

170
00:07:45,796 --> 00:07:48,346 A:middle
And it's completely chosen
by you, and opaque to us.

171
00:07:49,566 --> 00:07:52,116 A:middle
Now, when we combine this
value, the serialNumber

172
00:07:52,586 --> 00:07:53,986 A:middle
with a passTypeIdentifier,

173
00:07:54,686 --> 00:07:58,806 A:middle
we get our guaranteed global
uniqueness for your pass.

174
00:07:59,596 --> 00:08:03,006 A:middle
Along with all of these
values, the pass.json is also

175

176
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

177
00:07:59,596 --> 00:08:03,006 A:middle
Along with all of these
values, the pass.json is also

178
00:08:03,006 --> 00:08:05,106 A:middle
where you declare
your pass' relevancy.

179
00:08:05,566 --> 00:08:06,866 A:middle
Let's take a look
at relevancy now.

180
00:08:08,036 --> 00:08:11,456 A:middle
Relevancy can be determined
by three different categories.

181
00:08:12,116 --> 00:08:14,196 A:middle
You can use date.

182
00:08:14,196 --> 00:08:16,306 A:middle
You can use location.

183
00:08:17,116 --> 00:08:18,576 A:middle
And you can use beacons.

184
00:08:18,896 --> 00:08:22,276 A:middle
And it's the combination
of these categories

185
00:08:22,466 --> 00:08:25,276 A:middle
that make these passes
really, really powerful.

186
00:08:25,276 --> 00:08:28,786 A:middle
So let's take a look at
how we implement relevancy

187
00:08:28,926 --> 00:08:30,856 A:middle
on our pass.json.

188
00:08:31,266 --> 00:08:32,086 A:middle
We have a few keys.

189
00:08:32,885 --> 00:08:33,535 A:middle
First of all, we're going

190
00:08:33,535 --> 00:08:35,616 A:middle
to take a look at
the locations key.

191
00:08:36,006 --> 00:08:38,226 A:middle
That takes an array
of dictionaries

192
00:08:38,596 --> 00:08:43,135 A:middle
and that dictionary will contain
in it a latitude, a longitude

193
00:08:43,256 --> 00:08:44,726 A:middle
and an optional relevantText.

194
00:08:45,066 --> 00:08:47,176 A:middle
This relevant text will
then appear when your users

195
00:08:47,266 --> 00:08:48,986 A:middle
in that locate or
near that location.

196
00:08:49,476 --> 00:08:52,606 A:middle
So it's good to declare
those to be able to clarify

197
00:08:52,606 --> 00:08:56,716 A:middle
to your user exactly why
that's shown to the user.

198
00:08:57,566 --> 00:08:59,416 A:middle
And then we have
the relevantDate,

199

200
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

201
00:09:00,236 --> 00:09:03,666 A:middle
and that's just your standard
W3C format, relevantDate,

202
00:09:04,436 --> 00:09:06,466 A:middle
and then we have our beacons.

203
00:09:07,136 --> 00:09:10,156 A:middle
The beacons key is an array.

204
00:09:10,896 --> 00:09:12,496 A:middle
Inside that array
are dictionaries,

205
00:09:13,226 --> 00:09:16,736 A:middle
the proximityUUID will
uniquely identify your beacon.

206
00:09:17,306 --> 00:09:18,836 A:middle
Again, we have that relevantText

207
00:09:18,836 --> 00:09:20,816 A:middle
and the optional name
field here as well.

208
00:09:21,296 --> 00:09:22,726 A:middle
Again, it's when you combine all

209
00:09:22,726 --> 00:09:24,516 A:middle
of these relevancy
categories together is

210
00:09:24,856 --> 00:09:28,336 A:middle
when you make your passes
really, really powerful.

211
00:09:28,336 --> 00:09:30,086 A:middle
And it's a great surprise
in the live feature

212
00:09:30,086 --> 00:09:31,356 A:middle
for your users as well.

213
00:09:31,966 --> 00:09:35,406 A:middle
Passes are only interesting to
the user when the information

214
00:09:35,406 --> 00:09:37,276 A:middle
on them is up to date.

215
00:09:37,586 --> 00:09:39,816 A:middle
So how do we keep our
passes up to date?

216
00:09:39,816 --> 00:09:42,976 A:middle
Now, I'm going to give
a very high level glance

217
00:09:42,976 --> 00:09:45,176 A:middle
at how this works,
and I'm going to refer

218
00:09:45,176 --> 00:09:48,796 A:middle
to a WWDC talk we
gave back in 2012

219
00:09:49,006 --> 00:09:50,926 A:middle
that goes really
in-depth into this topic.

220
00:09:51,376 --> 00:09:52,446 A:middle
Let's take a look at this now.

221
00:09:54,576 --> 00:09:57,756 A:middle
So your server will implement
the Apple Push Service.

222
00:09:57,756 --> 00:10:01,766 A:middle
And we utilize the Apple Push
Service to start a pass' update.

223

224
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

225
00:09:57,756 --> 00:10:01,766 A:middle
And we utilize the Apple Push
Service to start a pass' update.

226
00:10:03,046 --> 00:10:05,866 A:middle
We get pass down, a
passTypeIdentifier.

227
00:10:05,906 --> 00:10:08,476 A:middle
That's what we talked about
a couple of slides earlier.

228
00:10:09,646 --> 00:10:12,656 A:middle
With that passTypeIdentifier,
we then look at your pass.json

229
00:10:12,996 --> 00:10:15,716 A:middle
and look for the webService key.

230
00:10:16,746 --> 00:10:19,726 A:middle
That webService key will
contain a URL that we can hit

231
00:10:20,356 --> 00:10:21,886 A:middle
and ask for updated passes.

232
00:10:22,456 --> 00:10:26,026 A:middle
And then we get brand new
.pkpass files with updates

233
00:10:26,026 --> 00:10:29,836 A:middle
on them sent down to our devices
and we update the user's pass.

234
00:10:30,826 --> 00:10:33,146 A:middle
Now that's a very high level
view of how this works.

235
00:10:33,596 --> 00:10:37,366 A:middle
I would highly recommend going
back to that WWDC talk from 2012

236
00:10:37,836 --> 00:10:41,996 A:middle
and dig into how to implement
a web service for your passes.

237
00:10:42,876 --> 00:10:44,156 A:middle
Okay. This is great.

238
00:10:44,156 --> 00:10:47,136 A:middle
Now, let's take a look at how
we can programmatically get

239
00:10:47,136 --> 00:10:47,966 A:middle
to these passes.

240
00:10:48,516 --> 00:10:50,406 A:middle
We do have PassKit
after all inside iOS.

241
00:10:50,406 --> 00:10:51,916 A:middle
Let's see how we use it.

242
00:10:52,276 --> 00:10:54,776 A:middle
The main class that
we're going to be using

243
00:10:54,776 --> 00:10:57,836 A:middle
in PassKit is PKPassLibrary.

244
00:10:57,836 --> 00:10:59,246 A:middle
This is your link.

245
00:10:59,716 --> 00:11:02,296 A:middle
This is what you are
going to use to be able

246

247
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

248
00:10:59,716 --> 00:11:02,296 A:middle
This is what you are
going to use to be able

249
00:11:02,296 --> 00:11:03,906 A:middle
to query your user's passes,

250
00:11:04,956 --> 00:11:07,276 A:middle
and access to it is
gated by entitlements.

251
00:11:07,756 --> 00:11:09,256 A:middle
We talked about that
a little bit earlier,

252
00:11:09,736 --> 00:11:11,606 A:middle
using your passTypeIdentifier.

253
00:11:12,816 --> 00:11:15,636 A:middle
Let's take a look at some of the
methods inside PKPassLibrary.

254
00:11:17,356 --> 00:11:20,356 A:middle
First we have a function
that asks,

255
00:11:20,996 --> 00:11:23,376 A:middle
is the PassLibrary
available on this device.

256
00:11:23,376 --> 00:11:25,456 A:middle
This is a very good
question to ask.

257
00:11:26,616 --> 00:11:32,296 A:middle
When we get a positive answer
back, you can then get passes.

258
00:11:32,296 --> 00:11:35,046 A:middle
When you call passes, you will
get back an array of PKPass.

259
00:11:35,306 --> 00:11:39,376 A:middle
And these are all the passes
that you are entitled to see.

260
00:11:40,656 --> 00:11:42,936 A:middle
You can also find a
particular, a specific pass

261
00:11:42,936 --> 00:11:43,486 A:middle
that you are looking

262
00:11:43,486 --> 00:11:45,766 A:middle
for by calling
passWithPassTypeIdentifier,

263
00:11:46,196 --> 00:11:49,776 A:middle
serialNumber, passing
it the identifier string

264
00:11:49,826 --> 00:11:50,916 A:middle
and the serial number string.

265
00:11:50,916 --> 00:11:52,886 A:middle
That will get you the exact
pass that you are looking for.

266
00:11:53,386 --> 00:11:56,256 A:middle
We also have another
one called passesOfType,

267
00:11:57,086 --> 00:11:58,086 A:middle
passing a PKPassType.

268
00:11:58,086 --> 00:12:00,036 A:middle
And you may wonder what are
all the different pass types?

269

270
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

271
00:11:58,086 --> 00:12:00,036 A:middle
And you may wonder what are
all the different pass types?

272
00:12:00,036 --> 00:12:02,816 A:middle
Well here they are
there's Barcode,

273
00:12:03,346 --> 00:12:05,216 A:middle
there's Payment and there's Any.

274
00:12:06,476 --> 00:12:08,546 A:middle
So you may ask yourself, Danvin,

275
00:12:08,546 --> 00:12:10,086 A:middle
why would you want
to get passes?

276
00:12:10,086 --> 00:12:11,606 A:middle
Why do you want to see
your user's passes.

277
00:12:11,606 --> 00:12:14,056 A:middle
Well as a developer
you may want to know --

278
00:12:14,056 --> 00:12:18,396 A:middle
any of your passes that your
users already have on the system

279
00:12:18,396 --> 00:12:20,976 A:middle
so you don't duplicate
things again.

280
00:12:20,976 --> 00:12:23,516 A:middle
For payment passes, we're
going talk about earlier,

281
00:12:23,516 --> 00:12:26,516 A:middle
banks and other merchants
may want to be able

282
00:12:26,516 --> 00:12:30,386 A:middle
to activate payment passes
from your users' pass library.

283
00:12:30,386 --> 00:12:32,866 A:middle
We will get into that when we
get into the Apple Pay section.

284
00:12:33,676 --> 00:12:36,246 A:middle
Now we have our passes
together, they're beautiful,

285
00:12:36,246 --> 00:12:38,296 A:middle
they're relevant, they're up
to date, how do we get them

286
00:12:38,296 --> 00:12:39,546 A:middle
in the hands of our users.

287
00:12:40,806 --> 00:12:45,316 A:middle
Well the PKPass file is pretty
portable, so you can host them

288
00:12:45,316 --> 00:12:48,206 A:middle
on a website, you can
email them to your users,

289
00:12:48,206 --> 00:12:50,746 A:middle
you can even include
them inside your apps.

290
00:12:52,326 --> 00:12:54,916 A:middle
And I want to point one
neat little feature,

291
00:12:55,116 --> 00:12:56,636 A:middle
we give special treatment

292
00:12:56,636 --> 00:12:59,876 A:middle
to PKPass files inside
our iOS apps like Mail.

293

294
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

295
00:13:00,426 --> 00:13:03,426 A:middle
When we receive a PKPass file

296
00:13:03,796 --> 00:13:07,176 A:middle
in our email Mail will give
it some special treatment

297
00:13:07,176 --> 00:13:11,106 A:middle
with this action button and you
can see exactly what PKPass file

298
00:13:11,106 --> 00:13:13,186 A:middle
is in that email.

299
00:13:13,536 --> 00:13:17,446 A:middle
And if you host this on a
website or put this on an app,

300
00:13:17,446 --> 00:13:19,116 A:middle
we even have a banner for you,

301
00:13:19,116 --> 00:13:22,866 A:middle
you can include inside your
sites and on your apps.

302
00:13:23,716 --> 00:13:25,556 A:middle
But you may be telling
me, Danvin,

303
00:13:25,556 --> 00:13:27,426 A:middle
you know that says Passbook.

304
00:13:28,156 --> 00:13:29,826 A:middle
I know. I know this
says Passbook.

305
00:13:29,826 --> 00:13:33,746 A:middle
This is a good little
transition for me to talk about.

306
00:13:33,826 --> 00:13:35,206 A:middle
We are in the middle
of a transition.

307
00:13:35,416 --> 00:13:37,486 A:middle
We are moving from
Passbook to Wallet.

308
00:13:37,996 --> 00:13:40,886 A:middle
And for now, in the public, we
are still known as Passbook.

309
00:13:41,026 --> 00:13:41,916 A:middle
So be aware of that.

310
00:13:42,516 --> 00:13:45,316 A:middle
But please stay tuned as
we get closer and closer

311
00:13:45,316 --> 00:13:50,056 A:middle
to iOS 9's release, we will keep
you up to date on this topic.

312
00:13:50,116 --> 00:13:52,706 A:middle
I'm really glad we got
to talk about that.

313
00:13:53,506 --> 00:13:57,326 A:middle
But let's say we want to add
these passes programmatically,

314
00:13:57,386 --> 00:13:58,196 A:middle
how would you do that?

315
00:13:58,956 --> 00:14:00,376 A:middle
Well, PKPassLibrary does that.

316

317
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

318
00:13:58,956 --> 00:14:00,376 A:middle
Well, PKPassLibrary does that.

319
00:14:01,076 --> 00:14:03,846 A:middle
We have a function in
there called addPasses.

320
00:14:05,086 --> 00:14:06,676 A:middle
That's right, multiple passes.

321
00:14:06,716 --> 00:14:07,756 A:middle
Why would you want to do this?

322
00:14:07,756 --> 00:14:12,926 A:middle
Well, consider a flight with
multiple segments and you want

323
00:14:12,926 --> 00:14:16,036 A:middle
to be able to ingest all
the passes all at once.

324
00:14:16,826 --> 00:14:18,016 A:middle
This is a great way to do that.

325
00:14:18,016 --> 00:14:20,906 A:middle
So addPasses
withCompletionHandler will alert

326
00:14:20,906 --> 00:14:23,986 A:middle
the user with a small
and very subtle dialog

327
00:14:24,066 --> 00:14:26,236 A:middle
to add these passes
into their library.

328
00:14:26,286 --> 00:14:29,816 A:middle
Please make sure before you call
this that you already denoted

329
00:14:29,816 --> 00:14:33,506 A:middle
to the user that they
are about to add a pass.

330
00:14:33,706 --> 00:14:36,516 A:middle
We do have one more way to add
passes into the pass library

331
00:14:36,516 --> 00:14:39,706 A:middle
and that's using
PKAddPassesViewController.

332
00:14:40,606 --> 00:14:43,056 A:middle
you may have seen this before if
you have added passes to Mail.

333
00:14:43,456 --> 00:14:46,316 A:middle
It looks something like
this, you tap on a pass,

334
00:14:47,426 --> 00:14:49,116 A:middle
they call
PKAddPassesViewController

335
00:14:49,186 --> 00:14:51,776 A:middle
and we get this nice beautiful
view controller fully rendered

336
00:14:51,776 --> 00:14:55,456 A:middle
out with an action up top
for the user to choose.

337
00:14:56,486 --> 00:14:57,096 A:middle
How does this work.

338
00:14:57,496 --> 00:14:59,996 A:middle
PKAddPassesViewerController
has a function

339

340
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

341
00:15:00,096 --> 00:15:02,216 A:middle
that checks can you add
passes to this device?

342
00:15:03,156 --> 00:15:05,396 A:middle
And then like before, you
can add a single pass,

343
00:15:06,896 --> 00:15:07,746 A:middle
or multiple passes.

344
00:15:08,156 --> 00:15:09,376 A:middle
So you knit one of these guys

345
00:15:09,486 --> 00:15:12,076 A:middle
and then you just show this
view controller and we take care

346
00:15:12,076 --> 00:15:13,466 A:middle
of rendering that pass for you.

347
00:15:14,626 --> 00:15:17,166 A:middle
Great. Now we can add passes.

348
00:15:17,166 --> 00:15:18,936 A:middle
We can keep them updated.

349
00:15:18,936 --> 00:15:19,896 A:middle
We can keep them relevant.

350
00:15:21,186 --> 00:15:23,196 A:middle
But how do we keep
these passes engaging?

351
00:15:23,486 --> 00:15:23,826 A:middle
All right.

352
00:15:23,826 --> 00:15:25,376 A:middle
We want our users
to keep coming back

353
00:15:25,376 --> 00:15:26,796 A:middle
and take a look at our passes.

354
00:15:27,346 --> 00:15:30,486 A:middle
So I have a few tips for you
to keep our passes engaging.

355
00:15:31,376 --> 00:15:33,816 A:middle
As I mentioned before
relevancy is a big deal.

356
00:15:33,886 --> 00:15:36,486 A:middle
Relevancy will give that
big surprise in the life,

357
00:15:36,926 --> 00:15:38,846 A:middle
kind of feel for the users.

358
00:15:40,176 --> 00:15:41,486 A:middle
You want to keep
our passes updated.

359
00:15:41,486 --> 00:15:43,366 A:middle
For example, this pass,
this boarding pass,

360
00:15:44,106 --> 00:15:48,066 A:middle
it's useless unless we have
the latest gate information.

361
00:15:49,386 --> 00:15:53,546 A:middle
Users want to come back and
keep looking at your passes.

362
00:15:53,696 --> 00:15:54,586 A:middle
Images are great.

363
00:15:55,116 --> 00:15:56,656 A:middle
For example, this MLB
pass that we looked

364
00:15:56,656 --> 00:16:00,136 A:middle
at has this strip image that
spans the entirety of the pass.

365

366
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

367
00:15:56,656 --> 00:16:00,136 A:middle
at has this strip image that
spans the entirety of the pass.

368
00:16:00,916 --> 00:16:03,196 A:middle
It really brings life
and also brings clarity

369
00:16:03,196 --> 00:16:05,836 A:middle
as to what this pass is
actually for and what it does.

370
00:16:06,516 --> 00:16:07,636 A:middle
This is called a strip image.

371
00:16:07,806 --> 00:16:09,556 A:middle
You notice that there's no
extra information there.

372
00:16:09,556 --> 00:16:10,766 A:middle
It's just for context.

373
00:16:10,766 --> 00:16:11,486 A:middle
It's beautiful!

374
00:16:12,396 --> 00:16:15,216 A:middle
And lastly, I want to
talk about formatting.

375
00:16:16,676 --> 00:16:18,456 A:middle
Formatting is tricky.

376
00:16:19,056 --> 00:16:20,276 A:middle
But we take care
of this for you.

377
00:16:20,516 --> 00:16:22,346 A:middle
And now we know we
have different devices

378
00:16:22,346 --> 00:16:23,476 A:middle
with different screen sizes.

379
00:16:23,476 --> 00:16:27,496 A:middle
And so what I recommend is you
take a look at our HI guidelines

380
00:16:27,686 --> 00:16:30,986 A:middle
on the website follow them
and we will do our very best

381
00:16:30,986 --> 00:16:35,686 A:middle
to make your passes look really
great on all of our devices.

382
00:16:37,016 --> 00:16:39,366 A:middle
Great. These passes have
been really, really useful.

383
00:16:39,366 --> 00:16:41,436 A:middle
They really let us take
action in the real world.

384
00:16:42,376 --> 00:16:45,096 A:middle
But they are not as slick
as what that experience

385
00:16:45,096 --> 00:16:46,116 A:middle
with Apple Pay is yet.

386
00:16:47,186 --> 00:16:49,576 A:middle
So how do we make that
experience a lot better?

387
00:16:50,126 --> 00:16:52,586 A:middle
Well, let's talk about
where we go from here.

388
00:16:53,126 --> 00:16:55,956 A:middle
Let me give you a scenario.

389
00:16:57,116 --> 00:16:58,356 A:middle
So the other day, I go

390
00:16:58,356 --> 00:17:01,886 A:middle
to my local neighborhood grocery
store, and I pick up my things

391

392
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

393
00:16:58,356 --> 00:17:01,886 A:middle
to my local neighborhood grocery
store, and I pick up my things

394
00:17:02,106 --> 00:17:03,116 A:middle
and I'm ready to check out.

395
00:17:03,526 --> 00:17:05,376 A:middle
Great, they take Apple Pay.

396
00:17:05,516 --> 00:17:08,526 A:middle
As I head to the terminal, the
clerk is ringing up my things

397
00:17:08,526 --> 00:17:11,336 A:middle
and I get my phone ready
to pay with Apple Pay.

398
00:17:12,816 --> 00:17:13,116 A:middle
All right.

399
00:17:13,996 --> 00:17:16,396 A:middle
They are done ringing up my
things and I bring my phone

400
00:17:16,396 --> 00:17:17,156 A:middle
to the terminal and...

401
00:17:17,246 --> 00:17:19,316 A:middle
do you have a loyalty
pass with us?

402
00:17:20,606 --> 00:17:21,906 A:middle
I think I do.

403
00:17:21,906 --> 00:17:25,935 A:middle
The clerk is really -- really
adamant about this loyalty card.

404
00:17:26,185 --> 00:17:28,306 A:middle
I think it's in that
big fat wallet of mine.

405
00:17:28,306 --> 00:17:30,426 A:middle
Oh, I can't find it right now.

406
00:17:30,426 --> 00:17:31,376 A:middle
I know it's on my phone number.

407
00:17:31,376 --> 00:17:32,756 A:middle
It's got to be registered
with my phone number.

408
00:17:32,806 --> 00:17:34,686 A:middle
I blurt my phone
number to the clerk.

409
00:17:35,976 --> 00:17:38,136 A:middle
Nope. It's not registered
with that phone number.

410
00:17:38,536 --> 00:17:41,776 A:middle
I'm frustrated and the
line is two or three deep.

411
00:17:42,016 --> 00:17:44,016 A:middle
I just blurt out my
mom's phone number

412
00:17:44,016 --> 00:17:45,876 A:middle
because I know my mom
has one of these things.

413
00:17:46,346 --> 00:17:47,436 A:middle
Great. That works!

414
00:17:47,956 --> 00:17:49,086 A:middle
And I now can Apple Pay

415
00:17:49,126 --> 00:17:51,486 A:middle
and I grab my things
and I'm out the door.

416
00:17:52,206 --> 00:17:54,496 A:middle
So a lot of bad things
happen there.

417
00:17:55,646 --> 00:17:57,986 A:middle
For me as a consumer,
I just want to pay.

418
00:17:58,956 --> 00:18:00,946 A:middle
I want to get my
things and be done.

419

420
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

421
00:17:58,956 --> 00:18:00,946 A:middle
I want to get my
things and be done.

422
00:18:00,946 --> 00:18:05,456 A:middle
For the merchant, they just
got the completely wrong

423
00:18:05,456 --> 00:18:06,296 A:middle
loyalty information.

424
00:18:06,296 --> 00:18:08,476 A:middle
They got my mom's loyalty
information, not mine.

425
00:18:09,016 --> 00:18:11,086 A:middle
So we want to make this better.

426
00:18:12,156 --> 00:18:14,626 A:middle
And that's why we are
introducing passes

427
00:18:14,626 --> 00:18:16,326 A:middle
that work with Apple Pay.

428
00:18:16,786 --> 00:18:21,846 A:middle
Passes that work with Apple
Pay transmit your loyalty

429
00:18:21,846 --> 00:18:25,786 A:middle
information, contactlessly along
with your Apple Pay transaction.

430
00:18:27,316 --> 00:18:30,646 A:middle
We use the Value Added
Services Protocol

431
00:18:30,686 --> 00:18:33,076 A:middle
and we have been working with
major terminal manufacturers

432
00:18:33,356 --> 00:18:35,456 A:middle
for the adoption of
this new protocol.

433
00:18:36,536 --> 00:18:38,846 A:middle
So now, my scenario
looks more like this.

434
00:18:40,096 --> 00:18:43,036 A:middle
I go to my friendly
neighborhood Walgreens.

435
00:18:44,636 --> 00:18:48,506 A:middle
They take Apple Pay, great,
I use the new iOS feature

436
00:18:48,586 --> 00:18:52,206 A:middle
and double tap on my home
button and I can prearm my card.

437
00:18:52,206 --> 00:18:54,896 A:middle
I can get my card ready before
I even head up to the terminal.

438
00:18:54,936 --> 00:18:58,736 A:middle
Great. My card is ready and I
head up to pay for my things.

439
00:18:59,866 --> 00:19:01,726 A:middle
When I put my phone
on the terminal,

440

441
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

442
00:18:59,866 --> 00:19:01,726 A:middle
When I put my phone
on the terminal,

443
00:19:02,826 --> 00:19:05,616 A:middle
my Walgreen's loyalty
information is transmitted

444
00:19:05,616 --> 00:19:08,116 A:middle
contactlessly, along with
my Apple Pay information,

445
00:19:08,396 --> 00:19:09,986 A:middle
all in one tap.

446
00:19:11,366 --> 00:19:11,776 A:middle
That's it!

447
00:19:12,946 --> 00:19:15,356 A:middle
I give a friendly
smile and a thank you

448
00:19:15,356 --> 00:19:17,316 A:middle
to the clerk and
I'm out the door.

449
00:19:17,876 --> 00:19:20,106 A:middle
That is great!

450
00:19:21,176 --> 00:19:24,056 A:middle
That makes the process
a lot more smooth.

451
00:19:24,976 --> 00:19:25,736 A:middle
So how do we do this?

452
00:19:25,736 --> 00:19:29,556 A:middle
How do we add this
feature into your passes?

453
00:19:30,246 --> 00:19:31,046 A:middle
We have a new key.

454
00:19:31,416 --> 00:19:32,756 A:middle
It's pass.json.

455
00:19:33,516 --> 00:19:40,126 A:middle
It's nfc. Nfc is a a
dictionary that takes a message.

456
00:19:40,126 --> 00:19:43,256 A:middle
Just kind of like a bar code,
this is the loyalty information

457
00:19:43,256 --> 00:19:44,886 A:middle
or anything that
links this user,

458
00:19:44,886 --> 00:19:46,766 A:middle
this identity to your system.

459
00:19:47,496 --> 00:19:50,156 A:middle
We have an optional
encryptionPublicKey.

460
00:19:50,686 --> 00:19:53,236 A:middle
And this guarantees
authenticity,

461
00:19:53,236 --> 00:19:55,806 A:middle
this is something
handshake yourself

462
00:19:56,036 --> 00:19:58,726 A:middle
between merchant
and your terminal.

463
00:19:59,716 --> 00:20:03,656 A:middle
So this is how you
implement passes that work

464

465
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

466
00:19:59,716 --> 00:20:03,656 A:middle
So this is how you
implement passes that work

467
00:20:03,656 --> 00:20:05,786 A:middle
with Apple Pay on your passes.

468
00:20:05,786 --> 00:20:08,066 A:middle
And now if you are a
merchant or a terminal maker

469
00:20:08,066 --> 00:20:10,946 A:middle
and you are interested by
this, please come see us.

470
00:20:11,536 --> 00:20:13,816 A:middle
Our developer relations
team will be here this week

471
00:20:13,816 --> 00:20:14,816 A:middle
and you can contact them.

472
00:20:14,816 --> 00:20:17,856 A:middle
I will give you the contact
information after this talk.

473
00:20:18,176 --> 00:20:19,736 A:middle
And let them know
you are interested

474
00:20:19,736 --> 00:20:24,076 A:middle
and we will get you started with
passes that work with Apple Pay.

475
00:20:24,956 --> 00:20:27,926 A:middle
Speaking of Apple Pay,
Apple Pay has been great,

476
00:20:28,146 --> 00:20:29,016 A:middle
like I mentioned before.

477
00:20:29,066 --> 00:20:32,796 A:middle
We have now enabled contactless
payment on our phones,

478
00:20:32,866 --> 00:20:37,076 A:middle
on our watches, and even
we have enabled APIs

479
00:20:37,076 --> 00:20:39,756 A:middle
so you can take Apple
Pay inside your apps.

480
00:20:41,216 --> 00:20:44,136 A:middle
And Apple Pay is great because
there's a seamless payment

481
00:20:44,136 --> 00:20:45,946 A:middle
experience for your users.

482
00:20:46,286 --> 00:20:48,036 A:middle
And merchants are seeing
higher conversion rates

483
00:20:48,356 --> 00:20:52,116 A:middle
across the board so we
want to encourage our users

484
00:20:52,116 --> 00:20:54,986 A:middle
to add Apple Pay cards
into their devices.

485
00:20:55,826 --> 00:20:56,576 A:middle
How do we do that?

486
00:20:56,576 --> 00:20:58,966 A:middle
We are giving you a couple
of APIs to enable this.

487

488
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

489
00:21:00,046 --> 00:21:01,196 A:middle
There's two.

490
00:21:01,946 --> 00:21:05,946 A:middle
The first one will take your
users directly to our Wallet app

491
00:21:05,946 --> 00:21:06,886 A:middle
and start setup from there.

492
00:21:08,036 --> 00:21:09,756 A:middle
And a second one,
that allows you to set

493
00:21:09,756 --> 00:21:11,976 A:middle
up these cards from
within your app.

494
00:21:13,056 --> 00:21:14,116 A:middle
Let's take a look
at that first one.

495
00:21:15,566 --> 00:21:19,056 A:middle
It's in PKPassLibrary
and it's very simple.

496
00:21:20,606 --> 00:21:23,086 A:middle
We call openPaymentSetup.

497
00:21:23,086 --> 00:21:25,206 A:middle
And that will take your
user directly into Wallet,

498
00:21:25,476 --> 00:21:27,216 A:middle
and start the setup flow.

499
00:21:27,626 --> 00:21:29,546 A:middle
And now with our new
features in iOS 9,

500
00:21:29,726 --> 00:21:32,546 A:middle
your users can go really
easily back into your app

501
00:21:32,746 --> 00:21:34,556 A:middle
and we leave a little bread
crumb for them to tap on

502
00:21:34,556 --> 00:21:37,336 A:middle
and go back into your
app and do continue

503
00:21:37,336 --> 00:21:38,406 A:middle
to do whatever they were doing.

504
00:21:38,656 --> 00:21:39,496 A:middle
Hopefully shopping.

505
00:21:40,446 --> 00:21:45,846 A:middle
And if you are a bank or if you
are a merchant with a store card

506
00:21:45,846 --> 00:21:47,056 A:middle
or a private label card,

507
00:21:47,056 --> 00:21:49,586 A:middle
you want to have this
happen inside your own app,

508
00:21:50,356 --> 00:21:51,656 A:middle
we have an API for that as well.

509
00:21:52,426 --> 00:21:53,756 A:middle
It's actually a view controller,

510
00:21:54,266 --> 00:21:56,926 A:middle
it's
PKAddPaymentPassViewController.

511
00:21:57,876 --> 00:22:01,256 A:middle
And of course we need to check
whether this particular device

512

513
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

514
00:21:57,876 --> 00:22:01,256 A:middle
And of course we need to check
whether this particular device

515
00:22:01,356 --> 00:22:03,426 A:middle
can add a payment pass or not.

516
00:22:04,316 --> 00:22:08,476 A:middle
When we find out it can, we set
one of these up, we can knit it

517
00:22:08,476 --> 00:22:12,186 A:middle
with a requestConfiguration
and we pass into it a delegate.

518
00:22:13,356 --> 00:22:16,006 A:middle
Now this delegate that you
implement inside your app,

519
00:22:16,706 --> 00:22:19,316 A:middle
will form together using
those pieces of information,

520
00:22:19,316 --> 00:22:24,666 A:middle
like the nonceSignature, will
form up a AddPaymentPassRequest.

521
00:22:25,546 --> 00:22:27,616 A:middle
We can really dig into
this for a long time.

522
00:22:27,616 --> 00:22:29,536 A:middle
I really don't have time
in this particular session

523
00:22:29,536 --> 00:22:30,246 A:middle
to dig into this.

524
00:22:30,616 --> 00:22:32,346 A:middle
So please refer to
your documentation

525
00:22:32,346 --> 00:22:35,796 A:middle
if you have any questions
about how to use this class.

526
00:22:36,706 --> 00:22:39,006 A:middle
And this class will be entitled.

527
00:22:39,086 --> 00:22:40,686 A:middle
So please let us know
as well if you want

528
00:22:40,686 --> 00:22:44,626 A:middle
to use this inside your app.

529
00:22:44,706 --> 00:22:48,956 A:middle
Another necessary step that
our users might need to take

530
00:22:48,956 --> 00:22:53,206 A:middle
when they are adding a payment
pass inside Apple Pay is a

531
00:22:53,496 --> 00:22:56,086 A:middle
payment pass verification
or second factor auth

532
00:22:56,086 --> 00:22:57,686 A:middle
as some people know it.

533
00:22:57,976 --> 00:23:03,876 A:middle
And along with the typical flow,
like using SMS or a phone call

534

535
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

536
00:22:57,976 --> 00:23:03,876 A:middle
And along with the typical flow,
like using SMS or a phone call

537
00:23:03,876 --> 00:23:07,306 A:middle
or email, another option
we offer is using an app.

538
00:23:08,256 --> 00:23:10,126 A:middle
We see here Capital
One using their app

539
00:23:10,216 --> 00:23:12,806 A:middle
to verify their user's identity.

540
00:23:13,626 --> 00:23:14,286 A:middle
How do we do this?

541
00:23:15,346 --> 00:23:17,906 A:middle
Well, we give you guys a
couple of APIs to be able

542
00:23:17,906 --> 00:23:22,616 A:middle
to allow this inside
of your apps.

543
00:23:22,836 --> 00:23:24,486 A:middle
It's also in PKPassLibrary.

544
00:23:25,706 --> 00:23:27,846 A:middle
You check first, is
there a payment pass

545
00:23:27,846 --> 00:23:28,916 A:middle
activation available?

546
00:23:30,376 --> 00:23:33,616 A:middle
Remember when we
were pulling PKPasses

547
00:23:33,806 --> 00:23:35,196 A:middle
out of the user's library?

548
00:23:35,196 --> 00:23:36,786 A:middle
Well this is where it's useful.

549
00:23:37,266 --> 00:23:42,796 A:middle
You can pass into this call,
that PKPaymentPass and pass

550
00:23:42,796 --> 00:23:44,946 A:middle
into it some activation data

551
00:23:45,736 --> 00:23:47,366 A:middle
and you'll get a
completion back whether

552
00:23:47,366 --> 00:23:49,486 A:middle
that activation was
successful or not.

553
00:23:50,646 --> 00:23:55,106 A:middle
That's how you can implement
verification inside your apps.

554
00:23:56,326 --> 00:23:58,416 A:middle
So our phones have been
really, really popular

555
00:23:58,666 --> 00:24:00,426 A:middle
and there's awesome and really,

556

557
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

558
00:23:58,666 --> 00:24:00,426 A:middle
and there's awesome and really,

559
00:24:00,426 --> 00:24:01,696 A:middle
really great accessories
out there.

560
00:24:02,786 --> 00:24:05,996 A:middle
Some of them emit a field and
we want to be good players

561
00:24:06,446 --> 00:24:07,366 A:middle
with those accessories.

562
00:24:07,366 --> 00:24:09,446 A:middle
We are announcing with iOS 9,

563
00:24:09,846 --> 00:24:12,516 A:middle
a contactless interface
suppression API.

564
00:24:14,146 --> 00:24:17,486 A:middle
What this will do is temporarily
disable the user interface.

565
00:24:18,036 --> 00:24:19,786 A:middle
It's the sheet of
passes that you see

566
00:24:20,956 --> 00:24:23,156 A:middle
and this will require
a user's permission.

567
00:24:23,686 --> 00:24:25,886 A:middle
Let's take a look
at how we do this.

568
00:24:26,596 --> 00:24:29,456 A:middle
It's in that PKPassLibrary
again.

569
00:24:30,446 --> 00:24:33,276 A:middle
PKPassLibrary has a
new function called

570
00:24:33,596 --> 00:24:38,286 A:middle
requestAutomaticPassPresentation
SuppressionWithResponseHandler.

571
00:24:38,846 --> 00:24:39,446 A:middle
It's a mouthful!

572
00:24:40,146 --> 00:24:44,776 A:middle
And what you will get
back is a response result

573
00:24:44,776 --> 00:24:46,636 A:middle
of what the user
decides, whether

574
00:24:46,636 --> 00:24:50,806 A:middle
or not they will allow
suppression inside your app.

575
00:24:50,806 --> 00:24:52,246 A:middle
You also get back
a request token.

576
00:24:52,246 --> 00:24:54,866 A:middle
Then you can use that request
token for this next call

577
00:24:55,406 --> 00:24:57,506 A:middle
to endAutomaticPassPresentation.

578
00:24:57,986 --> 00:24:59,676 A:middle
Pass into it, that requestToken,

579

580
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

581
00:25:00,736 --> 00:25:04,026 A:middle
and the payment UI will
appear again inside your app.

582
00:25:04,476 --> 00:25:07,896 A:middle
You can also check whether
automaticPassPresentation

583
00:25:07,936 --> 00:25:09,336 A:middle
Suppression is already occurring

584
00:25:09,466 --> 00:25:11,176 A:middle
by using this function
right here.

585
00:25:11,796 --> 00:25:13,956 A:middle
As I mentioned before,
it is temporary.

586
00:25:13,956 --> 00:25:16,016 A:middle
So if your app is suspended,

587
00:25:16,646 --> 00:25:19,146 A:middle
the payment pass UI will
appear again for the user

588
00:25:19,266 --> 00:25:22,046 A:middle
or if it's been 24 hours
after your last requests,

589
00:25:22,386 --> 00:25:25,106 A:middle
you will need to re-request
your user's permission again.

590
00:25:25,646 --> 00:25:28,696 A:middle
These classes and these
calls are entitled.

591
00:25:28,696 --> 00:25:32,056 A:middle
So please let us know if
you would like to use them.

592
00:25:32,196 --> 00:25:37,286 A:middle
Along with Apple Pay, last fall
we also introduced Apple Watch.

593
00:25:37,806 --> 00:25:42,376 A:middle
And now I'm really happy to
announce that in watchOS 2,

594
00:25:42,376 --> 00:25:47,036 A:middle
we are bringing full PassKit
support to Apple Watch.

595
00:25:47,476 --> 00:25:52,396 A:middle
And this is really great because
now on Apple Watch, you can add,

596
00:25:53,086 --> 00:25:56,166 A:middle
you can remove, you can query
passes just like up doing

597
00:25:57,026 --> 00:25:59,846 A:middle
on our phones previously.

598

599
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

600
00:26:01,176 --> 00:26:03,846 A:middle
So full PassKit support
is coming to Apple Watch

601
00:26:04,576 --> 00:26:08,076 A:middle
and watchOS 2, there's
another thing I want to talk

602
00:26:08,076 --> 00:26:10,686 A:middle
about in regards to Apple Watch
and that's the screen size.

603
00:26:11,876 --> 00:26:15,706 A:middle
Working with a lot smaller real
estate space on Apple Watch,

604
00:26:15,706 --> 00:26:16,846 A:middle
and I want to point this out,

605
00:26:16,846 --> 00:26:19,386 A:middle
because passes are drawn
a little differently

606
00:26:20,236 --> 00:26:21,046 A:middle
on Apple Watch.

607
00:26:22,046 --> 00:26:23,156 A:middle
This is a pretty cool graphic.

608
00:26:23,726 --> 00:26:27,646 A:middle
This is what a pass rendered
on Apple Watch looks like.

609
00:26:27,646 --> 00:26:30,056 A:middle
As you can see this
is our MLB pass

610
00:26:30,846 --> 00:26:31,766 A:middle
from a couple of slides back.

611
00:26:33,096 --> 00:26:36,016 A:middle
And you will notice right away
it looks a little different.

612
00:26:37,126 --> 00:26:39,096 A:middle
That strip image
is no longer there.

613
00:26:39,746 --> 00:26:43,656 A:middle
And, in fact, we don't even
have a back of the pass.

614
00:26:43,656 --> 00:26:46,416 A:middle
So take a look and remember,
passes do look different

615
00:26:46,416 --> 00:26:48,356 A:middle
on different devices,
especially on Apple Watch.

616
00:26:48,356 --> 00:26:51,746 A:middle
So consider that when you
are designing your passes

617
00:26:51,836 --> 00:26:52,736 A:middle
and implementing them.

618
00:26:53,186 --> 00:26:56,026 A:middle
But, of course, if you
follow the HI guidelines,

619
00:26:56,146 --> 00:27:01,226 A:middle
we will promise and do our best
to make your passes look great

620

621
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

622
00:26:56,146 --> 00:27:01,226 A:middle
we will promise and do our best
to make your passes look great

623
00:27:01,516 --> 00:27:04,486 A:middle
on every single one
of our devices.

624
00:27:04,836 --> 00:27:07,146 A:middle
So that's PassKit
and Apple Watch.

625
00:27:07,576 --> 00:27:10,996 A:middle
There's one more thing
I do want to talk about.

626
00:27:11,736 --> 00:27:12,996 A:middle
And that's 1D bar codes.

627
00:27:13,846 --> 00:27:17,106 A:middle
We have been getting a lot
of requests for 1D barcodes

628
00:27:17,656 --> 00:27:20,846 A:middle
and I'm really glad
to say that iOS 9,

629
00:27:20,846 --> 00:27:23,426 A:middle
we are bringing 1D
Barcode support to Wallet.

630
00:27:23,886 --> 00:27:23,976 A:middle
Yeah.

631
00:27:23,976 --> 00:27:24,756 A:middle
[ Applause ]

632
00:27:24,756 --> 00:27:28,726 A:middle
I'm glad you are glad.

633
00:27:29,466 --> 00:27:32,596 A:middle
So we have a new barcode format.

634
00:27:33,126 --> 00:27:35,466 A:middle
It's PKBarcodeFormatCode128.

635
00:27:36,286 --> 00:27:39,456 A:middle
You may ask what about my users
that are who are still on iOS 8

636
00:27:39,456 --> 00:27:40,766 A:middle
and below, are they
going to get this?

637
00:27:40,766 --> 00:27:45,746 A:middle
Well, no. That's why you
will have this fallback.

638
00:27:46,546 --> 00:27:47,916 A:middle
We still have that barcode key.

639
00:27:48,266 --> 00:27:50,676 A:middle
That barcode key is
very, very important

640
00:27:50,676 --> 00:27:53,486 A:middle
but we have here is
implementing that 2D barcode.

641
00:27:53,896 --> 00:27:58,496 A:middle
We have a new barcodes, plural,
key that is an array that takes

642
00:27:58,496 --> 00:27:59,886 A:middle
in a dictionary of barcodes.

643

644
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

645
00:28:00,396 --> 00:28:03,896 A:middle
So, as you can see, we have a
new barcodes array here that has

646
00:28:03,896 --> 00:28:05,866 A:middle
in the first dictionary,

647
00:28:05,866 --> 00:28:09,396 A:middle
a barcode with
PKBarcodeFormatCode128.

648
00:28:09,396 --> 00:28:10,886 A:middle
And that's the 1D barcode.

649
00:28:11,436 --> 00:28:13,406 A:middle
So please, please, as you
are implementing this,

650
00:28:14,236 --> 00:28:17,966 A:middle
do me a favor, please verify
your system supports 1D barcodes

651
00:28:18,756 --> 00:28:20,976 A:middle
and what I really mean
is optical scanners.

652
00:28:21,476 --> 00:28:25,856 A:middle
And please remember to
fall back to 2D barcodes

653
00:28:25,856 --> 00:28:27,866 A:middle
so that your users on iOS 8

654
00:28:27,866 --> 00:28:30,716 A:middle
and below have a
barcode on their passes.

655
00:28:31,776 --> 00:28:32,076 A:middle
All right.

656
00:28:32,166 --> 00:28:34,106 A:middle
I have done a lot of
talking this morning.

657
00:28:34,106 --> 00:28:38,216 A:middle
If I had to say that you
should remember something

658
00:28:38,216 --> 00:28:42,146 A:middle
from this session, it's
these things: We're solving

659
00:28:42,146 --> 00:28:43,426 A:middle
that overstuffed wallet problem.

660
00:28:44,346 --> 00:28:45,586 A:middle
We don't want that
wallet anymore.

661
00:28:45,736 --> 00:28:47,256 A:middle
We don't want to see
that wallet anymore.

662
00:28:47,896 --> 00:28:48,996 A:middle
We do that with passes.

663
00:28:49,936 --> 00:28:52,996 A:middle
Passes allow us to take
action in the real world.

664
00:28:53,576 --> 00:28:54,896 A:middle
They are really easy
to integrate

665
00:28:54,896 --> 00:28:56,746 A:middle
into your apps, into your flow.

666
00:28:57,616 --> 00:29:00,826 A:middle
And passes when they are
engaging really keep your users

667

668
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

669
00:28:57,616 --> 00:29:00,826 A:middle
And passes when they are
engaging really keep your users

670
00:29:01,556 --> 00:29:04,586 A:middle
interactive and interested
in your systems.

671
00:29:05,486 --> 00:29:06,806 A:middle
And I want to remind you

672
00:29:06,806 --> 00:29:08,126 A:middle
to integrate Apple
Pay into your apps.

673
00:29:08,246 --> 00:29:11,016 A:middle
Encourage your users to use
Apple Pay into their apps.

674
00:29:11,796 --> 00:29:14,786 A:middle
Remember you want that smooth
and seamless checkout flow

675
00:29:14,786 --> 00:29:17,316 A:middle
and we also want the
higher conversion rates

676
00:29:17,506 --> 00:29:18,106 A:middle
for our merchants.

677
00:29:19,406 --> 00:29:21,616 A:middle
I didn't even talk about
integrating Apple Pay

678
00:29:21,616 --> 00:29:23,186 A:middle
as a payment inside apps at all.

679
00:29:23,646 --> 00:29:26,106 A:middle
This session cannot
contain that awesomeness.

680
00:29:26,666 --> 00:29:30,726 A:middle
We have our own session
immediately following this one,

681
00:29:31,126 --> 00:29:34,446 A:middle
give by my colleagues Nick
and Rachel, and it's going

682
00:29:34,446 --> 00:29:35,576 A:middle
to be really, really amazing.

683
00:29:35,576 --> 00:29:37,796 A:middle
They will solve that
abandoned cart issue.

684
00:29:38,056 --> 00:29:41,806 A:middle
They're going to help integrate
Apple Pay into your apps.

685
00:29:42,966 --> 00:29:45,836 A:middle
Remember, please use
Wallet and use Apple Pay.

686
00:29:45,836 --> 00:29:47,306 A:middle
Go out there and redeem coupons.

687
00:29:47,936 --> 00:29:48,976 A:middle
Go out there and spend money!

688
00:29:49,566 --> 00:29:55,526 A:middle
I mentioned a lot of resources
during this talk and I want

689
00:29:55,526 --> 00:29:57,026 A:middle
to point a couple
of them out to you.

690
00:29:57,436 --> 00:30:00,676 A:middle
First, we have Passbook for
Developers specific site

691

692
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

693
00:29:57,436 --> 00:30:00,676 A:middle
First, we have Passbook for
Developers specific site

694
00:30:00,676 --> 00:30:02,296 A:middle
on our developer website.

695
00:30:02,776 --> 00:30:04,756 A:middle
We also have one specific
to Apple Pay as well.

696
00:30:04,756 --> 00:30:08,526 A:middle
And I mentioned a couple of
talks from previous WWDCs.

697
00:30:09,206 --> 00:30:10,546 A:middle
Here's one from 2012,

698
00:30:10,796 --> 00:30:14,266 A:middle
it's called "Introducing
Passbook Part 1 & 2" that's

699
00:30:14,266 --> 00:30:16,176 A:middle
really going to go in
depth into designing passes

700
00:30:16,276 --> 00:30:17,486 A:middle
and updating passes as well.

701
00:30:17,856 --> 00:30:19,736 A:middle
And then "Integrating Passbook

702
00:30:19,736 --> 00:30:23,096 A:middle
Into Your Ecosystem"
which is WWDC 2013.

703
00:30:24,016 --> 00:30:26,006 A:middle
These are really great resources
for you guys to check out.

704
00:30:26,596 --> 00:30:28,366 A:middle
And of course we have
our developer forum

705
00:30:28,876 --> 00:30:30,806 A:middle
that you guys can
utilize as well.

706
00:30:32,016 --> 00:30:35,956 A:middle
And a really awesome evangelist
Paul can also help you guys

707
00:30:35,956 --> 00:30:37,576 A:middle
out here, here's
his email address.

708
00:30:38,746 --> 00:30:42,166 A:middle
So again, thank you for your
time, thank you for coming

709
00:30:42,166 --> 00:30:44,876 A:middle
and listening about
Wallet and Apple Pay.

710
00:30:45,236 --> 00:30:48,026 A:middle
I hope you go out there have
a really, really great week.

711
00:30:48,226 --> 00:30:48,726 A:middle
Thanks a lot.

712
00:30:48,936 --> 00:30:49,136 A:middle
(Applause)

713
