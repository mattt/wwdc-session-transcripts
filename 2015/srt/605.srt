X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1
00:00:25,516 --> 00:00:31,666 A:middle
[Applause]

2
00:00:32,165 --> 00:00:32,926 A:middle
>> MEGAN GARDNER:
Hey, everybody.

3
00:00:33,206 --> 00:00:35,606 A:middle
Welcome, and thank you
for coming to our session.

4
00:00:35,926 --> 00:00:39,046 A:middle
My name is Megan Gardner, I'm a
software engineer on the games

5
00:00:39,046 --> 00:00:42,226 A:middle
and graphics team and later
we will have my colleague,

6
00:00:42,226 --> 00:00:43,896 A:middle
Edwin Iskandar up.

7
00:00:43,896 --> 00:00:46,676 A:middle
We're going to be talking
to you about going social

8
00:00:46,676 --> 00:00:48,696 A:middle
with ReplayKit and Game Center.

9
00:00:49,466 --> 00:00:51,816 A:middle
So we have a few things
on the agenda today.

10
00:00:52,056 --> 00:00:53,856 A:middle
First, what's new
in Game Center.

11
00:00:54,126 --> 00:00:58,066 A:middle
We have two new things
basically guest players as well

12
00:00:58,066 --> 00:00:59,926 A:middle
as our new unified
server environment.

13
00:00:59,926 --> 00:01:03,306 A:middle
And then Edwin will get up and
talk to you about ReplayKit

14

15
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

16
00:00:59,926 --> 00:01:03,306 A:middle
And then Edwin will get up and
talk to you about ReplayKit

17
00:01:03,686 --> 00:01:06,666 A:middle
which is a great new way to
add a new social experience

18
00:01:06,666 --> 00:01:09,006 A:middle
to your games and for
your users to be able

19
00:01:09,006 --> 00:01:11,536 A:middle
to share those experiences
with others.

20
00:01:12,796 --> 00:01:14,886 A:middle
So what's new in Game Center?

21
00:01:15,476 --> 00:01:17,566 A:middle
Well, what is Game Center?

22
00:01:18,156 --> 00:01:19,206 A:middle
Hopefully you know what it is,

23
00:01:19,206 --> 00:01:20,436 A:middle
especially if you
are in this session.

24
00:01:20,436 --> 00:01:22,756 A:middle
It's been around for a while,
but just in case you don't,

25
00:01:23,376 --> 00:01:27,766 A:middle
Game Center is our API and app
that allows you as developers

26
00:01:27,766 --> 00:01:30,116 A:middle
to add a social experience
to your games.

27
00:01:30,576 --> 00:01:33,036 A:middle
This allows our users to be able
to make friends with each other,

28
00:01:33,356 --> 00:01:36,126 A:middle
for you as developers to be
able to set up leaderboards

29
00:01:36,126 --> 00:01:38,256 A:middle
for those users to be
able to post scores to,

30
00:01:38,476 --> 00:01:40,546 A:middle
that they can then compare
against their friends as well

31
00:01:40,546 --> 00:01:43,696 A:middle
as others, for you to be
able to define achievements

32
00:01:43,696 --> 00:01:46,736 A:middle
that your users can achieve
and we also support everything

33
00:01:46,736 --> 00:01:49,086 A:middle
that you would need to be
able to write a realtime

34
00:01:49,086 --> 00:01:51,476 A:middle
or turn-based multiplayer
game without having

35
00:01:51,476 --> 00:01:52,656 A:middle
to set up your own servers.

36
00:01:53,316 --> 00:01:56,356 A:middle
And we also support challenges
which add a multiplayer element

37
00:01:56,596 --> 00:01:57,806 A:middle
to your single player game.

38
00:01:58,476 --> 00:01:59,736 A:middle
So, what's new?

39

40
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

41
00:02:00,506 --> 00:02:03,076 A:middle
First up, we have guest players.

42
00:02:03,936 --> 00:02:06,516 A:middle
Currently in Game Center
we have two main places

43
00:02:06,516 --> 00:02:07,696 A:middle
that you'll run into players.

44
00:02:08,196 --> 00:02:10,045 A:middle
First is your GKLocalPlayer.

45
00:02:10,566 --> 00:02:12,466 A:middle
You only have one of these
per device and it has

46
00:02:12,466 --> 00:02:14,876 A:middle
to be an authenticated
Game Center user.

47
00:02:15,766 --> 00:02:19,936 A:middle
You'll also run into GKPlayer
as friends of that GKLocalPlayer

48
00:02:20,246 --> 00:02:22,956 A:middle
but more commonly as
participants in any sort

49
00:02:22,956 --> 00:02:24,796 A:middle
of multiplayer match
whether or not

50
00:02:24,796 --> 00:02:27,026 A:middle
that is real time or turn-based.

51
00:02:27,526 --> 00:02:28,816 A:middle
However with these players,

52
00:02:28,816 --> 00:02:31,166 A:middle
you can only have one
player per device.

53
00:02:31,766 --> 00:02:32,626 A:middle
Well, not anymore.

54
00:02:33,396 --> 00:02:34,516 A:middle
Now we have guest players.

55
00:02:35,096 --> 00:02:36,356 A:middle
So what are guest players?

56
00:02:36,866 --> 00:02:39,686 A:middle
They actually are
GKPlayer instances.

57
00:02:39,686 --> 00:02:43,106 A:middle
So you can use them just like
you would any other GKPlayer.

58
00:02:43,756 --> 00:02:45,566 A:middle
They do not require
authentication,

59
00:02:45,606 --> 00:02:48,536 A:middle
they will be created by you
vending us an identifier

60
00:02:48,536 --> 00:02:50,496 A:middle
and then we will give
you back a GKPlayer.

61
00:02:51,166 --> 00:02:52,846 A:middle
They are first-class
participants

62
00:02:52,846 --> 00:02:55,546 A:middle
in any multiplayer game so
you can fill up the rest

63
00:02:55,546 --> 00:02:58,516 A:middle
of the slots in your game
with those guest players.

64
00:02:58,836 --> 00:03:02,716 A:middle
You do need to have at least
one authenticated GKPlayer

65

66
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

67
00:02:58,836 --> 00:03:02,716 A:middle
You do need to have at least
one authenticated GKPlayer

68
00:03:03,166 --> 00:03:06,436 A:middle
but everything else can
be those guest players.

69
00:03:06,856 --> 00:03:08,436 A:middle
What can you use
guest players for?

70
00:03:09,286 --> 00:03:10,746 A:middle
They are great for
pass and play.

71
00:03:11,176 --> 00:03:13,356 A:middle
Say you want to be able
to have an iPad game

72
00:03:13,356 --> 00:03:15,366 A:middle
that you have one
player logged into

73
00:03:15,516 --> 00:03:17,166 A:middle
and everybody else wants
to be able to play.

74
00:03:17,476 --> 00:03:18,806 A:middle
You can fill up the
rest of those slots

75
00:03:18,806 --> 00:03:20,736 A:middle
with these guest
players and be able

76
00:03:20,736 --> 00:03:23,156 A:middle
to have a completely
local game on that iPad

77
00:03:23,396 --> 00:03:25,006 A:middle
that your users will
be able to play

78
00:03:25,356 --> 00:03:28,816 A:middle
and you can treat the game logic
in that turn-base game exactly

79
00:03:28,816 --> 00:03:30,126 A:middle
as you would any other game.

80
00:03:30,126 --> 00:03:32,476 A:middle
You can pass messages,
you can pass the turn,

81
00:03:32,756 --> 00:03:34,906 A:middle
you can send exchanges
just as you would

82
00:03:34,906 --> 00:03:36,806 A:middle
in any other turn-based game.

83
00:03:37,616 --> 00:03:40,666 A:middle
It's also a really great way to
be able to plug in AI players,

84
00:03:40,876 --> 00:03:43,656 A:middle
which will allow you to be able
to have the same game logic

85
00:03:43,656 --> 00:03:45,596 A:middle
as you would otherwise
but also be able

86
00:03:45,596 --> 00:03:48,336 A:middle
to have your users be able to
play against different levels

87
00:03:48,336 --> 00:03:50,616 A:middle
of AI so they can learn how
to up their game faster.

88
00:03:51,606 --> 00:03:54,416 A:middle
So with guest players, as I
said before, you are going

89
00:03:54,416 --> 00:03:58,456 A:middle
to be defining the identifier,
and that identifier needs

90
00:03:58,456 --> 00:04:01,106 A:middle
to be unique across
each game session.

91

92
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

93
00:03:58,456 --> 00:04:01,106 A:middle
to be unique across
each game session.

94
00:04:01,566 --> 00:04:03,266 A:middle
So whatever method
you end up using,

95
00:04:03,486 --> 00:04:04,956 A:middle
make sure that you are not going

96
00:04:04,956 --> 00:04:07,356 A:middle
to be having any collisions
on this identifier.

97
00:04:07,356 --> 00:04:10,416 A:middle
If you have one guest
player, on one device

98
00:04:10,416 --> 00:04:13,156 A:middle
and another guest player on
another device, just make sure

99
00:04:13,156 --> 00:04:14,546 A:middle
that those aren't
going to collide,

100
00:04:14,546 --> 00:04:17,116 A:middle
otherwise your game logic is
probably going to have problems.

101
00:04:18,386 --> 00:04:22,466 A:middle
These guest players can't
earn scores or achievements,

102
00:04:22,866 --> 00:04:24,546 A:middle
which makes sense, there's
nothing on the server

103
00:04:24,546 --> 00:04:28,876 A:middle
to post them to, but
you need to know that.

104
00:04:29,566 --> 00:04:35,626 A:middle
Sessions with guest players are
only compatible with sessions

105
00:04:35,966 --> 00:04:39,196 A:middle
with players that are
also running iOS 9.

106
00:04:39,736 --> 00:04:43,706 A:middle
Now, this does not lock
your game to iOS 9.

107
00:04:44,036 --> 00:04:48,406 A:middle
This only locks those individual
sessions with guest players

108
00:04:48,736 --> 00:04:52,046 A:middle
to other users that
are running iOS 9.

109
00:04:52,586 --> 00:04:54,636 A:middle
We try to make this a
little bit easier for you,

110
00:04:54,876 --> 00:04:57,856 A:middle
we won't be automatching anyone
that won't be able to join

111
00:04:57,856 --> 00:05:01,986 A:middle
that game and if one of your
users does extend an invitation

112

113
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

114
00:04:57,856 --> 00:05:01,986 A:middle
that game and if one of your
users does extend an invitation

115
00:05:02,026 --> 00:05:05,606 A:middle
to multiplayer game to someone
who wouldn't be able to join,

116
00:05:05,606 --> 00:05:07,716 A:middle
we will be auto declining
that on the server side

117
00:05:07,776 --> 00:05:10,346 A:middle
on their behalf so you
shouldn't run into any issues

118
00:05:10,556 --> 00:05:12,186 A:middle
but it is something you
need to be aware of.

119
00:05:12,686 --> 00:05:14,706 A:middle
Again, this is not
locking your game.

120
00:05:15,066 --> 00:05:15,986 A:middle
Everything specified

121
00:05:15,986 --> 00:05:17,896 A:middle
in the compatibility
matrix will still work,

122
00:05:18,286 --> 00:05:20,326 A:middle
anyone who is running on
an older version of iOS

123
00:05:20,446 --> 00:05:22,056 A:middle
with your game will still work.

124
00:05:22,356 --> 00:05:24,936 A:middle
It's just those individual
gameplay sessions.

125
00:05:25,536 --> 00:05:27,046 A:middle
That's guest players.

126
00:05:27,296 --> 00:05:30,186 A:middle
We really hope that this is
going to allow you to create new

127
00:05:30,186 --> 00:05:33,316 A:middle
and interesting dynamic ways to
add to your multiplayer games

128
00:05:33,316 --> 00:05:35,686 A:middle
and we are really excited to see
what you're going to do with it.

129
00:05:36,376 --> 00:05:40,146 A:middle
Next up, we have the Game
Center Sandbox environment.

130
00:05:40,906 --> 00:05:45,826 A:middle
So Sandbox, we created to have
a separate environment for you

131
00:05:45,826 --> 00:05:48,566 A:middle
to be able to test out
Game Center functionality

132
00:05:48,816 --> 00:05:50,136 A:middle
without being on production.

133
00:05:50,636 --> 00:05:54,096 A:middle
But we had a completely
duplicate server,

134
00:05:54,096 --> 00:05:55,416 A:middle
you had to have different
accounts

135
00:05:55,416 --> 00:05:58,096 A:middle
and all the exact same
data in two places.

136
00:05:58,096 --> 00:06:00,446 A:middle
And this was really great.

137

138
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

139
00:05:58,096 --> 00:06:00,446 A:middle
And this was really great.

140
00:06:00,906 --> 00:06:04,486 A:middle
But we feel that Sandbox
has really done its purpose,

141
00:06:04,906 --> 00:06:08,516 A:middle
and now we are going to unify
Sandbox with production.

142
00:06:09,366 --> 00:06:11,926 A:middle
So you will still
have two sets of data

143
00:06:11,926 --> 00:06:14,716 A:middle
but it will all be
running on the same server.

144
00:06:15,276 --> 00:06:18,776 A:middle
And this gives us a lot of
really good benefits, one,

145
00:06:18,776 --> 00:06:20,396 A:middle
this really simplifies
your accounts.

146
00:06:20,706 --> 00:06:22,836 A:middle
You no longer have to have
a separate Sandbox account

147
00:06:22,836 --> 00:06:24,716 A:middle
that you're going to have to
be worried about maintaining,

148
00:06:24,946 --> 00:06:30,086 A:middle
making friends with or dealing
with in any way like that.

149
00:06:30,086 --> 00:06:31,856 A:middle
This is really compatible
with TestFlight

150
00:06:31,856 --> 00:06:35,476 A:middle
so you can send your game out
on TestFlight for your testers

151
00:06:35,836 --> 00:06:38,236 A:middle
to be able to test with
and not have to worry

152
00:06:38,236 --> 00:06:39,536 A:middle
about them setting up Sandbox.

153
00:06:40,446 --> 00:06:44,106 A:middle
Multiplayer will now
work against any version

154
00:06:44,106 --> 00:06:49,316 A:middle
that you have published on that
server and this is automatic,

155
00:06:49,316 --> 00:06:50,946 A:middle
you don't have to do
anything to set this up,

156
00:06:50,976 --> 00:06:52,636 A:middle
we will be flipping
the switch on our side.

157
00:06:53,956 --> 00:06:55,996 A:middle
There are a few things that
you do need to be aware of.

158
00:06:56,476 --> 00:06:58,886 A:middle
First, any new game
that you will be working

159
00:06:58,886 --> 00:07:02,326 A:middle
on will actually show up in
your games list in Game Center.

160

161
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

162
00:06:58,886 --> 00:07:02,326 A:middle
on will actually show up in
your games list in Game Center.

163
00:07:02,526 --> 00:07:03,836 A:middle
So as you can see here,

164
00:07:04,236 --> 00:07:06,706 A:middle
me and demo-liscious are
working on GK tester.

165
00:07:06,706 --> 00:07:10,146 A:middle
And if you were demo-liscious'
friend, then you clicked

166
00:07:10,146 --> 00:07:13,076 A:middle
on her profile in the Game
Center app, if you clicked

167
00:07:13,076 --> 00:07:15,566 A:middle
on her games list, you would be
able to scroll through and see

168
00:07:15,566 --> 00:07:16,876 A:middle
that she was working
on that game.

169
00:07:17,236 --> 00:07:19,216 A:middle
If there's a game
you really don't want

170
00:07:19,216 --> 00:07:21,566 A:middle
to let anyone know about,
we do suggest that you set

171
00:07:21,566 --> 00:07:24,776 A:middle
up a separate account, however,

172
00:07:24,776 --> 00:07:26,176 A:middle
that shouldn't be too
much of a problem.

173
00:07:26,706 --> 00:07:29,756 A:middle
Any scores that you post,

174
00:07:30,006 --> 00:07:32,296 A:middle
while running your
game will be posting

175
00:07:32,356 --> 00:07:33,736 A:middle
to the same leaderboards.

176
00:07:34,386 --> 00:07:39,516 A:middle
And iOS 8 users will still
actually need to flip

177
00:07:39,516 --> 00:07:41,816 A:middle
that Sandbox switch in settings

178
00:07:42,316 --> 00:07:45,426 A:middle
because we will be
automatically errorring

179
00:07:45,426 --> 00:07:47,526 A:middle
out if they are not
thinking that they are going

180
00:07:47,526 --> 00:07:48,686 A:middle
into that Sandbox environment.

181
00:07:48,686 --> 00:07:51,616 A:middle
Well, Sandbox doesn't exist
so they won't actually be

182
00:07:51,616 --> 00:07:54,296 A:middle
in Sandbox but they will see
some of that same UI treatment.

183
00:07:54,776 --> 00:07:59,696 A:middle
But fortunately, everyone on
iOS 8 can upgrade to iOS 9,

184

185
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

186
00:08:00,056 --> 00:08:01,556 A:middle
so we just suggest that
you do that instead.

187
00:08:02,096 --> 00:08:06,006 A:middle
So let's go over what this
is exactly going to mean

188
00:08:06,006 --> 00:08:07,096 A:middle
for each one of these sections.

189
00:08:07,606 --> 00:08:08,536 A:middle
So leaderboards.

190
00:08:09,266 --> 00:08:11,256 A:middle
All of your versions
will be posting

191
00:08:11,306 --> 00:08:12,856 A:middle
to the same leaderboards.

192
00:08:13,236 --> 00:08:15,896 A:middle
However, if you have
an update to your game,

193
00:08:15,956 --> 00:08:18,056 A:middle
in which you've added
new leaderboards,

194
00:08:18,486 --> 00:08:22,526 A:middle
those leaderboards will only be
viewable to you or your testers

195
00:08:22,666 --> 00:08:24,576 A:middle
who are running that version,

196
00:08:24,806 --> 00:08:26,416 A:middle
that updated version
of your game.

197
00:08:26,716 --> 00:08:28,676 A:middle
No one else will be able
to see those leaderboards,

198
00:08:29,036 --> 00:08:30,956 A:middle
but everything else
you will be posting

199
00:08:30,956 --> 00:08:32,546 A:middle
to those same production
leaderboards.

200
00:08:33,015 --> 00:08:35,666 A:middle
Fortunately, everything is
iTunes Connect and that is going

201
00:08:35,666 --> 00:08:37,785 A:middle
to allow you to clear the
leaderboards before you publish

202
00:08:37,785 --> 00:08:40,716 A:middle
them or to call any scores
that you or your testers end

203
00:08:40,716 --> 00:08:43,576 A:middle
up posting either
erroneously or in a way

204
00:08:43,576 --> 00:08:44,636 A:middle
that you don't really
want to mess

205
00:08:44,636 --> 00:08:46,016 A:middle
up the integrity of
your leaderboards.

206
00:08:46,016 --> 00:08:47,256 A:middle
Those are easily clearable

207
00:08:47,256 --> 00:08:50,966 A:middle
through iTunes Connect
using your current tools.

208
00:08:51,136 --> 00:08:54,116 A:middle
For multiplayer, this is
a really huge benefit.

209
00:08:54,496 --> 00:08:58,866 A:middle
This is going to allow you to
be able to test your updates

210
00:08:58,866 --> 00:09:01,966 A:middle
to your multiplayer games
against games that are already

211

212
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

213
00:08:58,866 --> 00:09:01,966 A:middle
to your multiplayer games
against games that are already

214
00:09:01,966 --> 00:09:04,016 A:middle
out there in the
wild in production.

215
00:09:04,386 --> 00:09:08,446 A:middle
Because there's no barrier
between the preproduction server

216
00:09:08,446 --> 00:09:09,926 A:middle
and the production server.

217
00:09:09,926 --> 00:09:11,416 A:middle
They are the same server.

218
00:09:11,496 --> 00:09:13,806 A:middle
So you will be able to
easily test and make sure

219
00:09:14,066 --> 00:09:15,466 A:middle
that any updates
that you are making

220
00:09:15,466 --> 00:09:17,416 A:middle
to your multiplayer
games are going to work

221
00:09:17,416 --> 00:09:20,426 A:middle
with whatever is
already out there.

222
00:09:21,216 --> 00:09:24,506 A:middle
For iTunes Connect, you will
be maintaining two completely

223
00:09:24,506 --> 00:09:25,546 A:middle
separate sets of metadata

224
00:09:25,546 --> 00:09:28,256 A:middle
that we will be maintaining
on the server.

225
00:09:28,256 --> 00:09:31,146 A:middle
You will have your currently
released version of your data,

226
00:09:31,376 --> 00:09:33,586 A:middle
as well as the unreleased
version of your data.

227
00:09:34,636 --> 00:09:39,556 A:middle
So which set of data that
you get, you or your users

228
00:09:39,556 --> 00:09:43,416 A:middle
or your testers is going to
depend on the CFBundleVersion

229
00:09:43,516 --> 00:09:46,926 A:middle
of the app that you have
installed on that device.

230
00:09:47,686 --> 00:09:51,236 A:middle
So if the CFBundleVersion
on your device is greater

231
00:09:51,236 --> 00:09:53,656 A:middle
than the release bundle
version that you would get

232
00:09:53,876 --> 00:09:57,276 A:middle
from the App Store, you will
be vended the unreleased data.

233
00:09:58,326 --> 00:10:02,116 A:middle
If the CFBundleVersion that you
have on your device is less than

234

235
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

236
00:09:58,326 --> 00:10:02,116 A:middle
If the CFBundleVersion that you
have on your device is less than

237
00:10:02,116 --> 00:10:05,276 A:middle
or equal to the release bundle
version that you would download

238
00:10:05,276 --> 00:10:08,586 A:middle
from the App Store, you will be
vended the currently released

239
00:10:08,676 --> 00:10:09,276 A:middle
set of data.

240
00:10:09,886 --> 00:10:11,856 A:middle
If there isn't one
on the App Store,

241
00:10:12,056 --> 00:10:13,806 A:middle
then you will just be
getting the unreleased data.

242
00:10:13,806 --> 00:10:15,986 A:middle
It's the only data that exists.

243
00:10:17,016 --> 00:10:18,266 A:middle
So let's go over this again.

244
00:10:18,266 --> 00:10:24,156 A:middle
If you or one of your testers
is running a beta version

245
00:10:25,086 --> 00:10:29,396 A:middle
of your game, then that
game will be viewable

246
00:10:29,396 --> 00:10:31,536 A:middle
by your Game Center friends
in the Game Center app.

247
00:10:32,186 --> 00:10:34,486 A:middle
You will be able to play
against any other beta version,

248
00:10:34,836 --> 00:10:36,836 A:middle
that's the only versions
out there.

249
00:10:36,836 --> 00:10:38,406 A:middle
You'll be posting to
the beta leaderboards,

250
00:10:38,406 --> 00:10:40,926 A:middle
again those are the only
leaderboards that exist.

251
00:10:41,476 --> 00:10:45,576 A:middle
If you or one of your users
is running a released version

252
00:10:45,576 --> 00:10:48,416 A:middle
of your game, this is
kind of your normal case,

253
00:10:48,486 --> 00:10:51,116 A:middle
you will be able to see
the game in Game Center,

254
00:10:51,116 --> 00:10:52,496 A:middle
on your Game Center's
friends list.

255
00:10:52,856 --> 00:10:55,616 A:middle
You will be able to play,
if it's a multiplayer game,

256
00:10:55,616 --> 00:10:58,976 A:middle
against any version specified
in the compatibility matrix

257
00:10:58,976 --> 00:11:01,826 A:middle
and iTunes Connect,
including versions

258

259
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

260
00:10:58,976 --> 00:11:01,826 A:middle
and iTunes Connect,
including versions

261
00:11:02,206 --> 00:11:05,916 A:middle
that your game would not
necessarily know about because

262
00:11:05,916 --> 00:11:08,186 A:middle
that compatibility matrix
is stored on the server

263
00:11:08,326 --> 00:11:09,966 A:middle
and the server will
know that you can match

264
00:11:09,966 --> 00:11:11,316 A:middle
against those unreleased games.

265
00:11:12,226 --> 00:11:14,486 A:middle
You will be posting to
released leaderboards just

266
00:11:14,486 --> 00:11:15,146 A:middle
like you would expect.

267
00:11:16,096 --> 00:11:19,776 A:middle
If you or one of your testers
is running an updated version

268
00:11:19,776 --> 00:11:21,416 A:middle
of your game that has
not been pubbished

269
00:11:21,416 --> 00:11:24,776 A:middle
yet that game will still
be viewable in Game Center

270
00:11:24,776 --> 00:11:28,626 A:middle
in your Game Center friends list
and you will be able to play

271
00:11:28,626 --> 00:11:30,196 A:middle
against any specified
version, whether

272
00:11:30,196 --> 00:11:32,736 A:middle
or not it is the older version
of your game or the new version

273
00:11:32,736 --> 00:11:35,706 A:middle
of your game that you're
testing, anything specified

274
00:11:35,706 --> 00:11:38,166 A:middle
on the compatibility matrix, you
will be able to play against.

275
00:11:38,916 --> 00:11:42,156 A:middle
Then you will be posting
to release leaderboards

276
00:11:42,816 --> 00:11:48,276 A:middle
if the leaderboard already
exists or you will be posting

277
00:11:48,276 --> 00:11:51,556 A:middle
to an unreleased leaderboard
if that is a new leaderboard

278
00:11:51,556 --> 00:11:53,436 A:middle
for that game and those games --

279
00:11:53,436 --> 00:11:56,356 A:middle
those leaderboards will only
be viewable by those people

280
00:11:56,356 --> 00:12:00,406 A:middle
who have that version of
your game on their system.

281

282
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

283
00:11:56,356 --> 00:12:00,406 A:middle
who have that version of
your game on their system.

284
00:12:00,956 --> 00:12:03,216 A:middle
So that's what's new.

285
00:12:03,626 --> 00:12:06,276 A:middle
First was guest players
which we really hope is going

286
00:12:06,276 --> 00:12:08,286 A:middle
to expand the multiplayer
opportunities that you have

287
00:12:08,286 --> 00:12:13,156 A:middle
for your game, as well as our
new unified server environment

288
00:12:13,746 --> 00:12:16,936 A:middle
which is really simple, it's
automatic, there's nothing

289
00:12:16,936 --> 00:12:18,306 A:middle
that you need to
do to set this up.

290
00:12:18,466 --> 00:12:20,636 A:middle
It's going to work so much
better with TestFlight,

291
00:12:20,636 --> 00:12:23,456 A:middle
which we feel will give you
guys a better way to be able

292
00:12:23,496 --> 00:12:25,756 A:middle
to get full functionality
testing on your game.

293
00:12:26,616 --> 00:12:27,766 A:middle
And I think that
this is really going

294
00:12:27,766 --> 00:12:29,516 A:middle
to just make your guys'
life a lot easier.

295
00:12:29,636 --> 00:12:33,886 A:middle
Now I will bring up Edwin
and he will tell you

296
00:12:33,886 --> 00:12:35,966 A:middle
about the new framework
replay kit.

297
00:12:36,516 --> 00:12:40,826 A:middle
[Applause]

298
00:12:41,326 --> 00:12:41,746 A:middle
>> EDWIN ISKANDAR: All right.

299
00:12:42,506 --> 00:12:43,216 A:middle
Thank you, Megan.

300
00:12:43,966 --> 00:12:45,866 A:middle
Good afternoon, I'm
Edwin Iskandar.

301
00:12:45,866 --> 00:12:48,196 A:middle
I'm a software engineer on the
graphics and games team here

302
00:12:48,196 --> 00:12:51,406 A:middle
at Apple and I'm here to
talk to you about ReplayKit.

303
00:12:52,586 --> 00:12:55,316 A:middle
So some truly memorable moments
happen during gaming, right,

304
00:12:55,826 --> 00:12:57,576 A:middle
like when you finally
get those three stars

305
00:12:57,806 --> 00:12:59,356 A:middle
in that seemingly
impossible level.

306
00:12:59,356 --> 00:13:02,516 A:middle
Or when you finally
beat that last boss

307

308
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

309
00:12:59,356 --> 00:13:02,516 A:middle
Or when you finally
beat that last boss

310
00:13:02,516 --> 00:13:04,036 A:middle
without losing a
single life point.

311
00:13:04,926 --> 00:13:06,776 A:middle
Wouldn't it be awesome
if you could capture

312
00:13:07,076 --> 00:13:08,026 A:middle
and share those moments?

313
00:13:09,346 --> 00:13:10,636 A:middle
So that's where ReplayKit
comes in.

314
00:13:12,166 --> 00:13:14,576 A:middle
ReplayKit records
the audio and visuals

315
00:13:14,826 --> 00:13:15,896 A:middle
of your running application.

316
00:13:17,066 --> 00:13:19,366 A:middle
It also allows you to use
this to add voice commentary

317
00:13:19,366 --> 00:13:22,276 A:middle
and so they can make their
recordings more personal or just

318
00:13:22,366 --> 00:13:23,866 A:middle
to provide additional context.

319
00:13:24,406 --> 00:13:26,766 A:middle
It allows your users
to play back,

320
00:13:26,936 --> 00:13:28,746 A:middle
scrub and trim their recordings

321
00:13:29,026 --> 00:13:30,986 A:middle
and finally share
their recordings

322
00:13:30,986 --> 00:13:32,316 A:middle
to their favorite
social networks

323
00:13:33,096 --> 00:13:34,926 A:middle
and video destination sites.

324
00:13:35,956 --> 00:13:38,756 A:middle
ReplayKit produces
high-quality HD recordings

325
00:13:39,546 --> 00:13:42,886 A:middle
that will look great on TV's,
websites and mobile devices.

326
00:13:43,906 --> 00:13:45,476 A:middle
And it does this
extremely efficiently

327
00:13:45,476 --> 00:13:49,406 A:middle
with a low-performance
impact while also minimizing

328
00:13:50,266 --> 00:13:51,416 A:middle
power usage.

329
00:13:51,656 --> 00:13:54,116 A:middle
ReplayKit includes
privacy safeguards

330
00:13:54,306 --> 00:13:57,026 A:middle
that help protect our users and
we'll talk a little bit more

331
00:13:57,026 --> 00:13:57,926 A:middle
about these in the next slide.

332
00:13:58,526 --> 00:14:01,536 A:middle
And it's available
today in the iOS 9 beta.

333

334
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

335
00:13:58,526 --> 00:14:01,536 A:middle
And it's available
today in the iOS 9 beta.

336
00:14:02,406 --> 00:14:05,936 A:middle
And later in the fall, to
customers when iOS 9 ships.

337
00:14:06,616 --> 00:14:10,926 A:middle
It's available in all
A7 and A8-based devices.

338
00:14:11,496 --> 00:14:16,316 A:middle
Like all of Apple's frameworks
ReplayKit takes the users

339
00:14:16,316 --> 00:14:17,716 A:middle
privacy very seriously.

340
00:14:18,556 --> 00:14:20,316 A:middle
So before ReplayKit
can start recording,

341
00:14:21,196 --> 00:14:22,926 A:middle
it requires that the
user give it permission,

342
00:14:23,246 --> 00:14:25,626 A:middle
and it does this via
user consent prompt.

343
00:14:26,846 --> 00:14:29,076 A:middle
ReplayKit also supports
parental controls

344
00:14:29,076 --> 00:14:32,746 A:middle
so if you have a device
that's often used by a child,

345
00:14:32,746 --> 00:14:37,386 A:middle
you can disable ReplayKit
systemwide via settings.

346
00:14:38,066 --> 00:14:40,736 A:middle
All recordings made via
ReplayKit will exclude

347
00:14:40,736 --> 00:14:41,276 A:middle
system UI.

348
00:14:41,786 --> 00:14:44,356 A:middle
That means that any personal
notifications that come through,

349
00:14:44,576 --> 00:14:47,396 A:middle
while recording, will
be excluded as well

350
00:14:47,396 --> 00:14:49,396 A:middle
as any keyboard entry
that happens in game.

351
00:14:51,636 --> 00:14:54,476 A:middle
And finally, applications
don't have direct access

352
00:14:54,796 --> 00:14:55,606 A:middle
to the movie files.

353
00:14:55,896 --> 00:14:57,096 A:middle
These are only accessible

354
00:14:57,096 --> 00:15:01,126 A:middle
to the user via ReplayKit's
preview UI and share sheet.

355

356
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

357
00:14:57,096 --> 00:15:01,126 A:middle
to the user via ReplayKit's
preview UI and share sheet.

358
00:15:01,676 --> 00:15:05,246 A:middle
All right, so let's take a
look at how ReplayKit works

359
00:15:05,586 --> 00:15:07,086 A:middle
by taking a look at
its architecture.

360
00:15:07,686 --> 00:15:11,656 A:middle
So your application links
to the ReplayKit framework

361
00:15:11,996 --> 00:15:15,456 A:middle
and it uses these two
classes, RPScreenRecorder

362
00:15:15,676 --> 00:15:16,936 A:middle
which handles the
recording tasks

363
00:15:17,626 --> 00:15:20,596 A:middle
and RPPreviewViewController
which is responsible

364
00:15:20,596 --> 00:15:21,936 A:middle
for the preview UI
and share sheet.

365
00:15:23,326 --> 00:15:27,226 A:middle
So RPScreenRecorder communicates
with the replay demon

366
00:15:27,386 --> 00:15:29,186 A:middle
which is a separate process
from your application.

367
00:15:30,196 --> 00:15:32,756 A:middle
The replay demon communicates
with lower level video

368
00:15:32,756 --> 00:15:36,066 A:middle
and audio services which in turn
communicate with the hardware

369
00:15:36,806 --> 00:15:39,956 A:middle
to capture the visuals and
audio of your application,

370
00:15:40,006 --> 00:15:42,746 A:middle
as well as the audio data
from the device microphone.

371
00:15:44,216 --> 00:15:48,816 A:middle
During capture, the replay
demon will encode this data

372
00:15:48,816 --> 00:15:50,716 A:middle
in realtime and write
it to a movie file.

373
00:15:51,026 --> 00:15:54,206 A:middle
It will write this movie file
to a location only accessible

374
00:15:54,356 --> 00:15:56,316 A:middle
to ReplayKits internal services.

375
00:15:57,156 --> 00:16:01,446 A:middle
How does the user actually
interact with that movie then?

376

377
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

378
00:15:57,156 --> 00:16:01,446 A:middle
How does the user actually
interact with that movie then?

379
00:16:01,666 --> 00:16:03,586 A:middle
Well, when you tell
RPScreenRecorder

380
00:16:03,586 --> 00:16:07,326 A:middle
to stop recording it vends back
an RPPreViewViewController.

381
00:16:07,976 --> 00:16:10,876 A:middle
And you can simply present it,

382
00:16:10,876 --> 00:16:13,226 A:middle
and RPPreviewViewController
hosts the preview

383
00:16:13,226 --> 00:16:16,096 A:middle
and share extension which
does have access to the movie

384
00:16:17,406 --> 00:16:18,986 A:middle
and your users can
interact with that

385
00:16:19,916 --> 00:16:21,726 A:middle
to preview and share the movie.

386
00:16:22,936 --> 00:16:25,416 A:middle
As you can see, it's a pretty
complicated system with a lot

387
00:16:25,416 --> 00:16:27,636 A:middle
of moving parts but thankfully

388
00:16:27,636 --> 00:16:31,056 A:middle
for developers it really just
boils down to these two classes.

389
00:16:31,526 --> 00:16:33,686 A:middle
RPScreenRecorder and
RPPreviewViewController.

390
00:16:34,516 --> 00:16:34,946 A:middle
Pretty simple.

391
00:16:34,946 --> 00:16:41,596 A:middle
All right, so let's take a
deeper look into these classes.

392
00:16:41,676 --> 00:16:44,216 A:middle
So first up, is
RPScreenRecorder.

393
00:16:44,536 --> 00:16:46,516 A:middle
Again, it's responsible
for starting, stopping

394
00:16:46,516 --> 00:16:47,556 A:middle
and discarding the recording.

395
00:16:48,086 --> 00:16:51,016 A:middle
It can also be used to check
for the ability to record

396
00:16:51,016 --> 00:16:52,756 A:middle
and it can also be used

397
00:16:52,756 --> 00:16:54,386 A:middle
to enable the microphone
for commentary.

398
00:16:55,596 --> 00:16:58,676 A:middle
RPScreenRecorder has a
delegate that you can set

399
00:16:58,736 --> 00:16:59,656 A:middle
that should conform

400
00:16:59,656 --> 00:17:02,116 A:middle
to the RPScreenRecorder
delegate protocol.

401

402
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

403
00:16:59,656 --> 00:17:02,116 A:middle
to the RPScreenRecorder
delegate protocol.

404
00:17:03,276 --> 00:17:05,236 A:middle
And this delegate can be
used to check for changes

405
00:17:05,236 --> 00:17:09,695 A:middle
in availability, and also how a
case is if recording stops due

406
00:17:09,695 --> 00:17:10,685 A:middle
to an error, for example.

407
00:17:11,246 --> 00:17:14,935 A:middle
For the second class,
RPPreviewViewController,

408
00:17:15,415 --> 00:17:17,465 A:middle
again it's responsible for
previewing the recording,

409
00:17:17,465 --> 00:17:19,715 A:middle
editing and trimming and
fially sharing the movie.

410
00:17:20,796 --> 00:17:24,336 A:middle
RPPreviewViewController also
has a delegate that you can set

411
00:17:24,606 --> 00:17:25,415 A:middle
that should conform

412
00:17:25,415 --> 00:17:27,596 A:middle
to the
RPPreviewViewControllerDelegate

413
00:17:27,596 --> 00:17:28,586 A:middle
protocol.

414
00:17:29,216 --> 00:17:31,906 A:middle
That can be used to simply
dismiss the view controller

415
00:17:32,486 --> 00:17:34,146 A:middle
when the user is done
previewing and sharing.

416
00:17:34,756 --> 00:17:37,006 A:middle
That's literally it.

417
00:17:37,006 --> 00:17:39,226 A:middle
There are actually only two
classes and two protocols.

418
00:17:39,226 --> 00:17:40,646 A:middle
It's a really compact framework

419
00:17:41,136 --> 00:17:44,026 A:middle
and as you will see adoption
is incredibly simple.

420
00:17:44,796 --> 00:17:47,186 A:middle
So let's take a look
at this API in action

421
00:17:47,416 --> 00:17:50,136 A:middle
and I think the best way to
do that is to use an example.

422
00:17:51,426 --> 00:17:53,956 A:middle
So the example we are
going to use is a game

423
00:17:53,956 --> 00:17:56,646 A:middle
that the sample code team
created called DemoBots.

424
00:17:56,646 --> 00:17:58,006 A:middle
You have probably seen
this in other sessions.

425
00:17:58,706 --> 00:18:01,616 A:middle
Just in case you haven't,
the premise of DemoBots is

426

427
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

428
00:17:58,706 --> 00:18:01,616 A:middle
Just in case you haven't,
the premise of DemoBots is

429
00:18:01,616 --> 00:18:05,136 A:middle
that you have this circuit
board where these task bots live

430
00:18:05,136 --> 00:18:07,736 A:middle
and the task bots
are responsible

431
00:18:07,736 --> 00:18:08,946 A:middle
for keeping the circuit
board running

432
00:18:09,246 --> 00:18:11,366 A:middle
but unfortunately all
the bots are buggy.

433
00:18:12,106 --> 00:18:13,416 A:middle
It's your job to debug them.

434
00:18:13,416 --> 00:18:17,826 A:middle
So each level in DemoBots
takes two to three minutes,

435
00:18:17,986 --> 00:18:21,726 A:middle
so it's short gameplay sessions
and you can download the source

436
00:18:21,726 --> 00:18:23,166 A:middle
at developer.Apple.com.

437
00:18:23,286 --> 00:18:24,286 A:middle
You should definitely
check it out.

438
00:18:24,956 --> 00:18:27,446 A:middle
It showcases a lot of Apple's
new gaming technologies.

439
00:18:27,736 --> 00:18:28,656 A:middle
It's a really great sample.

440
00:18:30,086 --> 00:18:33,036 A:middle
One of the reasons
why we chose DemoBots

441
00:18:33,176 --> 00:18:36,036 A:middle
to showcase ReplayKit is it has
this great scene flow that's

442
00:18:36,036 --> 00:18:37,416 A:middle
common to iOS games.

443
00:18:38,146 --> 00:18:40,366 A:middle
Once you launch DemoBots
you're treated to a main menu.

444
00:18:41,126 --> 00:18:43,216 A:middle
From the main menu,
you can start a game

445
00:18:43,216 --> 00:18:44,826 A:middle
and it transitions
you to the game level.

446
00:18:45,816 --> 00:18:49,256 A:middle
The game level, if you succeed
at the game level or fail at it,

447
00:18:49,326 --> 00:18:51,346 A:middle
will transition to
a level end scene

448
00:18:51,976 --> 00:18:54,826 A:middle
and from the level end scene,
you can either replay the level

449
00:18:54,826 --> 00:18:56,056 A:middle
or go to the next level.

450
00:18:57,156 --> 00:18:59,426 A:middle
So now that we know what
the scene flow looks like,

451
00:18:59,846 --> 00:19:02,416 A:middle
let's see how ReplayKit fits in.

452

453
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

454
00:18:59,846 --> 00:19:02,416 A:middle
let's see how ReplayKit fits in.

455
00:19:02,616 --> 00:19:06,006 A:middle
Since we know that DemoBots has
short game play sessions we will

456
00:19:06,096 --> 00:19:07,866 A:middle
opt for an automatic
recording strategy.

457
00:19:07,866 --> 00:19:12,116 A:middle
And what I mean by that is
that we want to tell ReplayKit

458
00:19:12,116 --> 00:19:15,406 A:middle
to start recording immediately
when the game level starts

459
00:19:16,076 --> 00:19:17,526 A:middle
and we want to tell
it to stop recording

460
00:19:18,006 --> 00:19:18,826 A:middle
when the game level ends.

461
00:19:18,826 --> 00:19:22,616 A:middle
We also want to allow
the user to preview

462
00:19:22,616 --> 00:19:24,786 A:middle
and share the recording
but we don't want

463
00:19:24,786 --> 00:19:26,846 A:middle
to do this immediately after
we stop recording, right?

464
00:19:27,536 --> 00:19:29,436 A:middle
We want to do this when all
the action has died down.

465
00:19:29,476 --> 00:19:31,516 A:middle
A perfect place to do that
is the level end scene.

466
00:19:31,516 --> 00:19:32,146 A:middle
All right.

467
00:19:33,276 --> 00:19:34,786 A:middle
Pretty straightforward.

468
00:19:35,026 --> 00:19:36,346 A:middle
So let's step through this.

469
00:19:37,386 --> 00:19:38,556 A:middle
So first up is the main menu.

470
00:19:39,556 --> 00:19:41,606 A:middle
Since we are using that
automatic recording strategy,

471
00:19:41,856 --> 00:19:44,556 A:middle
we also want to allow the
the user to disable this

472
00:19:44,556 --> 00:19:46,736 A:middle
if they don't want to
auto record each level

473
00:19:47,346 --> 00:19:49,866 A:middle
and to do this we have
implemented an auto record

474
00:19:49,866 --> 00:19:51,966 A:middle
button on the top right
there that the user can use

475
00:19:51,966 --> 00:19:53,436 A:middle
to toggle this behavior
on and off.

476
00:19:53,476 --> 00:19:58,146 A:middle
So let's say a user toggles
this on and then presses

477
00:19:58,146 --> 00:19:59,956 A:middle
on the new game button.

478

479
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

480
00:20:00,476 --> 00:20:02,506 A:middle
At this point, we
transition to the game level

481
00:20:02,506 --> 00:20:04,536 A:middle
where the actual gameplay
happens and we want

482
00:20:04,536 --> 00:20:06,136 A:middle
to tell ReplayKit
to start recording.

483
00:20:06,956 --> 00:20:08,846 A:middle
Let's take a look at what
that looks like in code.

484
00:20:09,356 --> 00:20:13,896 A:middle
First things first, we need an
instance of RPScreenRecorder.

485
00:20:14,826 --> 00:20:17,846 A:middle
So each application has a shared
instance of RPScreenRecorder

486
00:20:18,106 --> 00:20:21,036 A:middle
which can be accessed with the
class function; shared recorder.

487
00:20:21,756 --> 00:20:22,516 A:middle
Pretty straight forward.

488
00:20:23,576 --> 00:20:26,346 A:middle
To start recording, we
call a start recording

489
00:20:26,346 --> 00:20:29,156 A:middle
with microphone enabled
on that shared instance,

490
00:20:29,846 --> 00:20:32,826 A:middle
and here you can specify if you
want voice commentary on or off.

491
00:20:34,066 --> 00:20:36,716 A:middle
You also supply a handle block,

492
00:20:37,286 --> 00:20:40,816 A:middle
and that handle block is
supplied an optional NSError.

493
00:20:41,796 --> 00:20:43,116 A:middle
If you receive an error here,

494
00:20:43,116 --> 00:20:44,456 A:middle
you should handle
it appropriately.

495
00:20:44,946 --> 00:20:46,526 A:middle
In our case we're just
going to pause the game

496
00:20:46,596 --> 00:20:48,226 A:middle
and alert the user and
that the recording failed.

497
00:20:48,226 --> 00:20:52,446 A:middle
Once you start the recording
with microphone enables,

498
00:20:53,276 --> 00:20:56,726 A:middle
the user is presented with
this user consent prompt.

499
00:20:57,516 --> 00:20:59,476 A:middle
And the user at this
point has three options.

500

501
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

502
00:21:00,066 --> 00:21:02,226 A:middle
It can choose to record the
screen and the microphone

503
00:21:02,226 --> 00:21:03,506 A:middle
to enable voice commentary.

504
00:21:04,356 --> 00:21:06,236 A:middle
They can just record
the screen only.

505
00:21:07,076 --> 00:21:09,506 A:middle
Or they can don't
allow recording at all.

506
00:21:10,226 --> 00:21:14,676 A:middle
So this user consent prompt will
be displayed everytime you call

507
00:21:14,706 --> 00:21:16,176 A:middle
a start recording with
microphone enabled,

508
00:21:16,796 --> 00:21:20,956 A:middle
but once the user has accepted
it, it will not be shown again

509
00:21:21,386 --> 00:21:22,156 A:middle
for another eight minutes.

510
00:21:22,666 --> 00:21:27,386 A:middle
Let's say the user now wants
to enable voice commenary

511
00:21:27,386 --> 00:21:28,586 A:middle
and also record the screen.

512
00:21:28,586 --> 00:21:31,246 A:middle
So they press on the record
screen and microphone button.

513
00:21:31,796 --> 00:21:35,916 A:middle
Okay, at this point
ReplayKit starts recording,

514
00:21:36,376 --> 00:21:38,076 A:middle
the game starts and
the user is playing,

515
00:21:38,556 --> 00:21:40,186 A:middle
providing voice commentary
and whatnot.

516
00:21:40,796 --> 00:21:46,276 A:middle
And they debug all the task
bots at that particular level.

517
00:21:46,496 --> 00:21:48,766 A:middle
At that point, they beat the
level and we want to transition

518
00:21:48,766 --> 00:21:49,706 A:middle
to that level end scene.

519
00:21:50,356 --> 00:21:53,586 A:middle
Before we do that, we want to
tell ReplayKit to stop recording

520
00:21:54,866 --> 00:21:58,816 A:middle
to do that in code, we simply
call stop recording with handler

521
00:21:59,236 --> 00:22:02,516 A:middle
on that shared recorder
instance and then

522

523
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

524
00:21:59,236 --> 00:22:02,516 A:middle
on that shared recorder
instance and then

525
00:22:02,716 --> 00:22:05,416 A:middle
that handle block its
applied an optional NSError

526
00:22:05,986 --> 00:22:07,386 A:middle
and optional preview
view controller.

527
00:22:08,416 --> 00:22:10,956 A:middle
Again, handle that
error appropriately.

528
00:22:11,466 --> 00:22:12,776 A:middle
And for the preview
view controller,

529
00:22:12,776 --> 00:22:13,616 A:middle
you have a couple of options.

530
00:22:13,686 --> 00:22:18,206 A:middle
You can either present it
immediately or you can hang

531
00:22:18,206 --> 00:22:19,266 A:middle
on to it for later use.

532
00:22:19,576 --> 00:22:21,416 A:middle
So we are going to hang on
to it because we don't want

533
00:22:21,586 --> 00:22:24,696 A:middle
to display it just yet.

534
00:22:24,696 --> 00:22:26,786 A:middle
ReplayKit has stopped
recording and now we transition

535
00:22:26,786 --> 00:22:27,726 A:middle
to that level end scene.

536
00:22:28,376 --> 00:22:30,016 A:middle
And here we want to
allow user to preview

537
00:22:30,016 --> 00:22:30,806 A:middle
and share their movie.

538
00:22:31,646 --> 00:22:33,786 A:middle
We have implemented the
play recording button

539
00:22:33,786 --> 00:22:34,746 A:middle
that you see in the top right.

540
00:22:35,906 --> 00:22:37,466 A:middle
The user taps on that.

541
00:22:38,406 --> 00:22:43,636 A:middle
We want to present
that preview UI.

542
00:22:43,636 --> 00:22:46,526 A:middle
To do that in code, we
simply call UIViewController,

543
00:22:46,526 --> 00:22:49,606 A:middle
as present view controller
animated and we patch

544
00:22:49,606 --> 00:22:50,906 A:middle
in that preview view controller

545
00:22:50,976 --> 00:22:53,176 A:middle
that we held the
reference to previously.

546
00:22:53,726 --> 00:22:57,346 A:middle
That brings up replay
kit's preview UI

547
00:22:57,346 --> 00:23:01,766 A:middle
where the user can
scrub through, trim,

548

549
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

550
00:22:57,346 --> 00:23:01,766 A:middle
where the user can
scrub through, trim,

551
00:23:03,226 --> 00:23:04,596 A:middle
and finally share
their recordings.

552
00:23:05,626 --> 00:23:07,036 A:middle
Using ReplayKit's share UI.

553
00:23:07,036 --> 00:23:10,676 A:middle
So the share UI is implemented
with UI share preview controller

554
00:23:10,676 --> 00:23:14,026 A:middle
so you can even write your
own custom sharing extensions

555
00:23:14,026 --> 00:23:15,986 A:middle
in your app, which
is pretty cool.

556
00:23:17,576 --> 00:23:21,316 A:middle
So say the user wants to now
share this video to Facebook.

557
00:23:21,426 --> 00:23:24,926 A:middle
They tap on the Facebook button
and the Facebook modal shows up,

558
00:23:25,366 --> 00:23:28,086 A:middle
the video is already attached,
they can write a custom message

559
00:23:28,086 --> 00:23:31,426 A:middle
and then simply press post and
it will show up on their feed.

560
00:23:31,976 --> 00:23:35,796 A:middle
It's that simple for the user
to use and also really fun.

561
00:23:35,846 --> 00:23:36,466 A:middle
All right.

562
00:23:38,076 --> 00:23:42,356 A:middle
So now the video is posted
to the users Facebook feed,

563
00:23:42,356 --> 00:23:44,966 A:middle
and they are done sharing
and previewing, now they want

564
00:23:44,966 --> 00:23:46,826 A:middle
to cancel and dismiss
this preview UI.

565
00:23:47,096 --> 00:23:49,276 A:middle
So remember, we presented
the preview UI.

566
00:23:50,586 --> 00:23:52,566 A:middle
So we are also responsible
for dismissing it.

567
00:23:53,516 --> 00:23:54,666 A:middle
So to handle dismissal,

568
00:23:56,206 --> 00:23:58,286 A:middle
we simply set preview
view controllers delegate

569
00:23:58,286 --> 00:24:01,076 A:middle
and that delegate should conform

570

571
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

572
00:23:58,286 --> 00:24:01,076 A:middle
and that delegate should conform

573
00:24:01,076 --> 00:24:03,846 A:middle
to RPPreviewViewController
delegate protocol

574
00:24:04,406 --> 00:24:06,636 A:middle
and should implement
preview controller did finish

575
00:24:06,836 --> 00:24:08,986 A:middle
with get supplied, a
preview view controller

576
00:24:09,446 --> 00:24:12,096 A:middle
and you simply call dismiss
view controller animated

577
00:24:12,806 --> 00:24:13,966 A:middle
on that preview view controller.

578
00:24:14,546 --> 00:24:18,506 A:middle
And that's basically it.

579
00:24:18,506 --> 00:24:22,066 A:middle
Just a couple lines of code,
we have a basic implementation

580
00:24:22,066 --> 00:24:24,656 A:middle
of ReplayKit in DemoBots,
it's really that simple.

581
00:24:25,126 --> 00:24:28,006 A:middle
So just to recap, we went over
how to get a shared instance

582
00:24:28,006 --> 00:24:32,396 A:middle
of the recorder, how to stop
and start the recorder and how

583
00:24:32,426 --> 00:24:34,106 A:middle
to present and dismiss
that preview UI.

584
00:24:34,106 --> 00:24:34,376 A:middle
All right.

585
00:24:34,376 --> 00:24:38,026 A:middle
Now that we have
the basics down,

586
00:24:38,586 --> 00:24:41,896 A:middle
let's go into some more advanced
topics to really fine tune

587
00:24:41,896 --> 00:24:43,156 A:middle
that ReplayKit implementation.

588
00:24:44,456 --> 00:24:47,186 A:middle
So first up is verifying
availability.

589
00:24:48,486 --> 00:24:51,576 A:middle
So ReplayKit may become
available or may be unavailable

590
00:24:51,616 --> 00:24:52,386 A:middle
for a number of reasons.

591
00:24:53,746 --> 00:24:56,506 A:middle
ReplayKit uses the same
technologies as AirPlay and TV

592
00:24:56,506 --> 00:24:58,396 A:middle
out to capture its
video content.

593
00:24:59,136 --> 00:25:01,996 A:middle
So unfortunately, it cannot be
used simultaneously with either

594

595
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

596
00:24:59,136 --> 00:25:01,996 A:middle
So unfortunately, it cannot be
used simultaneously with either

597
00:25:01,996 --> 00:25:02,926 A:middle
of those two services.

598
00:25:03,466 --> 00:25:06,876 A:middle
And as I mentioned before,
ReplayKit is supported

599
00:25:06,876 --> 00:25:09,136 A:middle
on A7 and A8 based devices.

600
00:25:10,146 --> 00:25:12,816 A:middle
Any older devices, ReplayKit
will not be available.

601
00:25:13,456 --> 00:25:15,596 A:middle
To check for availability,

602
00:25:16,106 --> 00:25:20,146 A:middle
you simply query the available
property and RPScreenRecorder.

603
00:25:20,796 --> 00:25:23,596 A:middle
And what do you do if
it's not available?

604
00:25:23,896 --> 00:25:26,146 A:middle
Well, you simply
discard any recording UI

605
00:25:26,276 --> 00:25:27,966 A:middle
in your game or app.

606
00:25:28,756 --> 00:25:30,556 A:middle
Since availability can
change in realtime,

607
00:25:32,496 --> 00:25:35,586 A:middle
you can also implement
RPScreenRecorder delegate screen

608
00:25:35,586 --> 00:25:37,716 A:middle
recorder to change the
availability to listen

609
00:25:37,716 --> 00:25:38,926 A:middle
for changes in availability.

610
00:25:39,456 --> 00:25:43,326 A:middle
Quick example, remember
the auto record toggle

611
00:25:43,326 --> 00:25:44,676 A:middle
that we had in DemoBots?

612
00:25:44,926 --> 00:25:47,236 A:middle
If ReplayKits not even available
on the device, we don't want

613
00:25:47,236 --> 00:25:48,236 A:middle
to show that toggle, right?

614
00:25:49,586 --> 00:25:53,746 A:middle
We query that available property
in RPScreenRecorder and use

615
00:25:53,746 --> 00:25:56,166 A:middle
that to drive the visibility
of the recording toggle button.

616
00:25:57,216 --> 00:26:01,126 A:middle
Simple. All right, next up
is discarding the recording.

617

618
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

619
00:25:57,216 --> 00:26:01,126 A:middle
Simple. All right, next up
is discarding the recording.

620
00:26:02,536 --> 00:26:05,766 A:middle
So ReplayKit automatically
discards the previous recording

621
00:26:05,766 --> 00:26:06,886 A:middle
when a new recording starts.

622
00:26:08,076 --> 00:26:10,056 A:middle
So currently there can
only be one recording

623
00:26:10,126 --> 00:26:11,766 A:middle
at a time per application.

624
00:26:13,026 --> 00:26:14,696 A:middle
But there are cases
where you know

625
00:26:14,696 --> 00:26:17,366 A:middle
that the user no longer will
have access to the preview UI.

626
00:26:18,656 --> 00:26:20,306 A:middle
So you probably want
to discard it earlier.

627
00:26:20,816 --> 00:26:25,526 A:middle
So in our example with DemoBots,
if the user transitions

628
00:26:25,526 --> 00:26:27,616 A:middle
from the level end scene,
you know they're not going

629
00:26:27,616 --> 00:26:29,096 A:middle
to be able to preview
the video anymore

630
00:26:29,326 --> 00:26:30,346 A:middle
so you should probably
discard it.

631
00:26:31,446 --> 00:26:34,236 A:middle
To do that in code, in
our particular example,

632
00:26:34,576 --> 00:26:36,356 A:middle
and I will transition to
the next level scene --

633
00:26:36,546 --> 00:26:40,616 A:middle
next method, we simply call
discard recording with handler

634
00:26:41,246 --> 00:26:44,856 A:middle
and once that returns, we
transition to the next level.

635
00:26:45,386 --> 00:26:49,416 A:middle
Next up is recording indicators.

636
00:26:50,896 --> 00:26:53,676 A:middle
So when ReplayKit is
recording, you probably want

637
00:26:53,676 --> 00:26:57,146 A:middle
to notify the user that
recording is happening and also

638
00:26:57,346 --> 00:26:58,966 A:middle
if voice commentary
is on or off.

639

640
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

641
00:27:00,486 --> 00:27:03,576 A:middle
So to implement this, you can
simply query the recording

642
00:27:03,576 --> 00:27:06,206 A:middle
and the microphone enable
properties in RPScreenRecorder

643
00:27:07,216 --> 00:27:09,836 A:middle
and use the values of those
to toggle the visibility

644
00:27:10,066 --> 00:27:11,216 A:middle
of your recording indicators.

645
00:27:12,256 --> 00:27:13,246 A:middle
Again, pretty straightforward.

646
00:27:13,866 --> 00:27:16,936 A:middle
So next up is excluding UI.

647
00:27:17,926 --> 00:27:22,326 A:middle
So there's certain elements in
a game that are really useful

648
00:27:22,326 --> 00:27:25,056 A:middle
for users, but pretty
uninteresting

649
00:27:25,056 --> 00:27:25,926 A:middle
to spectators, right?

650
00:27:26,456 --> 00:27:27,676 A:middle
We just talked about
one of those.

651
00:27:27,676 --> 00:27:28,636 A:middle
Recording indicators.

652
00:27:28,636 --> 00:27:31,576 A:middle
They are great for the user
to know, but for a spectator,

653
00:27:31,666 --> 00:27:32,376 A:middle
they are pretty useless.

654
00:27:32,666 --> 00:27:35,876 A:middle
They know that the recording
is on and voice commentary is

655
00:27:35,876 --> 00:27:37,216 A:middle
on because they are
watching the video, right?

656
00:27:37,336 --> 00:27:40,666 A:middle
So you probably want
to exclude those.

657
00:27:41,126 --> 00:27:43,296 A:middle
A couple more examples
of virtual controls

658
00:27:43,706 --> 00:27:44,946 A:middle
and pause and menu buttons.

659
00:27:45,786 --> 00:27:47,356 A:middle
These may clutter
up the recordings

660
00:27:47,636 --> 00:27:49,156 A:middle
and not be necessary
for spectators.

661
00:27:49,496 --> 00:27:52,606 A:middle
How do you exclude UI
from the ReplayKit?

662
00:27:53,786 --> 00:27:58,186 A:middle
So ReplayKit only records your
applications main UI window.

663
00:27:58,746 --> 00:28:03,566 A:middle
If you want to exclude any UI,
you simply create a new instance

664

665
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

666
00:27:58,746 --> 00:28:03,566 A:middle
If you want to exclude any UI,
you simply create a new instance

667
00:28:03,566 --> 00:28:07,586 A:middle
of UI window and place any
elements you want hidden

668
00:28:08,116 --> 00:28:09,506 A:middle
in that new instance.

669
00:28:10,756 --> 00:28:11,866 A:middle
That's excluding UI.

670
00:28:12,586 --> 00:28:16,656 A:middle
Next up is choosing
when to record.

671
00:28:17,326 --> 00:28:20,036 A:middle
So if you remember in DemoBots,

672
00:28:20,316 --> 00:28:24,086 A:middle
we know that DemoBots has short
game play sessions lasting only

673
00:28:24,086 --> 00:28:24,836 A:middle
two or three minutes.

674
00:28:26,066 --> 00:28:27,956 A:middle
So we went for an
automatic recording strategy

675
00:28:27,956 --> 00:28:30,066 A:middle
where we automatically
record each game level.

676
00:28:30,666 --> 00:28:33,286 A:middle
But some games are
different, right?

677
00:28:34,586 --> 00:28:37,816 A:middle
For example, in RPG, there's
longer gameplay sessions,

678
00:28:38,326 --> 00:28:40,256 A:middle
it might have more spread
out interesting events,

679
00:28:40,636 --> 00:28:43,296 A:middle
but it really doesn't make sense
to record the entire session.

680
00:28:43,626 --> 00:28:46,036 A:middle
Instead you should give the
user the ability to start

681
00:28:46,036 --> 00:28:47,256 A:middle
and stop recording at will.

682
00:28:48,596 --> 00:28:51,646 A:middle
To do this, you simply build
your own recording controls

683
00:28:52,416 --> 00:28:55,836 A:middle
that allow users to do that.

684
00:28:56,046 --> 00:28:57,426 A:middle
Again, all games are different.

685
00:28:58,136 --> 00:28:59,816 A:middle
So you should just
choose what is appropriate

686
00:28:59,816 --> 00:29:02,086 A:middle
for your particular game type.

687

688
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

689
00:28:59,816 --> 00:29:02,086 A:middle
for your particular game type.

690
00:29:03,916 --> 00:29:06,256 A:middle
All right, so that actually
concludes the fine tuning

691
00:29:06,256 --> 00:29:07,016 A:middle
session as well.

692
00:29:07,016 --> 00:29:10,486 A:middle
So we went over how to
verify availability,

693
00:29:11,036 --> 00:29:13,956 A:middle
how to discard the recording,
how to show the indicator,

694
00:29:14,606 --> 00:29:17,776 A:middle
how to exclude any UI, and also
choosing the best recording

695
00:29:17,776 --> 00:29:18,776 A:middle
strategy for your game.

696
00:29:19,396 --> 00:29:23,376 A:middle
Now, we would like
to show you a demo.

697
00:29:24,586 --> 00:29:28,116 A:middle
So a couple of weeks ago,
we invited Spacetime Studios

698
00:29:28,116 --> 00:29:31,906 A:middle
over to Cupertino to check out
ReplayKit and try to adopt it

699
00:29:32,436 --> 00:29:34,196 A:middle
into the upcoming game,
Call of Champions.

700
00:29:34,876 --> 00:29:37,436 A:middle
So I'd like to welcome
up on stage Cinco Barnes

701
00:29:37,436 --> 00:29:41,026 A:middle
from Spacetime Studios to
share his experiences with us.

702
00:29:41,066 --> 00:29:41,946 A:middle
Please welcome Cinco.

703
00:29:42,516 --> 00:29:45,316 A:middle
[Applause]

704
00:29:45,816 --> 00:29:46,556 A:middle
>> CINCO BARNES: Thanks, Edwin.

705
00:29:47,386 --> 00:29:48,396 A:middle
I'm Cinco Barnes.

706
00:29:48,716 --> 00:29:53,296 A:middle
I founded Spacetime Studios
with my partners back in 2005.

707
00:29:53,816 --> 00:29:59,976 A:middle
Our purpose was to make
hard core PC games but all

708
00:29:59,976 --> 00:30:04,006 A:middle
of that went out of the
window in 2009 with iOS

709

710
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

711
00:29:59,976 --> 00:30:04,006 A:middle
of that went out of the
window in 2009 with iOS

712
00:30:04,006 --> 00:30:07,776 A:middle
and the first iPad and our
release of Pocket Legends.

713
00:30:08,126 --> 00:30:10,266 A:middle
Since then we have been
dedicated to the iOS platform

714
00:30:10,266 --> 00:30:12,166 A:middle
for gaming and it's
been fantastic.

715
00:30:12,646 --> 00:30:15,836 A:middle
Today I get to talk to you
about Call of Champions

716
00:30:15,836 --> 00:30:18,006 A:middle
as a case for ReplayKit.

717
00:30:18,006 --> 00:30:18,996 A:middle
I definitely want to talk to you

718
00:30:18,996 --> 00:30:20,876 A:middle
about how it affects
the game itself

719
00:30:21,166 --> 00:30:25,566 A:middle
but the big message is how this
builds community, specifically

720
00:30:25,566 --> 00:30:28,646 A:middle
for us as a community
of gamers, active gamers

721
00:30:28,646 --> 00:30:29,486 A:middle
into something like this.

722
00:30:29,896 --> 00:30:31,356 A:middle
I want to give you a
little bit of history

723
00:30:31,356 --> 00:30:33,016 A:middle
on who we are in some context.

724
00:30:33,316 --> 00:30:37,626 A:middle
Spacetime Studios has always
endeavored to take core games,

725
00:30:37,626 --> 00:30:43,286 A:middle
distill them and adapt them into
our mobile gaming lifestyle.

726
00:30:43,686 --> 00:30:46,366 A:middle
It's the way that we
found our voice in trying

727
00:30:46,366 --> 00:30:49,376 A:middle
to provide things that are
both immediately accessible

728
00:30:49,686 --> 00:30:51,886 A:middle
and things that are
strategically rich.

729
00:30:52,356 --> 00:30:55,686 A:middle
And our next product here
is Call of Champions.

730
00:30:56,196 --> 00:30:59,296 A:middle
Call of Champions is
a mobile battle arena.

731
00:30:59,636 --> 00:31:01,926 A:middle
It's a three-on-three team game,

732

733
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

734
00:30:59,636 --> 00:31:01,926 A:middle
It's a three-on-three team game,

735
00:31:02,206 --> 00:31:05,326 A:middle
its got a neat Rugby-inspired
lane mechanic,

736
00:31:05,576 --> 00:31:07,866 A:middle
it's got shooter style
power ups in the middle.

737
00:31:08,266 --> 00:31:12,276 A:middle
The main thing is it's squeezed
into a five-minute segment

738
00:31:12,276 --> 00:31:15,086 A:middle
like a mixed martial arts fight.

739
00:31:15,086 --> 00:31:19,166 A:middle
We worked really hard to load
those five minutes with all

740
00:31:19,166 --> 00:31:22,166 A:middle
of the different choices and
all the different strategies

741
00:31:22,166 --> 00:31:25,026 A:middle
that we know that our
audience loves to play.

742
00:31:25,026 --> 00:31:29,626 A:middle
But we also know that the
audience that's attracted

743
00:31:29,626 --> 00:31:33,386 A:middle
to these kinds of games
doesn't just enjoy playing them.

744
00:31:33,956 --> 00:31:36,176 A:middle
They love to watch them.

745
00:31:36,176 --> 00:31:37,946 A:middle
They love to watch live games.

746
00:31:37,946 --> 00:31:41,756 A:middle
One of the things that we did
also was include a spectator

747
00:31:41,756 --> 00:31:43,246 A:middle
mode for watching just that,

748
00:31:43,246 --> 00:31:45,516 A:middle
live games anywhere
around the world.

749
00:31:45,816 --> 00:31:48,696 A:middle
And on its own this
satisfies our side of it.

750
00:31:49,046 --> 00:31:53,386 A:middle
But then we also know how
people would love to record

751
00:31:53,386 --> 00:31:56,476 A:middle
and share this as part
of the energy of creating

752
00:31:56,616 --> 00:32:00,076 A:middle
that community of gamers and
that's where ReplayKit comes in.

753

754
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

755
00:31:56,616 --> 00:32:00,076 A:middle
that community of gamers and
that's where ReplayKit comes in.

756
00:32:01,126 --> 00:32:04,276 A:middle
Here's an example of a replay
that I'm sharing with you.

757
00:32:04,906 --> 00:32:06,566 A:middle
As a designer of
a game like this,

758
00:32:06,616 --> 00:32:09,656 A:middle
I've got some top
level programmers

759
00:32:09,706 --> 00:32:12,106 A:middle
that are beating the heck
out of me and my partners

760
00:32:12,406 --> 00:32:15,506 A:middle
and I really want to show
off the features that we have

761
00:32:15,506 --> 00:32:18,006 A:middle
in spectator and
replays allows me to do

762
00:32:18,006 --> 00:32:19,426 A:middle
that here in this context.

763
00:32:19,826 --> 00:32:22,316 A:middle
There's tons of cool stuff
going on inside of this

764
00:32:22,716 --> 00:32:26,286 A:middle
but the addition of my
commentary and the presentation

765
00:32:26,286 --> 00:32:29,506 A:middle
of this in a shared environment
is really what ReplayKit is

766
00:32:29,556 --> 00:32:30,086 A:middle
all about.

767
00:32:30,086 --> 00:32:35,696 A:middle
I mean, we see how this works
really well for a game like Call

768
00:32:35,696 --> 00:32:39,706 A:middle
of Champions, but it's our
position that it would work

769
00:32:39,706 --> 00:32:44,346 A:middle
for anyone who is actively
trying to foster a community

770
00:32:44,556 --> 00:32:47,586 A:middle
in today's media-rich market.

771
00:32:48,486 --> 00:32:50,096 A:middle
That's an excellent
shot right there.

772
00:32:50,096 --> 00:32:52,726 A:middle
A skill shot, by the way
and a professional gamer,

773
00:32:53,436 --> 00:32:55,556 A:middle
killing my partner by
setting him on fire.

774
00:32:55,786 --> 00:32:58,206 A:middle
And capturing these moments
and being able to share them

775
00:32:58,206 --> 00:33:00,306 A:middle
from the tail end of a
game that was important

776

777
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

778
00:32:58,206 --> 00:33:00,306 A:middle
from the tail end of a
game that was important

779
00:33:00,346 --> 00:33:03,526 A:middle
to me is exactly the
spirit of all of this.

780
00:33:04,076 --> 00:33:06,806 A:middle
So when I think about ReplayKit,

781
00:33:06,946 --> 00:33:11,516 A:middle
I see it as a crazy powerful
means to address this community

782
00:33:11,726 --> 00:33:13,986 A:middle
and to embrace the fact
that we are all playing,

783
00:33:13,986 --> 00:33:17,006 A:middle
we are all sharing and being
able to bring this stuff

784
00:33:17,256 --> 00:33:22,006 A:middle
to a game like Call of Champions
was really easy for us.

785
00:33:22,006 --> 00:33:24,686 A:middle
The implementation took us,
well we have one guy, Rick,

786
00:33:24,686 --> 00:33:26,096 A:middle
and he did it in a day.

787
00:33:26,226 --> 00:33:27,226 A:middle
So no excuses.

788
00:33:27,226 --> 00:33:29,126 A:middle
It's spectacular!

789
00:33:29,376 --> 00:33:31,286 A:middle
That's what I have
to say about it.

790
00:33:31,796 --> 00:33:32,996 A:middle
Thank you very much
for your time.

791
00:33:32,996 --> 00:33:33,976 A:middle
Edwin, I'm taking
it back to you.

792
00:33:34,171 --> 00:33:36,171 A:middle
[Applause]

793
00:33:36,326 --> 00:33:37,116 A:middle
>> EDWIN ISKANDAR:
Thank you, Cinco.

794
00:33:37,256 --> 00:33:39,576 A:middle
That was awesome.

795
00:33:39,576 --> 00:33:41,366 A:middle
So unfortunately that
concludes our session,

796
00:33:41,366 --> 00:33:42,726 A:middle
what's new in social gaming.

797
00:33:42,996 --> 00:33:46,276 A:middle
Just to recap, Megan talked
to us about the changes made

798
00:33:46,276 --> 00:33:49,116 A:middle
at Game Center, like adding
guest players which allow

799
00:33:49,116 --> 00:33:51,596 A:middle
for new player configuration
and Game Center multiplayer.

800
00:33:52,436 --> 00:33:54,546 A:middle
She also talked about how
we streamline development,

801
00:33:54,546 --> 00:33:56,536 A:middle
and testing of Game Center games

802
00:33:56,726 --> 00:33:59,126 A:middle
by unifying the server
environments and removing

803
00:33:59,126 --> 00:34:00,236 A:middle
that Game Center Sandbox.

804

805
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

806
00:33:59,126 --> 00:34:00,236 A:middle
that Game Center Sandbox.

807
00:34:01,406 --> 00:34:04,266 A:middle
And we introduced ReplayKit,
a whole new way to add social

808
00:34:04,266 --> 00:34:07,576 A:middle
into your games and it allows
you to record audio and visuals

809
00:34:07,576 --> 00:34:09,846 A:middle
in your running application
and it does it efficiently

810
00:34:09,846 --> 00:34:11,696 A:middle
and it has privacy
safeguards for the users.

811
00:34:12,545 --> 00:34:15,065 A:middle
As you have seen, it's an
incredibly compact framework

812
00:34:15,065 --> 00:34:17,085 A:middle
and has incredibly
simple adoption.

813
00:34:18,846 --> 00:34:22,275 A:middle
For more information, go to
developer.Apple.com and refer

814
00:34:22,275 --> 00:34:25,696 A:middle
to the documentation or
contact Alan Schaffer our game

815
00:34:25,696 --> 00:34:27,136 A:middle
technologies evangelist.

816
00:34:28,126 --> 00:34:31,585 A:middle
I urge you to download the iOS
9 data, check out ReplayKit,

817
00:34:31,676 --> 00:34:33,466 A:middle
get it into your games,
bring them to the labs

818
00:34:33,466 --> 00:34:35,755 A:middle
and show us what you've got.

819
00:34:35,896 --> 00:34:36,775 A:middle
That's it for me.

820
00:34:36,846 --> 00:34:38,045 A:middle
Thank you so much for attending.

821
00:34:38,045 --> 00:34:41,366 A:middle
I hope you enjoy the rest
of your WWDC experience.

822
00:34:41,775 --> 00:34:41,976 A:middle
Thank you.

823
00:34:42,507 --> 00:34:44,507 A:middle
[Applause]

824
