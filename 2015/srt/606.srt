X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1
00:00:24,516 --> 00:00:29,826 A:middle
[Applause]

2
00:00:30,326 --> 00:00:30,816 A:middle
>> Thank you.

3
00:00:31,656 --> 00:00:33,176 A:middle
So good afternoon, and welcome

4
00:00:33,176 --> 00:00:35,586 A:middle
to the enhancements
to SceneKit session.

5
00:00:35,886 --> 00:00:37,896 A:middle
My name is Thomas Goossens.

6
00:00:37,896 --> 00:00:43,096 A:middle
If you don't already know what
SceneKit is, here is an overview

7
00:00:43,176 --> 00:00:46,156 A:middle
of the different
frameworks on iOS 10.

8
00:00:46,996 --> 00:00:50,296 A:middle
SceneKit and SpriteKit
are the high-level APIs.

9
00:00:51,366 --> 00:00:53,926 A:middle
SpriteKit for 2D
and SceneKit for 3D.

10
00:00:54,656 --> 00:00:57,986 A:middle
You can use them with other game
technologies like Model I/O,

11
00:00:58,396 --> 00:01:02,706 A:middle
GameplayKit, and GameController,
and give you access

12

13
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

14
00:00:58,396 --> 00:01:02,706 A:middle
GameplayKit, and GameController,
and give you access

15
00:01:02,706 --> 00:01:07,236 A:middle
to the low-level APIs,
which are OpenGL and Metal.

16
00:01:07,786 --> 00:01:12,476 A:middle
SceneKit was introduced
on OS X on Mountain Lion

17
00:01:12,886 --> 00:01:15,476 A:middle
and last year on iOS in iOS 8.

18
00:01:17,216 --> 00:01:21,616 A:middle
Last year, we added a few
new features to SceneKit

19
00:01:21,836 --> 00:01:25,306 A:middle
to make it ready for casual
games, like particle systems,

20
00:01:25,836 --> 00:01:29,276 A:middle
physics, force fields, and the
integration with SpriteKit,

21
00:01:29,606 --> 00:01:32,026 A:middle
for example, for all
the 2D game overlays.

22
00:01:34,036 --> 00:01:36,506 A:middle
This year, the two
main additions

23
00:01:36,506 --> 00:01:38,786 A:middle
to SceneKit are the
transition to Metal

24
00:01:38,786 --> 00:01:40,796 A:middle
and the new Scene Editor.

25
00:01:40,896 --> 00:01:43,866 A:middle
In this presentation
we will start

26
00:01:43,866 --> 00:01:45,726 A:middle
by showing you the
new Scene Editor,

27
00:01:46,226 --> 00:01:48,806 A:middle
then explain why we are
transitioning to Metal

28
00:01:48,806 --> 00:01:51,146 A:middle
and what it means for
you in terms of adoption.

29
00:01:51,876 --> 00:01:55,236 A:middle
And we will finish by presenting
a few new features that we added

30
00:01:55,236 --> 00:01:56,456 A:middle
to the engine this year.

31
00:01:56,616 --> 00:01:57,326 A:middle
All right.

32
00:01:57,956 --> 00:02:00,076 A:middle
The new Scene Editor.

33

34
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

35
00:01:57,956 --> 00:02:00,076 A:middle
The new Scene Editor.

36
00:02:00,816 --> 00:02:06,696 A:middle
It is available in Xcode 7,
so we can run it in El Capitan

37
00:02:07,176 --> 00:02:10,916 A:middle
or Yosemite, and it is
available in the force field.

38
00:02:12,266 --> 00:02:18,816 A:middle
To open it, simply open a 3D
file with SceneKit, for example,

39
00:02:18,816 --> 00:02:26,586 A:middle
DAE, OBJ, olympic, or you can
create using template chooser.

40
00:02:27,476 --> 00:02:32,186 A:middle
In that case, it will create
a new empty SceneKit document

41
00:02:32,696 --> 00:02:34,606 A:middle
with the extension .scn,

42
00:02:35,966 --> 00:02:41,436 A:middle
and an scn file is simply an
scn scene instance archived

43
00:02:41,466 --> 00:02:42,916 A:middle
with an archiver.

44
00:02:44,006 --> 00:02:46,996 A:middle
That means that you can produce
your own SceneKit document

45
00:02:47,476 --> 00:02:50,226 A:middle
programmatically if you
want, and this is very handy

46
00:02:50,226 --> 00:02:51,316 A:middle
for the production flow.

47
00:02:51,846 --> 00:02:55,676 A:middle
Then the main goal of
the Scene Editor is

48
00:02:55,726 --> 00:02:57,986 A:middle
to let you build the
levels of your game.

49
00:02:58,546 --> 00:03:01,956 A:middle
You will see that it's really
easy to combine multiple assets

50

51
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

52
00:02:58,546 --> 00:03:01,956 A:middle
You will see that it's really
easy to combine multiple assets

53
00:03:01,956 --> 00:03:04,206 A:middle
from different files
into a single scene

54
00:03:04,406 --> 00:03:08,216 A:middle
by keeping references
to the original assets.

55
00:03:09,416 --> 00:03:13,496 A:middle
The Scene Editor also includes
some visual editors for some

56
00:03:13,496 --> 00:03:16,046 A:middle
of the key features of
SceneKit, for example,

57
00:03:16,046 --> 00:03:20,336 A:middle
to let you configure particle
systems live in a 3D scene,

58
00:03:21,356 --> 00:03:25,546 A:middle
configure your physics, inspect
and configure the physics shapes

59
00:03:25,546 --> 00:03:28,176 A:middle
of your objects, and preview
a simulation for example,

60
00:03:29,266 --> 00:03:33,156 A:middle
sensing for force fields, and
it includes an action editor

61
00:03:33,156 --> 00:03:35,166 A:middle
to let you build
action sequences

62
00:03:35,466 --> 00:03:36,846 A:middle
with a graphic user interface.

63
00:03:38,236 --> 00:03:40,866 A:middle
Scene Editor also includes
some more advanced features,

64
00:03:40,866 --> 00:03:42,226 A:middle
for example, if you want

65
00:03:42,326 --> 00:03:45,726 A:middle
to editor your shared
modifiers live in your scene,

66
00:03:46,546 --> 00:03:49,296 A:middle
and some baking tools,
for example,

67
00:03:49,296 --> 00:03:52,226 A:middle
to bake ambient occlusion,
and for this please refer

68
00:03:52,226 --> 00:03:56,906 A:middle
to the Model IO session for
more information about this.

69
00:03:57,326 --> 00:03:59,866 A:middle
Okay. But nothing better
than a demo to show you this,

70

71
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

72
00:04:00,256 --> 00:04:03,616 A:middle
so let me bring Amaury on stage
for presentation of Xcode 7.

73
00:04:03,616 --> 00:04:03,896 A:middle
Thank you.

74
00:04:04,516 --> 00:04:10,206 A:middle
[Applause]

75
00:04:10,706 --> 00:04:11,076 A:middle
>> AMAURY BALLIET: Hello.

76
00:04:11,346 --> 00:04:13,656 A:middle
My name is Amaury, and
I am a software engineer

77
00:04:13,876 --> 00:04:14,736 A:middle
with the SceneKit team.

78
00:04:15,346 --> 00:04:18,906 A:middle
We dramatically improved the
SceneKit editor in Xcode 7,

79
00:04:19,505 --> 00:04:22,096 A:middle
and with its new
editing capabilities,

80
00:04:22,196 --> 00:04:24,566 A:middle
it's now really easy to
build scenes from the ground

81
00:04:24,566 --> 00:04:28,526 A:middle
up in a visual and
interactive manner.

82
00:04:28,586 --> 00:04:33,996 A:middle
Later on in the session, I will
show you how we used SceneKit

83
00:04:33,996 --> 00:04:38,336 A:middle
in editor to build Red
Panda, the puzzle game,

84
00:04:38,336 --> 00:04:41,516 A:middle
but right now we will start
with something more simple,

85
00:04:42,116 --> 00:04:45,166 A:middle
a small game of physical
scale, which consists

86
00:04:45,166 --> 00:04:48,506 A:middle
of building a tower of blocks
that will eventually collapse

87
00:04:48,666 --> 00:04:54,866 A:middle
as we remove blocks from it.

88
00:04:55,176 --> 00:04:58,446 A:middle
So what you see here is a
SceneKit Scene Editor showing an

89
00:04:58,446 --> 00:04:59,006 A:middle
empty scene.

90

91
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

92
00:05:00,056 --> 00:05:03,536 A:middle
On the right side, you have
the usually utility area,

93
00:05:03,716 --> 00:05:06,116 A:middle
with its inspectors
and libraries.

94
00:05:07,196 --> 00:05:10,106 A:middle
In the object library, you can
find many SceneKit objects,

95
00:05:10,666 --> 00:05:17,666 A:middle
such as modes, lights,
cameras, parametric geometries,

96
00:05:18,176 --> 00:05:19,936 A:middle
as well as physics fields.

97
00:05:20,406 --> 00:05:24,856 A:middle
Now, for our wooden block, we
use a simple box geometric.

98
00:05:26,776 --> 00:05:32,376 A:middle
To customize its appearance,
I can drop and imagine it.

99
00:05:33,906 --> 00:05:36,456 A:middle
Okay. So now just like
in Interface Builder,

100
00:05:36,956 --> 00:05:39,656 A:middle
inspectors as well can
edit all the properties

101
00:05:39,656 --> 00:05:40,646 A:middle
of your 3D objects.

102
00:05:41,386 --> 00:05:45,136 A:middle
For instance, in the attributes
inspector, I can change the size

103
00:05:45,136 --> 00:05:49,746 A:middle
of my geometry to
be 2 by 1 by 6.

104
00:05:50,316 --> 00:05:54,916 A:middle
And to center it in the scene,
I can use the node inspector

105
00:05:55,896 --> 00:05:58,426 A:middle
and set its position to zero.

106
00:05:59,626 --> 00:06:01,706 A:middle
But actually, there is a
more simple way to do that.

107

108
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

109
00:05:59,626 --> 00:06:01,706 A:middle
But actually, there is a
more simple way to do that.

110
00:06:03,106 --> 00:06:04,626 A:middle
Using the 3D manipulator,

111
00:06:04,816 --> 00:06:08,996 A:middle
I can freely move the
object in the scene.

112
00:06:09,226 --> 00:06:11,966 A:middle
Okay. So now that our wooden
block is ready, we will use it

113
00:06:11,966 --> 00:06:14,406 A:middle
as a template to
build other blocks.

114
00:06:15,696 --> 00:06:19,196 A:middle
Using the 3D manipulator,
I can easily make copies

115
00:06:19,516 --> 00:06:21,146 A:middle
by holding the alt key.

116
00:06:22,456 --> 00:06:29,746 A:middle
I can repeat the
operation, make a selection,

117
00:06:30,236 --> 00:06:36,046 A:middle
duplicate that selection,
rotate it, make a new selection,

118
00:06:37,116 --> 00:06:43,446 A:middle
repeat the operation, and one
last time to finish the tower.

119
00:06:43,656 --> 00:06:47,996 A:middle
Okay. We are now ready to use
the physics engine that's built

120
00:06:47,996 --> 00:06:50,516 A:middle
into SceneKit to make the
scene more interesting.

121
00:06:51,586 --> 00:06:53,386 A:middle
I will simply select
all the objects,

122
00:06:54,336 --> 00:06:56,666 A:middle
head to the physics inspector,

123
00:06:57,736 --> 00:07:00,546 A:middle
and add a dynamic
body to each block.

124

125
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

126
00:06:57,736 --> 00:07:00,546 A:middle
and add a dynamic
body to each block.

127
00:07:01,916 --> 00:07:04,646 A:middle
We are now ready to
run the simulation.

128
00:07:05,606 --> 00:07:08,526 A:middle
As you can see, our blocks
are now subject to gravity

129
00:07:08,606 --> 00:07:09,846 A:middle
and fall indefinitely.

130
00:07:10,766 --> 00:07:13,596 A:middle
To prevent that, we will
add a floor to the scene,

131
00:07:14,746 --> 00:07:20,606 A:middle
so I open the objects library,
put a floor, position it,

132
00:07:22,066 --> 00:07:24,986 A:middle
and I need a static body
so that it participates

133
00:07:24,986 --> 00:07:29,336 A:middle
in the simulation but
is not allowed to move.

134
00:07:29,336 --> 00:07:31,756 A:middle
If we run the simulation
again, nothing happens.

135
00:07:32,696 --> 00:07:39,776 A:middle
But as we remove a few
blocks from the tower,

136
00:07:39,996 --> 00:07:43,666 A:middle
we get a fair idea of what
the game could look like.

137
00:07:44,516 --> 00:07:49,366 A:middle
[Applause]

138
00:07:49,866 --> 00:07:50,926 A:middle
One additional thing I would

139
00:07:50,926 --> 00:07:52,726 A:middle
like to show you
is a scene review.

140
00:07:53,196 --> 00:07:54,516 A:middle
You can review the scene review

141
00:07:54,516 --> 00:07:56,276 A:middle
in the lower left
corner of the editor.

142
00:07:57,696 --> 00:08:00,416 A:middle
The scene review is where
you can see all the nodes

143

144
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

145
00:07:57,696 --> 00:08:00,416 A:middle
The scene review is where
you can see all the nodes

146
00:08:00,416 --> 00:08:04,256 A:middle
in your scene, and it is where
you can edit the node hierarchy.

147
00:08:05,116 --> 00:08:09,056 A:middle
For instance, we have our
floor, the many wooden boxes,

148
00:08:09,506 --> 00:08:12,116 A:middle
but we also have a spotlight.

149
00:08:12,116 --> 00:08:14,556 A:middle
I placed this light
in the scene right

150
00:08:14,556 --> 00:08:16,316 A:middle
after I created the project.

151
00:08:17,056 --> 00:08:21,146 A:middle
It is currently hidden and has
no effect, so let's show it.

152
00:08:22,036 --> 00:08:23,776 A:middle
To further improve the lighting,

153
00:08:24,296 --> 00:08:26,276 A:middle
and to avoid these
completely dark areas,

154
00:08:26,796 --> 00:08:29,476 A:middle
I will simply add an
ambient light to the scene.

155
00:08:30,006 --> 00:08:32,946 A:middle
And that's it.

156
00:08:33,346 --> 00:08:36,076 A:middle
Just through the editor,
we built an entire scene

157
00:08:36,155 --> 00:08:40,836 A:middle
with 3D objects, textures,
lighting, and dynamic bodies

158
00:08:41,236 --> 00:08:43,846 A:middle
that could make a nice game
after we implement gestures.

159
00:08:43,846 --> 00:08:49,476 A:middle
So the SceneKit Scene Editor
really allows you to build more

160
00:08:49,476 --> 00:08:53,316 A:middle
of your game up by
writing less code.

161
00:08:53,886 --> 00:08:56,206 A:middle
And there's actually much
more things that you can do

162
00:08:56,206 --> 00:08:59,556 A:middle
with Editor, and to
cover that, let's switch

163
00:08:59,556 --> 00:09:06,146 A:middle
to the Red Panda demo, and
let's see the demo again.

164

165
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

166
00:08:59,556 --> 00:09:06,146 A:middle
to the Red Panda demo, and
let's see the demo again.

167
00:09:06,256 --> 00:09:09,266 A:middle
So Red Panda is a puzzle
game in the 3D world,

168
00:09:09,586 --> 00:09:12,896 A:middle
where you can manipulate
the camera with pan gestures

169
00:09:12,896 --> 00:09:17,156 A:middle
and control the character
on his path.

170
00:09:17,156 --> 00:09:23,206 A:middle
The goal of this game is
to collect these flowers

171
00:09:23,706 --> 00:09:25,776 A:middle
and here is the first one.

172
00:09:25,776 --> 00:09:32,886 A:middle
On his path, Red Panda will
also have to collect items.

173
00:09:32,886 --> 00:09:35,366 A:middle
See how the world is rich and
animated with many details?

174
00:09:35,576 --> 00:09:39,386 A:middle
We have lots of particle
systems and animated vegetation.

175
00:09:39,876 --> 00:09:44,326 A:middle
Now, Red Panda can go
everywhere in the level.

176
00:09:44,476 --> 00:09:47,126 A:middle
For instance, he
can climb hills.

177
00:09:47,126 --> 00:09:54,286 A:middle
But on his path Red Panda will
also have to avoid obstacles.

178
00:09:54,286 --> 00:09:58,276 A:middle
Notice the sound became
louder as we pushed.

179
00:09:58,276 --> 00:10:02,666 A:middle
It's because we used one of
SceneKit new API's 3D audio.

180

181
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

182
00:09:58,276 --> 00:10:02,666 A:middle
It's because we used one of
SceneKit new API's 3D audio.

183
00:10:02,666 --> 00:10:06,646 A:middle
Many of the features
are in play here.

184
00:10:06,646 --> 00:10:08,846 A:middle
We have the physics
engine for navigation

185
00:10:08,846 --> 00:10:09,946 A:middle
and collision detection.

186
00:10:10,266 --> 00:10:12,496 A:middle
Lots of particle systems.

187
00:10:12,496 --> 00:10:15,716 A:middle
And shadow modifiers and actions
help to bring the scene to life.

188
00:10:15,716 --> 00:10:18,726 A:middle
So we just collected
our seventh flower,

189
00:10:18,726 --> 00:10:23,816 A:middle
and by moving the camera, we
can see where objects hide.

190
00:10:23,816 --> 00:10:26,126 A:middle
We have a quick tour
under the arch,

191
00:10:26,126 --> 00:10:30,976 A:middle
and the level is completed.

192
00:10:31,516 --> 00:10:35,306 A:middle
[Music]

193
00:10:35,806 --> 00:10:36,486 A:middle
Thank you, Thomas.

194
00:10:37,516 --> 00:10:42,906 A:middle
[Applause]

195
00:10:43,406 --> 00:10:46,456 A:middle
So we are now going to see how
we built this game using the

196
00:10:46,456 --> 00:10:47,686 A:middle
SceneKit Scene Editor.

197
00:10:53,696 --> 00:10:57,406 A:middle
So this is a starting
point for our game.

198
00:10:57,406 --> 00:10:58,486 A:middle
A quick and easy way

199
00:10:58,626 --> 00:11:02,396 A:middle
to immediately improve your
scene is to add a skybox.

200

201
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

202
00:10:58,626 --> 00:11:02,396 A:middle
to immediately improve your
scene is to add a skybox.

203
00:11:03,046 --> 00:11:09,096 A:middle
A skybox is simply a
collection of six images

204
00:11:09,286 --> 00:11:11,076 A:middle
that represent the environment.

205
00:11:12,096 --> 00:11:15,486 A:middle
After we add a skybox to
the scene, we have a context

206
00:11:15,486 --> 00:11:17,066 A:middle
in which we can build the level.

207
00:11:17,806 --> 00:11:22,276 A:middle
So if we now take a look at
the resources in our project,

208
00:11:22,876 --> 00:11:25,146 A:middle
we can see that our
artist provided us

209
00:11:25,186 --> 00:11:27,636 A:middle
with many building
blocks, and by that I mean

210
00:11:27,636 --> 00:11:34,326 A:middle
that we have separate files for
the bamboos, for the flowers

211
00:11:35,096 --> 00:11:38,306 A:middle
to collect, for the
pearls to collect,

212
00:11:38,306 --> 00:11:40,156 A:middle
as well as the many
structural elements.

213
00:11:41,426 --> 00:11:45,506 A:middle
So now how do you use these
external building blocks

214
00:11:45,506 --> 00:11:46,106 A:middle
in your scene?

215
00:11:46,546 --> 00:11:49,976 A:middle
Well, you go to the
scene, and if you drag

216
00:11:49,976 --> 00:11:52,646 A:middle
and drop an external
building block in the scene,

217
00:11:53,226 --> 00:11:55,556 A:middle
you can see that the
reference node has been created

218
00:11:55,736 --> 00:11:57,966 A:middle
as indicated by this
little arrow icon.

219
00:11:59,056 --> 00:12:02,976 A:middle
It is very nice and convenient
to have these external resources

220

221
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

222
00:11:59,056 --> 00:12:02,976 A:middle
It is very nice and convenient
to have these external resources

223
00:12:02,976 --> 00:12:06,886 A:middle
as external files because that
way you can design the level

224
00:12:07,096 --> 00:12:09,926 A:middle
and still have a chance
to save the assets,

225
00:12:10,386 --> 00:12:12,396 A:middle
and you can also
reuse these assets

226
00:12:12,566 --> 00:12:15,066 A:middle
to build other levels
for your game.

227
00:12:15,916 --> 00:12:22,526 A:middle
So as you can see, I've already
included other reference nodes

228
00:12:23,456 --> 00:12:26,066 A:middle
for other industrial elements.

229
00:12:26,066 --> 00:12:30,706 A:middle
So this is how you
typically build a level.

230
00:12:31,146 --> 00:12:33,686 A:middle
You would add your
building blocks one

231
00:12:34,046 --> 00:12:36,656 A:middle
after the other and iterate.

232
00:12:36,656 --> 00:12:43,246 A:middle
You would do the same thing
for the flowers to collect.

233
00:12:43,376 --> 00:12:43,986 A:middle
The pearls.

234
00:12:43,986 --> 00:12:46,546 A:middle
And finally, the vegetation.

235
00:12:47,186 --> 00:12:51,836 A:middle
So here you can see
how far we went

236
00:12:52,426 --> 00:12:54,036 A:middle
with just a simple operation.

237
00:12:55,616 --> 00:12:58,196 A:middle
So as you remember,
our scene is rich

238
00:12:58,196 --> 00:12:59,856 A:middle
and animated with many details.

239

240
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

241
00:13:00,096 --> 00:13:01,646 A:middle
We have a lot of
particle systems,

242
00:13:02,846 --> 00:13:05,206 A:middle
but we also have
animated vegetation.

243
00:13:05,876 --> 00:13:09,086 A:middle
Many were animated with skimming

244
00:13:09,346 --> 00:13:12,236 A:middle
which is a fairly Complicated
animation technique that has

245
00:13:12,236 --> 00:13:14,806 A:middle
to be done in a special tool.

246
00:13:15,316 --> 00:13:17,956 A:middle
But for we use shadow modifiers.

247
00:13:18,946 --> 00:13:22,856 A:middle
Actually, there is one last
element to animate here

248
00:13:23,566 --> 00:13:24,726 A:middle
in the small waterfall.

249
00:13:25,326 --> 00:13:31,316 A:middle
So to do that, I will open
the scene for our waterfall,

250
00:13:31,776 --> 00:13:33,956 A:middle
and the SceneKit's
editor now allows you

251
00:13:34,536 --> 00:13:38,676 A:middle
to add modifiers right into this
scene for immediate feedback

252
00:13:39,466 --> 00:13:40,866 A:middle
and live compilation issues.

253
00:13:42,456 --> 00:13:44,726 A:middle
You can add and edit
each of the modifiers

254
00:13:45,006 --> 00:13:46,306 A:middle
in the assistant editor.

255
00:13:47,616 --> 00:13:50,926 A:middle
So here I select the
waterfall and choose

256
00:13:50,926 --> 00:13:52,406 A:middle
to add a geometry modifier.

257
00:13:52,596 --> 00:13:59,426 A:middle
I add the modifier, and you
can immediately see its effect.

258

259
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

260
00:14:00,706 --> 00:14:03,056 A:middle
You can play with your
shadow modifier and try

261
00:14:03,056 --> 00:14:05,396 A:middle
to tweak the final rendering.

262
00:14:05,666 --> 00:14:09,246 A:middle
You can try to find what
the final modifiers are.

263
00:14:10,706 --> 00:14:12,116 A:middle
Once you are happy
with your scene,

264
00:14:13,456 --> 00:14:17,286 A:middle
you close the assistant editor
and go back to your main level.

265
00:14:17,916 --> 00:14:22,636 A:middle
As you can see, our
mountain is now animated.

266
00:14:23,336 --> 00:14:26,826 A:middle
This is because we
used reference nodes,

267
00:14:27,226 --> 00:14:29,586 A:middle
and when you edit assets,

268
00:14:29,886 --> 00:14:32,166 A:middle
they are automatically
reflected in the scene.

269
00:14:33,316 --> 00:14:36,086 A:middle
One last thing we
want to do here is

270
00:14:36,086 --> 00:14:37,526 A:middle
to add an enemy in the scene.

271
00:14:39,566 --> 00:14:41,476 A:middle
So this is a scene
for our enemy.

272
00:14:42,316 --> 00:14:44,426 A:middle
As you can see, it is static.

273
00:14:44,736 --> 00:14:45,606 A:middle
It has no behavior.

274
00:14:45,606 --> 00:14:49,846 A:middle
To add the behavior,
we will use actions.

275
00:14:50,686 --> 00:14:52,916 A:middle
The Scene Editor now
allows you to add

276
00:14:53,446 --> 00:14:55,386 A:middle
and edit actions
right in the scene.

277
00:14:56,736 --> 00:14:58,486 A:middle
So this is the action editor.

278
00:14:59,256 --> 00:15:00,446 A:middle
I will select my enemy.

279

280
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

281
00:14:59,256 --> 00:15:00,446 A:middle
I will select my enemy.

282
00:15:00,446 --> 00:15:03,656 A:middle
Choose a row detection.

283
00:15:04,316 --> 00:15:11,176 A:middle
Add it. Set it to
rotate along the Y axis.

284
00:15:12,636 --> 00:15:14,646 A:middle
And make it repeat forever.

285
00:15:15,286 --> 00:15:20,496 A:middle
So this is a simple behavior
that we have for our enemy,

286
00:15:21,326 --> 00:15:25,176 A:middle
but the action editor allows you
to build some complex scenarios,

287
00:15:25,416 --> 00:15:27,686 A:middle
and for more information
about that, I invite you

288
00:15:27,686 --> 00:15:29,566 A:middle
to watch the What's New
in SpriteKit session.

289
00:15:30,976 --> 00:15:36,746 A:middle
We can now go back to our level,
add a reference to our enemy,

290
00:15:38,176 --> 00:15:39,816 A:middle
and our scene is finished.

291
00:15:40,366 --> 00:15:44,216 A:middle
So just -- we just saw
how the editor allows you

292
00:15:44,216 --> 00:15:47,526 A:middle
to build an entire level
from external building blocks

293
00:15:47,886 --> 00:15:49,756 A:middle
and how you can bring
life to the scene

294
00:15:49,756 --> 00:15:51,586 A:middle
with shadow modifiers
and actions.

295
00:15:52,216 --> 00:15:55,206 A:middle
And with that, I hand over
to Thomas, who will talk

296
00:15:55,206 --> 00:15:57,346 A:middle
about the architecture
of the game.

297
00:15:58,201 --> 00:16:00,201 A:middle
[Applause]

298

299
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

300
00:15:58,201 --> 00:16:00,201 A:middle
[Applause]

301
00:16:00,386 --> 00:16:01,606 A:middle
>> THOMAS GOOSSENS: So
yeah, we are very happy

302
00:16:01,836 --> 00:16:04,786 A:middle
to give you this nice
demo as a sample code.

303
00:16:05,546 --> 00:16:07,076 A:middle
It's available on the
developer website.

304
00:16:07,076 --> 00:16:11,016 A:middle
You will see it's very
simple and straightforward.

305
00:16:11,146 --> 00:16:14,606 A:middle
It's about 1,000 items of
code for both iOS and OS X,

306
00:16:14,716 --> 00:16:17,916 A:middle
it includes everything like
the sound, the controls,

307
00:16:18,176 --> 00:16:21,386 A:middle
everything you just saw.

308
00:16:21,636 --> 00:16:24,556 A:middle
So Amaury showed
you what was done

309
00:16:24,556 --> 00:16:26,376 A:middle
in Xcode 7 to build this demo.

310
00:16:26,416 --> 00:16:29,586 A:middle
I will quickly present
the rest, what was done

311
00:16:29,586 --> 00:16:32,476 A:middle
on the inside and the outside.

312
00:16:33,246 --> 00:16:37,186 A:middle
The first thing we did
was to define a direction

313
00:16:37,846 --> 00:16:40,076 A:middle
and a simple game
play for our game.

314
00:16:40,076 --> 00:16:42,086 A:middle
So we started with
our main character.

315
00:16:42,606 --> 00:16:44,706 A:middle
Then we defined the
shape of our level,

316
00:16:44,936 --> 00:16:47,336 A:middle
including where the
collectible items should be

317
00:16:47,616 --> 00:16:48,786 A:middle
and where the enemy should be.

318
00:16:49,766 --> 00:16:53,046 A:middle
And we defined the final
appearance we wanted

319
00:16:53,046 --> 00:16:54,416 A:middle
to achieve using SceneKit.

320
00:16:55,716 --> 00:17:00,836 A:middle
Then the next step was to scope
the 3D models in the 3D tool,

321

322
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

323
00:16:55,716 --> 00:17:00,836 A:middle
Then the next step was to scope
the 3D models in the 3D tool,

324
00:17:02,086 --> 00:17:05,596 A:middle
to paint the different
textures, configure,

325
00:17:05,596 --> 00:17:07,816 A:middle
and animate our character.

326
00:17:08,786 --> 00:17:12,616 A:middle
And the final polish was done
by adding some particles,

327
00:17:12,886 --> 00:17:16,185 A:middle
vegetation, and fog,
and we finished the game

328
00:17:16,185 --> 00:17:20,766 A:middle
by adding some 2D
overlays on top of that.

329
00:17:20,766 --> 00:17:23,506 A:middle
Then the first challenge
on the code side was

330
00:17:23,506 --> 00:17:24,856 A:middle
to manage the collisions.

331
00:17:25,356 --> 00:17:28,076 A:middle
For example, we don't want our
character to cross the walls.

332
00:17:28,966 --> 00:17:32,246 A:middle
To do this with collisions,
we work with collision meshes.

333
00:17:32,246 --> 00:17:37,056 A:middle
A collision mesh is a simplified
version of a rounded mesh

334
00:17:37,616 --> 00:17:41,146 A:middle
that has a similar shape so that
the collision feels consistent

335
00:17:41,146 --> 00:17:42,136 A:middle
with what you see on the screen.

336
00:17:43,366 --> 00:17:45,756 A:middle
It's very important to
work with collision meshes

337
00:17:45,806 --> 00:17:49,206 A:middle
and not the rendered mesh
when you deal with physics

338
00:17:49,206 --> 00:17:51,156 A:middle
and collisions for
performance reasons.

339
00:17:51,206 --> 00:17:56,726 A:middle
And as for the ground, we
want our character to be able

340
00:17:56,726 --> 00:17:58,946 A:middle
to progress everywhere
in the level

341
00:17:59,286 --> 00:18:00,706 A:middle
but always stick on the ground.

342

343
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

344
00:17:59,286 --> 00:18:00,706 A:middle
but always stick on the ground.

345
00:18:01,326 --> 00:18:03,696 A:middle
So we need to know
what is the elevation

346
00:18:03,696 --> 00:18:05,366 A:middle
at any point in the 3D world.

347
00:18:06,616 --> 00:18:08,396 A:middle
For that, there are
several solutions.

348
00:18:08,666 --> 00:18:12,036 A:middle
What we did here was to again
work with the collision meshes.

349
00:18:13,676 --> 00:18:18,956 A:middle
And we do array intersection,
vertical array and meshes,

350
00:18:19,696 --> 00:18:21,446 A:middle
this I was go us an
intersection point,

351
00:18:22,136 --> 00:18:23,796 A:middle
and this is where we
can place our character.

352
00:18:24,816 --> 00:18:27,756 A:middle
Then whe we move the
character with the touchscreen

353
00:18:27,906 --> 00:18:32,186 A:middle
of the keyboard, we simply
move it on the X and Z plane.

354
00:18:33,376 --> 00:18:36,656 A:middle
Then we do a new intersection
where the character is.

355
00:18:37,896 --> 00:18:40,726 A:middle
This gives us a new intersection
point, and we use that point

356
00:18:40,726 --> 00:18:43,426 A:middle
to adjust the Y position
of our character.

357
00:18:44,296 --> 00:18:48,086 A:middle
We redo that at every frame,
and this is how simple it is

358
00:18:48,086 --> 00:18:51,946 A:middle
to animate our character
in the game.

359
00:18:52,816 --> 00:18:53,686 A:middle
Then animations.

360
00:18:54,276 --> 00:18:56,236 A:middle
There are several animated
elements in the game.

361
00:18:56,936 --> 00:19:01,186 A:middle
The character is animated
when it is idle or working.

362

363
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

364
00:18:56,936 --> 00:19:01,186 A:middle
The character is animated
when it is idle or working.

365
00:19:02,506 --> 00:19:04,596 A:middle
The grass and the
bamboos are animated

366
00:19:04,596 --> 00:19:06,336 A:middle
to simulate wind effect.

367
00:19:07,026 --> 00:19:09,696 A:middle
And as a nice side effect, you
can see that the shadows casted

368
00:19:09,696 --> 00:19:12,956 A:middle
by the bamboos are also
automatically animated.

369
00:19:13,596 --> 00:19:15,546 A:middle
And all these animations
are important

370
00:19:16,066 --> 00:19:18,936 A:middle
because they contribute
making your game more live.

371
00:19:20,346 --> 00:19:23,626 A:middle
And technically, the character

372
00:19:23,626 --> 00:19:26,036 A:middle
and the bamboos are
animated using skinning.

373
00:19:26,186 --> 00:19:30,456 A:middle
So the artist already built
the skeleton and the animations

374
00:19:30,616 --> 00:19:33,736 A:middle
in the 3D tool and
exported that to a DAE file,

375
00:19:34,236 --> 00:19:37,206 A:middle
so they are absolutely no good
to do here for the developer.

376
00:19:37,786 --> 00:19:40,896 A:middle
And the grass was animated

377
00:19:41,086 --> 00:19:45,736 A:middle
with a shadow modifier
directly in Xcode 7.

378
00:19:45,856 --> 00:19:48,276 A:middle
Related to animations,
particle effects.

379
00:19:49,956 --> 00:19:52,636 A:middle
So there are several particle
effects in the game, and again,

380
00:19:52,636 --> 00:19:57,886 A:middle
they were all done entirely
in Xcode 7, no code here.

381
00:19:57,886 --> 00:20:03,656 A:middle
The pearl and the flower
with some sparkles emitted.

382

383
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

384
00:19:57,886 --> 00:20:03,656 A:middle
The pearl and the flower
with some sparkles emitted.

385
00:20:04,116 --> 00:20:07,226 A:middle
And the enemy throws some fire.

386
00:20:07,386 --> 00:20:14,296 A:middle
That was done with a --
modulated with a color gradient.

387
00:20:14,436 --> 00:20:18,726 A:middle
The particle was done with
four images of dots more

388
00:20:18,856 --> 00:20:22,986 A:middle
or less blurred with random
sizes and an initial velocity

389
00:20:22,986 --> 00:20:26,426 A:middle
to simulate the wind effect.

390
00:20:26,556 --> 00:20:28,226 A:middle
Now, one note about
our materials

391
00:20:29,086 --> 00:20:31,286 A:middle
and how we achieve this
great-looking materials

392
00:20:31,286 --> 00:20:32,976 A:middle
in the game.

393
00:20:33,196 --> 00:20:36,686 A:middle
So here is our looks
like in the game,

394
00:20:37,046 --> 00:20:39,306 A:middle
but if you just take its
geometry and render it

395
00:20:39,306 --> 00:20:41,396 A:middle
with flat colors, it
would look like this,

396
00:20:41,816 --> 00:20:43,416 A:middle
which is a little
bit too simplistic.

397
00:20:44,146 --> 00:20:47,606 A:middle
So the first thing we did was
to set a diffused texture,

398
00:20:48,086 --> 00:20:50,386 A:middle
and this gives us a base
color of our objects.

399
00:20:51,156 --> 00:20:55,806 A:middle
Then we added a normal map
that added very fine details

400
00:20:56,036 --> 00:20:58,706 A:middle
to our surface without
adding many polygons.

401
00:20:58,776 --> 00:21:00,266 A:middle
So this is quite cheap.

402

403
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

404
00:20:58,776 --> 00:21:00,266 A:middle
So this is quite cheap.

405
00:21:00,976 --> 00:21:06,626 A:middle
Then we added a light map using
the self-illumination property,

406
00:21:07,066 --> 00:21:08,536 A:middle
which is new in this release.

407
00:21:09,976 --> 00:21:11,966 A:middle
And the light map
adds very fine details

408
00:21:11,966 --> 00:21:14,566 A:middle
about global illumination
to our objects.

409
00:21:14,566 --> 00:21:17,306 A:middle
You can see in the
corner of the stone,

410
00:21:17,856 --> 00:21:20,896 A:middle
you can see some
occlusion, for example,

411
00:21:20,896 --> 00:21:24,726 A:middle
that is baked in the light map.

412
00:21:24,946 --> 00:21:27,946 A:middle
Then the last thing we did
was a reflective cube map

413
00:21:28,376 --> 00:21:31,126 A:middle
to reflect an environment
and, in particular, the sky.

414
00:21:31,126 --> 00:21:35,276 A:middle
So the reflective cube
map looks like this.

415
00:21:35,276 --> 00:21:38,306 A:middle
We attenuate its effect
using an attenuateer

416
00:21:39,166 --> 00:21:42,846 A:middle
to attenuate the
reflection on the surfaces

417
00:21:42,956 --> 00:21:46,476 A:middle
that are facing the
point of view.

418
00:21:46,686 --> 00:21:50,256 A:middle
Now, one note about
the light map.

419
00:21:50,256 --> 00:21:52,746 A:middle
It only baked the
global illumination

420
00:21:52,746 --> 00:21:56,446 A:middle
and not the main direct light
and not the main shadows

421
00:21:57,066 --> 00:21:59,066 A:middle
because we want the
main lighting

422
00:21:59,066 --> 00:22:00,776 A:middle
to continue to be fully dynamic.

423

424
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

425
00:21:59,066 --> 00:22:00,776 A:middle
to continue to be fully dynamic.

426
00:22:01,416 --> 00:22:04,326 A:middle
That way if we want, we can
animate the position of the sun

427
00:22:04,326 --> 00:22:07,996 A:middle
if needed, but most of all,
a character can progress

428
00:22:07,996 --> 00:22:11,076 A:middle
in the game, and its shadows
are live and automatically,

429
00:22:11,076 --> 00:22:14,226 A:middle
you have nothing to do here.

430
00:22:14,446 --> 00:22:16,076 A:middle
So that's about it
for this demo,

431
00:22:16,076 --> 00:22:17,936 A:middle
and I hand over to
Sebastien to talk

432
00:22:17,936 --> 00:22:19,396 A:middle
about the transition to Metal.

433
00:22:19,746 --> 00:22:19,976 A:middle
Thank you.

434
00:22:20,516 --> 00:22:24,596 A:middle
[Applause]

435
00:22:25,096 --> 00:22:27,276 A:middle
>> SEBASTIEN METROT:
Thank you, Thomas.

436
00:22:27,276 --> 00:22:30,556 A:middle
So I am Sebastien, and I
am working on SceneKit,

437
00:22:30,946 --> 00:22:34,316 A:middle
and I am going to talk to you
about the transition to Metal

438
00:22:34,316 --> 00:22:37,096 A:middle
as well as a bunch
of new features

439
00:22:37,096 --> 00:22:38,366 A:middle
that we have added this year.

440
00:22:39,946 --> 00:22:43,136 A:middle
So SceneKit is transitioning
to Metal.

441
00:22:43,136 --> 00:22:45,036 A:middle
Metal, as you know,
is very low-level

442
00:22:45,226 --> 00:22:50,476 A:middle
and low-overhead graphic API
that brings better performances

443
00:22:50,636 --> 00:22:54,646 A:middle
and in much more modern
API to the platforms,

444
00:22:55,406 --> 00:22:58,266 A:middle
and most importantly for you
SceneKit users, it just works.

445

446
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

447
00:23:00,216 --> 00:23:02,486 A:middle
It also brings some new
features to SceneKit,

448
00:23:03,206 --> 00:23:06,516 A:middle
like compute shaders so
you can just use a Metal --

449
00:23:06,516 --> 00:23:13,086 A:middle
or the geometry source or Metal
texture as material property.

450
00:23:14,046 --> 00:23:16,836 A:middle
It also allows us to
do automatic batching.

451
00:23:17,216 --> 00:23:19,876 A:middle
So if you have the geometry used

452
00:23:19,876 --> 00:23:22,306 A:middle
by multiple objects
using the same material,

453
00:23:22,566 --> 00:23:25,666 A:middle
we can dramatically reduce
the number of [Inaudible].

454
00:23:26,446 --> 00:23:28,226 A:middle
I will show you that
with a demo.

455
00:23:29,326 --> 00:23:32,266 A:middle
So what you see is a simple
SceneKit application running

456
00:23:32,266 --> 00:23:33,976 A:middle
on the OpenGL ES editor.

457
00:23:34,346 --> 00:23:37,666 A:middle
It is displaying a planet
with orbiting asteroids,

458
00:23:38,266 --> 00:23:41,176 A:middle
and on the OpenGL
is eating up much

459
00:23:41,176 --> 00:23:43,076 A:middle
of the CPU just displaying
the asteroids.

460
00:23:43,116 --> 00:23:46,986 A:middle
As you can see, we cannot
add many more asteroids

461
00:23:47,106 --> 00:23:49,866 A:middle
without maxing CPU and
reducing the frame rate.

462
00:23:51,066 --> 00:23:54,136 A:middle
But if we move to the
same application running

463
00:23:55,306 --> 00:23:58,486 A:middle
on the Metal renderer, we
can add many more asteroids,

464
00:23:58,916 --> 00:24:02,586 A:middle
as you will see in a moment.

465

466
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

467
00:23:58,916 --> 00:24:02,586 A:middle
as you will see in a moment.

468
00:24:02,716 --> 00:24:06,326 A:middle
Yes. Of course, the CPU
starts to be eaten too,

469
00:24:06,666 --> 00:24:10,686 A:middle
but we can raise the number
of asteroids dramatically.

470
00:24:11,336 --> 00:24:14,566 A:middle
I think it's quite awesome.

471
00:24:15,366 --> 00:24:17,366 A:middle
[Applause]

472
00:24:17,716 --> 00:24:17,976 A:middle
Thank you.

473
00:24:24,536 --> 00:24:29,196 A:middle
So how do you adopt Metal with
your SceneKit applications?

474
00:24:30,416 --> 00:24:33,356 A:middle
Well, first is the default
on iOS 9, so you just have

475
00:24:33,356 --> 00:24:35,726 A:middle
to recompile your
application with the new SDK,

476
00:24:36,096 --> 00:24:39,156 A:middle
and it will use Metal on all
the hardware that supports it.

477
00:24:40,316 --> 00:24:41,626 A:middle
It's also backward compatible,

478
00:24:41,626 --> 00:24:43,476 A:middle
so if you have an
existing application

479
00:24:43,476 --> 00:24:46,146 A:middle
that you didn't change
and didn't recompile,

480
00:24:46,146 --> 00:24:48,496 A:middle
it will work on OpenGL
by default.

481
00:24:49,686 --> 00:24:53,536 A:middle
And you can opt for using the
OpenGL renderer, if you want to,

482
00:24:53,896 --> 00:24:55,946 A:middle
for example, if you
have custom shaders

483
00:24:55,986 --> 00:24:57,746 A:middle
that are OpenGL specific.

484
00:24:58,896 --> 00:25:02,106 A:middle
Choosing the renderer
is really easy,

485

486
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

487
00:24:58,896 --> 00:25:02,106 A:middle
Choosing the renderer
is really easy,

488
00:25:02,106 --> 00:25:03,816 A:middle
if you have a built-in
application

489
00:25:03,816 --> 00:25:08,966 A:middle
with built-in renderer, you just
have to use this small button

490
00:25:08,966 --> 00:25:10,016 A:middle
to change the default.

491
00:25:11,186 --> 00:25:12,916 A:middle
You can also do it
programmatically.

492
00:25:12,916 --> 00:25:16,916 A:middle
So if you created your
scene view at runtime,

493
00:25:17,326 --> 00:25:21,486 A:middle
you will give it the
right option, use Metal

494
00:25:21,546 --> 00:25:23,136 A:middle
or OpenGL, as you want.

495
00:25:23,756 --> 00:25:27,366 A:middle
And what's new also is
that we have added support

496
00:25:27,366 --> 00:25:28,446 A:middle
for Metal shaders.

497
00:25:28,446 --> 00:25:31,696 A:middle
So how do you deal with shaders
in SceneKit with the new API?

498
00:25:32,696 --> 00:25:37,226 A:middle
The first way to use custom
shaders with SceneKit is

499
00:25:37,496 --> 00:25:39,556 A:middle
to use Metal shader modifiers.

500
00:25:39,886 --> 00:25:43,016 A:middle
Shadow modifyers used
to be only in GSL.

501
00:25:43,126 --> 00:25:45,296 A:middle
Now we support both languages.

502
00:25:45,566 --> 00:25:51,396 A:middle
If you add on GLSL modifier, it
will work as it is on OpenGL,

503
00:25:51,396 --> 00:25:53,336 A:middle
and it will be translated
to Metal.

504
00:25:54,006 --> 00:25:55,586 A:middle
It works in most situations.

505
00:25:56,156 --> 00:25:58,206 A:middle
If you write your
shadow modifier

506
00:25:58,206 --> 00:26:01,056 A:middle
with Metal shadow
language, it will not work,

507

508
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

509
00:25:58,206 --> 00:26:01,056 A:middle
with Metal shadow
language, it will not work,

510
00:26:01,056 --> 00:26:05,356 A:middle
it will be ignored, but
it will work as Metal.

511
00:26:06,676 --> 00:26:13,496 A:middle
The second way to use shaders in
SceneKit is to use SCNPrograms.

512
00:26:14,286 --> 00:26:16,246 A:middle
In this case, there is
no automatic translation,

513
00:26:16,246 --> 00:26:17,716 A:middle
so you will do it by hand.

514
00:26:17,946 --> 00:26:19,546 A:middle
Will you have to
translate all your code.

515
00:26:20,276 --> 00:26:23,196 A:middle
It's supported -- it
supports both GLSL

516
00:26:23,296 --> 00:26:28,266 A:middle
and Metal shading languages,
so you can support both

517
00:26:28,266 --> 00:26:29,396 A:middle
in the same application.

518
00:26:30,146 --> 00:26:31,516 A:middle
You can compile them offline.

519
00:26:32,316 --> 00:26:35,356 A:middle
You just have to provide the
function names for the shader

520
00:26:35,356 --> 00:26:37,526 A:middle
for the fragment
and vertex shader,

521
00:26:38,176 --> 00:26:39,926 A:middle
or you can compile
it at runtime.

522
00:26:39,956 --> 00:26:42,466 A:middle
In this case, you just have to
give the source code in addition

523
00:26:42,466 --> 00:26:44,586 A:middle
to the function names.

524
00:26:45,256 --> 00:26:47,106 A:middle
I will show you now
how you do it

525
00:26:47,776 --> 00:26:51,316 A:middle
by creating a very small shader
that would work in SceneKit.

526
00:26:51,386 --> 00:26:53,786 A:middle
The first operation that
you will have to do is

527
00:26:53,926 --> 00:26:58,526 A:middle
to include our SceneKit header
so that you can have access

528
00:26:58,926 --> 00:27:03,726 A:middle
to some semantics and, for
example, the default metrics.

529

530
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

531
00:26:58,926 --> 00:27:03,726 A:middle
to some semantics and, for
example, the default metrics.

532
00:27:04,416 --> 00:27:09,726 A:middle
Here we define our custom
vertex structure that is

533
00:27:09,726 --> 00:27:13,486 A:middle
in the correct data
in SceneKit thanks

534
00:27:13,486 --> 00:27:15,106 A:middle
to the semantic definition.

535
00:27:16,116 --> 00:27:21,316 A:middle
We can also define the use of
a metrics that is, for example,

536
00:27:21,386 --> 00:27:22,386 A:middle
the model view projection.

537
00:27:23,086 --> 00:27:28,116 A:middle
And we can define our own
structure with our own data

538
00:27:28,116 --> 00:27:30,836 A:middle
for the algorithm we
are trying to create.

539
00:27:32,146 --> 00:27:36,196 A:middle
Then we just have to
create the vertex function

540
00:27:36,776 --> 00:27:42,566 A:middle
by giving the arguments for the
structure that we have defined.

541
00:27:42,566 --> 00:27:43,046 A:middle
Really easy.

542
00:27:44,146 --> 00:27:47,916 A:middle
Then in the program, we just
define the same structures,

543
00:27:47,916 --> 00:27:50,236 A:middle
we have to use the same
types and the same layout

544
00:27:50,236 --> 00:27:52,486 A:middle
for the structure as we used
in the Metal definition.

545
00:27:53,626 --> 00:27:56,686 A:middle
We created a program,
give the vertex

546
00:27:56,686 --> 00:27:58,446 A:middle
and fragment function names.

547
00:27:59,736 --> 00:28:03,756 A:middle
And then we can give some
data by using the structure

548

549
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

550
00:27:59,736 --> 00:28:03,756 A:middle
And then we can give some
data by using the structure

551
00:28:03,756 --> 00:28:06,566 A:middle
and wrapping it around
time stamps.

552
00:28:07,476 --> 00:28:08,046 A:middle
Very simple.

553
00:28:09,696 --> 00:28:14,516 A:middle
The last way to use shaders in
SceneKit is to use techniques,

554
00:28:14,996 --> 00:28:16,836 A:middle
techniques were introduced
last year.

555
00:28:17,216 --> 00:28:19,376 A:middle
It's a great way to
do post-processing

556
00:28:19,376 --> 00:28:25,456 A:middle
for all your applications on the
role scene, and in this case,

557
00:28:25,766 --> 00:28:28,456 A:middle
you just have to give the
correct function names

558
00:28:28,756 --> 00:28:32,666 A:middle
for the Metal shaders in your
pass definition, and that's it.

559
00:28:32,836 --> 00:28:34,706 A:middle
It will work just like
the OpenGL version.

560
00:28:35,706 --> 00:28:37,116 A:middle
That was it for Metal.

561
00:28:37,116 --> 00:28:38,966 A:middle
Let's move on to
some new features

562
00:28:38,966 --> 00:28:40,236 A:middle
that we have added
for you this year.

563
00:28:41,616 --> 00:28:46,226 A:middle
The first one is the
integration with Model I/O,

564
00:28:46,226 --> 00:28:50,496 A:middle
so we have added the support for
Model I/O, both for importing

565
00:28:50,496 --> 00:28:53,426 A:middle
and exporting of your
models and scenes.

566
00:28:54,036 --> 00:29:01,266 A:middle
As you can see, not all the file
formats support all the data

567

568
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

569
00:28:54,036 --> 00:29:01,266 A:middle
As you can see, not all the file
formats support all the data

570
00:29:01,266 --> 00:29:04,376 A:middle
that we are supporting in
SceneKit, so choose the one

571
00:29:04,376 --> 00:29:06,886 A:middle
that is most suited
for your application.

572
00:29:07,496 --> 00:29:12,206 A:middle
We have also added scene
transition with one line

573
00:29:12,206 --> 00:29:14,336 A:middle
of code, very easy, you
can create transitions

574
00:29:14,336 --> 00:29:17,076 A:middle
between scenes, and
with great animations.

575
00:29:18,236 --> 00:29:19,886 A:middle
Really easy to use.

576
00:29:21,596 --> 00:29:23,596 A:middle
We have added also
debug options,

577
00:29:24,066 --> 00:29:27,076 A:middle
so you can visualize your
boxes, your physics shapes,

578
00:29:27,386 --> 00:29:30,076 A:middle
everything at one time
for debugging purposes.

579
00:29:30,656 --> 00:29:36,056 A:middle
We have also added
blend modes to material

580
00:29:36,516 --> 00:29:38,756 A:middle
so you can choose how
transparency works

581
00:29:38,886 --> 00:29:42,786 A:middle
for each node -- for each
material in your application.

582
00:29:43,446 --> 00:29:45,026 A:middle
You can create new
effects with that.

583
00:29:45,666 --> 00:29:50,256 A:middle
And we have also added an
audio engine that works

584
00:29:50,256 --> 00:29:52,266 A:middle
for everything in SceneKit.

585
00:29:52,796 --> 00:29:57,326 A:middle
We can create 3D sounds,
attach them to nodes,

586
00:29:57,436 --> 00:30:00,196 A:middle
and they will move with
the nodes in the scene.

587

588
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

589
00:29:57,436 --> 00:30:00,196 A:middle
and they will move with
the nodes in the scene.

590
00:30:01,076 --> 00:30:03,236 A:middle
It also works with
ambience and music,

591
00:30:03,236 --> 00:30:07,886 A:middle
so you can digital position
audio and loop the sound.

592
00:30:07,886 --> 00:30:11,196 A:middle
The listener is placed on the
camera node, but you can move it

593
00:30:11,196 --> 00:30:12,326 A:middle
to any node in the scene.

594
00:30:12,326 --> 00:30:12,996 A:middle
It's really easy.

595
00:30:14,846 --> 00:30:18,016 A:middle
It's based on the AVAudioEngine,
so you just have to annotate

596
00:30:18,236 --> 00:30:22,246 A:middle
from AV audio node, and you can
do your own audio processing

597
00:30:22,246 --> 00:30:24,536 A:middle
if you want to if you have
an existing audio engine.

598
00:30:25,326 --> 00:30:29,086 A:middle
And last, we have added also
a way to created sound action

599
00:30:29,086 --> 00:30:32,406 A:middle
so you can integrate sound
into your action sequences.

600
00:30:32,406 --> 00:30:35,476 A:middle
That's really easy to do.

601
00:30:35,736 --> 00:30:39,076 A:middle
And here is how you
use the sound API.

602
00:30:39,576 --> 00:30:43,756 A:middle
First you have to instantiate an
audio sound from the file fame.

603
00:30:44,236 --> 00:30:46,846 A:middle
Then you create a player and
attach the player to any node

604
00:30:47,016 --> 00:30:50,206 A:middle
in the scene, and it will start
to play right away and stop

605
00:30:50,256 --> 00:30:51,136 A:middle
when the sound is finished.

606
00:30:51,926 --> 00:30:53,666 A:middle
If you want to do
ambience or music,

607
00:30:53,936 --> 00:30:57,656 A:middle
you have to just flip a switch,

608
00:30:58,076 --> 00:31:01,356 A:middle
like digital positional
audio and start looping.

609

610
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

611
00:30:58,076 --> 00:31:01,356 A:middle
like digital positional
audio and start looping.

612
00:31:03,006 --> 00:31:06,866 A:middle
And last, it's really easy to
create a play song selection.

613
00:31:06,866 --> 00:31:10,046 A:middle
It's just one line, and you
can run the action or add it

614
00:31:10,136 --> 00:31:12,226 A:middle
to an existing action sequence.

615
00:31:13,956 --> 00:31:18,086 A:middle
This API was used in the
sample code for all the sound,

616
00:31:18,606 --> 00:31:21,906 A:middle
and we used the collision
mesh as --

617
00:31:21,906 --> 00:31:26,436 A:middle
that Thomas showed you
sooner to detect kind

618
00:31:26,436 --> 00:31:29,916 A:middle
of ground the character
is working on.

619
00:31:30,246 --> 00:31:35,746 A:middle
For example [scratching sound]
when he walks on the grass.

620
00:31:36,036 --> 00:31:37,626 A:middle
Or when he walks on a rock.

621
00:31:38,276 --> 00:31:41,766 A:middle
It was really easy to do.

622
00:31:42,036 --> 00:31:42,766 A:middle
So that's about it.

623
00:31:42,766 --> 00:31:46,386 A:middle
And I give you back to Thomas
for the wrap-up of this session.

624
00:31:46,556 --> 00:31:46,866 A:middle
Thank you.

625
00:31:48,516 --> 00:31:52,756 A:middle
[Applause]

626
00:31:53,256 --> 00:31:53,506 A:middle
>> THOMAS GOOSSENS: Okay.

627
00:31:53,506 --> 00:31:56,706 A:middle
So that was an overview of what
we added to SceneKit this year.

628
00:31:57,356 --> 00:32:00,936 A:middle
So a great new Scene Editor
that will save you tons of lines

629

630
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

631
00:31:57,356 --> 00:32:00,936 A:middle
So a great new Scene Editor
that will save you tons of lines

632
00:32:00,936 --> 00:32:03,736 A:middle
of code and do more for
your game insight tools,

633
00:32:03,926 --> 00:32:06,146 A:middle
which is usually a good idea.

634
00:32:06,146 --> 00:32:07,776 A:middle
A smooth transition to Metal

635
00:32:08,126 --> 00:32:10,386 A:middle
which should boost the
performance of your game

636
00:32:11,306 --> 00:32:13,786 A:middle
with nothing to do on your
side most of the time.

637
00:32:15,146 --> 00:32:18,336 A:middle
And some new features that were
presented, and we covered some

638
00:32:18,336 --> 00:32:19,406 A:middle
of them in this session,

639
00:32:19,576 --> 00:32:23,976 A:middle
but check the documentation
for a list.

640
00:32:24,726 --> 00:32:27,976 A:middle
And an amazing demo app
that we are really proud

641
00:32:27,976 --> 00:32:29,116 A:middle
to share the code with you.

642
00:32:30,066 --> 00:32:32,816 A:middle
Search for fox on the developer
website, and you should find it.

643
00:32:34,526 --> 00:32:38,686 A:middle
Now for more information,
please check the resources

644
00:32:38,686 --> 00:32:40,276 A:middle
and documentation
we have online,

645
00:32:41,086 --> 00:32:42,476 A:middle
and for general inquiries,

646
00:32:42,586 --> 00:32:44,606 A:middle
contact our Evangelist,
Allan Schaffer.

647
00:32:45,856 --> 00:32:49,436 A:middle
Some related sessions,
Model I/O,

648
00:32:49,436 --> 00:32:51,496 A:middle
great new frameworks
introduced this year,

649
00:32:52,536 --> 00:32:55,806 A:middle
and check the What's New
in SpriteKit session.

650
00:32:55,896 --> 00:32:58,786 A:middle
They have a really great
demo of the scene editors

651
00:32:58,786 --> 00:33:00,476 A:middle
that go much deeper
into details.

652

653
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

654
00:32:58,786 --> 00:33:00,476 A:middle
that go much deeper
into details.

655
00:33:00,476 --> 00:33:02,416 A:middle
So you definitely
want to see that one.

656
00:33:03,236 --> 00:33:04,146 A:middle
And that's about it.

657
00:33:04,426 --> 00:33:05,806 A:middle
Thanks, and enjoy
the conference.

658
00:33:05,916 --> 00:33:06,176 A:middle
Thank you.

659
00:33:07,508 --> 00:33:09,508 A:middle
[Applause]

660
