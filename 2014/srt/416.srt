X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1
00:00:00,506 --> 00:00:10,516 A:middle
[ Silence ]

2
00:00:11,016 --> 00:00:17,000 A:middle
[ Applause ]

3
00:00:17,686 --> 00:00:18,396 A:middle
>> Good afternoon.

4
00:00:18,396 --> 00:00:18,896 A:middle
Thank you.

5
00:00:18,946 --> 00:00:23,836 A:middle
Welcome to what they tell me is
Session 416, Modern Frameworks.

6
00:00:23,836 --> 00:00:28,246 A:middle
Today I'm going to be talking a
lot about mostly the mechanics

7
00:00:28,246 --> 00:00:31,016 A:middle
of setting up modern
frameworks on iOS,

8
00:00:31,016 --> 00:00:34,466 A:middle
some of the API design
principles that we use at Apple

9
00:00:34,466 --> 00:00:36,086 A:middle
and that we recommend
that you guys use.

10
00:00:36,086 --> 00:00:39,866 A:middle
If you were here for Andy and
Collin's talk just before this,

11
00:00:40,546 --> 00:00:42,236 A:middle
they really delved into a lot

12
00:00:42,236 --> 00:00:46,606 A:middle
of the deep architectural
components of how

13
00:00:46,606 --> 00:00:47,726 A:middle
to build your application.

14
00:00:48,756 --> 00:00:50,376 A:middle
I'm going to cover some
of the higher level stuff

15
00:00:50,376 --> 00:00:53,076 A:middle
and then we'll go through a
quick tour of Xcode and talk

16
00:00:53,076 --> 00:00:55,826 A:middle
about how some of these things
get build directly into your app

17
00:00:55,996 --> 00:00:59,476 A:middle
and just some of the mechanics
of getting all of that set up.

18
00:00:59,746 --> 00:01:05,556 A:middle
So, how many of you have
actually used static libraries

19

20
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

21
00:00:59,746 --> 00:01:05,556 A:middle
So, how many of you have
actually used static libraries

22
00:01:05,556 --> 00:01:08,986 A:middle
in your application that
you get from a third party?

23
00:01:09,136 --> 00:01:09,826 A:middle
That's everyone.

24
00:01:09,826 --> 00:01:11,786 A:middle
Okay. If you're doing
it without one

25
00:01:11,786 --> 00:01:14,166 A:middle
of those things you're probably
using the target management

26
00:01:14,166 --> 00:01:15,206 A:middle
mechanisms in Xcode.

27
00:01:15,936 --> 00:01:17,846 A:middle
Right? You download a
bunch of Source Code files,

28
00:01:17,846 --> 00:01:21,206 A:middle
you put them someplace on your
drive, you hope you remember

29
00:01:21,206 --> 00:01:25,306 A:middle
where you left them, and you're
messing around with this,

30
00:01:25,306 --> 00:01:27,006 A:middle
and you're shifting things
in and out of targets,

31
00:01:27,376 --> 00:01:28,936 A:middle
you may be even taking
them wholesale

32
00:01:28,936 --> 00:01:30,886 A:middle
and dumping them directly
into your application

33
00:01:30,886 --> 00:01:33,376 A:middle
so now you've got six or
seven copies across all

34
00:01:33,376 --> 00:01:34,876 A:middle
of the applications
you're working on.

35
00:01:35,596 --> 00:01:36,366 A:middle
Things like that.

36
00:01:37,086 --> 00:01:41,246 A:middle
The next step up from this
is the Static Library, right?

37
00:01:41,246 --> 00:01:42,586 A:middle
The Cocoa Touch Static Library.

38
00:01:43,876 --> 00:01:46,526 A:middle
It's a .a, you still
have to put it someplace.

39
00:01:46,526 --> 00:01:48,386 A:middle
You're probably checking
it into your sources.

40
00:01:48,426 --> 00:01:50,866 A:middle
The .a is separate
from the header,

41
00:01:50,866 --> 00:01:52,586 A:middle
so you need to put
the header someplace.

42
00:01:53,316 --> 00:01:56,286 A:middle
You can't carry assets along
with it so you don't get

43
00:01:56,286 --> 00:01:59,366 A:middle
to do things like have
a bunch of nice pictures

44
00:01:59,366 --> 00:02:01,976 A:middle
or customized controls
and things

45

46
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

47
00:01:59,366 --> 00:02:01,976 A:middle
or customized controls
and things

48
00:02:01,976 --> 00:02:03,256 A:middle
like that in your application.

49
00:02:03,646 --> 00:02:07,116 A:middle
So, this is good but not great.

50
00:02:07,116 --> 00:02:11,276 A:middle
In iOS 8 -- so actually let
me back up for a second,

51
00:02:11,926 --> 00:02:13,586 A:middle
OS X developers,
you guys are here?

52
00:02:13,946 --> 00:02:14,586 A:middle
All six of you?

53
00:02:16,086 --> 00:02:23,386 A:middle
No? Okay. How many of you have
actually shipped a framework?

54
00:02:23,386 --> 00:02:24,956 A:middle
Wow, okay, a good number.

55
00:02:24,986 --> 00:02:27,486 A:middle
Great. iOS users you
can do it now, too.

56
00:02:28,096 --> 00:02:28,976 A:middle
There are some restrictions,
though.

57
00:02:29,516 --> 00:02:32,676 A:middle
[ Applause ]

58
00:02:33,176 --> 00:02:34,316 A:middle
So we'll talk about that.

59
00:02:34,856 --> 00:02:37,916 A:middle
One of the reasons that you're
going to use frameworks is

60
00:02:37,916 --> 00:02:40,036 A:middle
to be able to package
absolutely everything

61
00:02:40,036 --> 00:02:41,416 A:middle
up that you need
as a single unit.

62
00:02:42,346 --> 00:02:43,666 A:middle
Right? So this is going
to include headers,

63
00:02:43,666 --> 00:02:46,126 A:middle
it's going to include
images, asset catalogs.

64
00:02:46,126 --> 00:02:46,956 A:middle
You name it, throw it

65
00:02:46,956 --> 00:02:49,026 A:middle
in the framework it goes
along as a single unit.

66
00:02:49,106 --> 00:02:50,626 A:middle
You'll be able to put
those frameworks someplace

67
00:02:50,626 --> 00:02:52,726 A:middle
on your drive, keep
track of them.

68
00:02:52,726 --> 00:02:54,276 A:middle
Xcode will take care
of moving those things

69
00:02:54,276 --> 00:02:56,036 A:middle
into the right place on
your application builds.

70
00:02:56,696 --> 00:02:58,116 A:middle
Right? There are a lot
of really neat features

71
00:02:58,116 --> 00:03:00,676 A:middle
that have been built in for
iOS 8, especially in the face

72

73
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

74
00:02:58,116 --> 00:03:00,676 A:middle
that have been built in for
iOS 8, especially in the face

75
00:03:00,676 --> 00:03:04,196 A:middle
of the some of the new features,
to be able to make the workflow

76
00:03:04,196 --> 00:03:06,956 A:middle
for frameworks really
effective for your iOS 8 apps.

77
00:03:07,566 --> 00:03:09,736 A:middle
Why do you want to
use frameworks?

78
00:03:10,836 --> 00:03:14,226 A:middle
Well, all of the packaging
stuff is really nice,

79
00:03:15,576 --> 00:03:16,656 A:middle
but all of the features that are

80
00:03:16,656 --> 00:03:19,496 A:middle
in iOS 8 take advantage
of frameworks.

81
00:03:19,496 --> 00:03:22,346 A:middle
So the first thing you probably
want to try using is live views,

82
00:03:22,346 --> 00:03:24,166 A:middle
they're the live rendering of
views in Interface Builder.

83
00:03:24,536 --> 00:03:28,246 A:middle
So if you're putting your
things into a framework all

84
00:03:28,246 --> 00:03:29,226 A:middle
of that custom-rendering,

85
00:03:29,226 --> 00:03:30,816 A:middle
all of that custom-drawing
becomes available

86
00:03:30,816 --> 00:03:33,436 A:middle
to Interface Builder for
use directly in Xcode

87
00:03:33,436 --> 00:03:36,606 A:middle
as you're editing your
NIBs and your storyboards.

88
00:03:36,826 --> 00:03:39,216 A:middle
I guess that shows my age,

89
00:03:39,216 --> 00:03:40,356 A:middle
they're all storyboards
now, right?

90
00:03:40,356 --> 00:03:42,926 A:middle
It's not NIBs anymore.

91
00:03:43,956 --> 00:03:47,076 A:middle
If you're using extensions,
right, you're going to want

92
00:03:47,076 --> 00:03:49,496 A:middle
to use frameworks because you're
going to be able to share a code

93
00:03:49,496 --> 00:03:52,276 A:middle
between the extension and the
application without having

94
00:03:52,276 --> 00:03:53,756 A:middle
to duplicate stuff
in each place.

95
00:03:54,566 --> 00:03:56,396 A:middle
Right? So you won't be
putting things in the target

96
00:03:56,396 --> 00:03:59,006 A:middle
for the extension and the target
for the app, you'll put it

97
00:03:59,006 --> 00:04:00,366 A:middle
in the framework
and link the two

98

99
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

100
00:03:59,006 --> 00:04:00,366 A:middle
in the framework
and link the two

101
00:04:00,696 --> 00:04:03,816 A:middle
against the framework itself.

102
00:04:05,126 --> 00:04:07,216 A:middle
If you write multiple
applications

103
00:04:07,656 --> 00:04:09,806 A:middle
and you're using either a third
party framework you're getting

104
00:04:09,806 --> 00:04:12,226 A:middle
from someplace else or you
have a bunch of your own tried

105
00:04:12,226 --> 00:04:15,376 A:middle
and true tested code that you
like, all of your categories

106
00:04:15,376 --> 00:04:18,156 A:middle
on NS string -- because, you
know, who does that, but, okay,

107
00:04:18,156 --> 00:04:20,176 A:middle
categories on a NS string,
and things like that.

108
00:04:20,176 --> 00:04:22,866 A:middle
If you're sharing code between
multiple applications you're

109
00:04:22,866 --> 00:04:23,896 A:middle
going to want to use frameworks.

110
00:04:24,326 --> 00:04:25,456 A:middle
And obviously also
if you're going

111
00:04:25,456 --> 00:04:27,366 A:middle
to be publishing a framework, so
if you're going to be making all

112
00:04:27,366 --> 00:04:31,286 A:middle
of your code available as a
framework, you're going to want

113
00:04:31,416 --> 00:04:33,776 A:middle
to be able to package that up
in a single distributable thing

114
00:04:34,116 --> 00:04:36,366 A:middle
that everybody can download and
use and you can version those.

115
00:04:37,026 --> 00:04:39,426 A:middle
So, let's talk a little
bit about getting set up.

116
00:04:40,836 --> 00:04:43,686 A:middle
Xcode makes it really easy
to create a new framework.

117
00:04:43,686 --> 00:04:48,156 A:middle
There's a new template right
inside of the new file dialogue

118
00:04:48,156 --> 00:04:51,306 A:middle
or the new project dialogue
that says Cocoa Touch Framework.

119
00:04:52,016 --> 00:04:53,116 A:middle
Right? So you can
just go click on that,

120
00:04:53,776 --> 00:04:54,846 A:middle
click on the Cocoa
Touch Framework,

121
00:04:54,846 --> 00:04:56,396 A:middle
it's going to walk you
through the same form,

122
00:04:56,816 --> 00:04:58,446 A:middle
give it a bundle ID,
things like that.

123
00:04:58,446 --> 00:05:00,726 A:middle
Save it someplace,
you're off to the races.

124

125
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

126
00:04:58,446 --> 00:05:00,726 A:middle
Save it someplace,
you're off to the races.

127
00:05:00,976 --> 00:05:02,926 A:middle
This also works if you
have an existing project

128
00:05:02,926 --> 00:05:04,186 A:middle
and you create a
new target and one

129
00:05:04,186 --> 00:05:08,446 A:middle
of the new target templates is
a Cocoa Touch Framework, right.

130
00:05:09,416 --> 00:05:12,266 A:middle
So what goes in it?

131
00:05:12,526 --> 00:05:14,136 A:middle
Once you decide you're
going to use Frameworks,

132
00:05:14,956 --> 00:05:18,026 A:middle
what are you going
to put in there?

133
00:05:18,026 --> 00:05:21,346 A:middle
If you're using live views, if
you're interested in frameworks

134
00:05:21,416 --> 00:05:24,676 A:middle
for live views, you're going to
want to put the views in there,

135
00:05:25,456 --> 00:05:27,466 A:middle
and the controls, and
anything else that goes along

136
00:05:27,466 --> 00:05:29,036 A:middle
with giving your app
that custom appearance.

137
00:05:29,036 --> 00:05:31,696 A:middle
Right, so these are going
to be all the assets,

138
00:05:32,076 --> 00:05:34,596 A:middle
in the views it'll be all the
drawing code, the controls,

139
00:05:34,596 --> 00:05:36,186 A:middle
again, it'll be assets,
things like that.

140
00:05:36,946 --> 00:05:38,086 A:middle
They all go in the framework.

141
00:05:38,926 --> 00:05:42,116 A:middle
That way, now, when you link it
for using with your application

142
00:05:42,146 --> 00:05:46,016 A:middle
or giving it out to all of your
friends and neighbors and trying

143
00:05:46,016 --> 00:05:47,996 A:middle
to use it within Xcode for IB,

144
00:05:48,316 --> 00:05:52,736 A:middle
all that stuff just
starts to work.

145
00:05:52,936 --> 00:05:54,446 A:middle
What goes in if you're
using extensions?

146
00:05:55,026 --> 00:05:56,386 A:middle
Well you're going to put
all of the same stuff

147
00:05:56,386 --> 00:05:58,406 A:middle
that you would've put in
for live views, the views

148
00:05:58,406 --> 00:05:59,636 A:middle
and controls and the
custom appearance

149
00:05:59,636 --> 00:06:01,836 A:middle
because your extension
probably has all of that.

150

151
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

152
00:05:59,636 --> 00:06:01,836 A:middle
because your extension
probably has all of that.

153
00:06:02,976 --> 00:06:04,506 A:middle
You're also going
to put in things

154
00:06:04,506 --> 00:06:07,416 A:middle
like view controller
classes, right?

155
00:06:07,416 --> 00:06:09,266 A:middle
The custom view controllers
that you're writing and you want

156
00:06:09,266 --> 00:06:11,226 A:middle
to make available as
API to everyone else

157
00:06:11,226 --> 00:06:14,836 A:middle
or to your extension and to your
application, those are going

158
00:06:14,836 --> 00:06:15,546 A:middle
to go in there, as well.

159
00:06:16,536 --> 00:06:18,186 A:middle
You're probably also going
to put the service API

160
00:06:18,186 --> 00:06:19,256 A:middle
that you're using down there.

161
00:06:19,406 --> 00:06:21,386 A:middle
So if you're doing network
code, things like that,

162
00:06:21,676 --> 00:06:22,806 A:middle
all of that stuff's
going to go down there.

163
00:06:23,766 --> 00:06:28,976 A:middle
Resources, again, assets,
configuration files

164
00:06:28,976 --> 00:06:31,906 A:middle
that might be particular to
your service go down there.

165
00:06:33,146 --> 00:06:34,456 A:middle
Anything that goes in common

166
00:06:34,496 --> 00:06:36,256 A:middle
to your extension
in your application.

167
00:06:36,996 --> 00:06:39,096 A:middle
So, that's also true
if you're going

168
00:06:39,096 --> 00:06:42,026 A:middle
to be using framework contents
between multiple applications.

169
00:06:43,236 --> 00:06:45,116 A:middle
Right? So you've two or three
applications in the store,

170
00:06:45,116 --> 00:06:46,086 A:middle
your users are going to go ahead

171
00:06:46,086 --> 00:06:47,936 A:middle
and download those
applications from the store.

172
00:06:48,556 --> 00:06:51,536 A:middle
You're going to want to put
all of the stuff in common.

173
00:06:52,106 --> 00:06:53,326 A:middle
Right? The idea here
is you want to be able

174
00:06:53,326 --> 00:06:55,316 A:middle
to change the Source Code
once, build a new version

175
00:06:55,316 --> 00:06:56,916 A:middle
of your framework,
make it available

176
00:06:56,916 --> 00:06:59,156 A:middle
to all your applications
on your machines so that

177
00:06:59,156 --> 00:06:59,786 A:middle
when you ship them off

178
00:06:59,786 --> 00:07:01,716 A:middle
to the store all those
changes get picked up.

179

180
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

181
00:06:59,786 --> 00:07:01,716 A:middle
to the store all those
changes get picked up.

182
00:07:02,776 --> 00:07:04,566 A:middle
And when you're publishing
frameworks,

183
00:07:04,566 --> 00:07:05,926 A:middle
again, it's the same thing.

184
00:07:07,106 --> 00:07:10,476 A:middle
So, really what you're
going to wind

185
00:07:10,476 --> 00:07:13,586 A:middle
up doing is refactoring
your application using a lot

186
00:07:13,586 --> 00:07:15,756 A:middle
of the architectural things that
Andy and Collin were talking

187
00:07:15,756 --> 00:07:18,796 A:middle
about in the previous
hour, pulling those

188
00:07:18,796 --> 00:07:21,926 A:middle
into an organizational
unit, like the framework,

189
00:07:21,926 --> 00:07:26,246 A:middle
in order make your
development a lot easier.

190
00:07:28,236 --> 00:07:31,796 A:middle
The app right now, if you're
using extensions, for instance,

191
00:07:31,966 --> 00:07:34,976 A:middle
you've got an application,
it's going to have two parts.

192
00:07:34,976 --> 00:07:37,316 A:middle
It's going to have the
app and the extension.

193
00:07:37,916 --> 00:07:41,016 A:middle
That nifty little building
brick there is the extension.

194
00:07:41,606 --> 00:07:44,286 A:middle
Right, so they sit next to each
other inside the application

195
00:07:44,286 --> 00:07:46,016 A:middle
bundle, you can think
of the extension

196
00:07:46,016 --> 00:07:47,696 A:middle
as basically a little
tiny application.

197
00:07:47,996 --> 00:07:48,586 A:middle
All right?

198
00:07:49,636 --> 00:07:50,866 A:middle
You've got a bunch of
Source Code in there

199
00:07:52,116 --> 00:07:56,026 A:middle
and it probably shares some
Source Code and Swift files,

200
00:07:56,026 --> 00:07:57,536 A:middle
maybe some Objective-C files.

201
00:07:58,136 --> 00:08:01,626 A:middle
Those things are all going to
be part of the target, right?

202

203
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

204
00:07:58,136 --> 00:08:01,626 A:middle
Those things are all going to
be part of the target, right?

205
00:08:02,316 --> 00:08:04,316 A:middle
Rather than have the
object code generated

206
00:08:04,316 --> 00:08:07,856 A:middle
by those things getting
duplicated into each

207
00:08:07,856 --> 00:08:10,836 A:middle
of those targets, what you'll
do is just pull the common stuff

208
00:08:10,886 --> 00:08:14,026 A:middle
down into the framework
and link the application

209
00:08:14,026 --> 00:08:15,996 A:middle
and the extension
against the framework.

210
00:08:16,456 --> 00:08:22,206 A:middle
How do you decide what goes
down there as far as code goes?

211
00:08:22,676 --> 00:08:25,026 A:middle
If it looks like it's showing
up more than once in a target

212
00:08:25,026 --> 00:08:27,776 A:middle
or more than once in your
application, it probably goes

213
00:08:27,776 --> 00:08:29,726 A:middle
in a framework, right.

214
00:08:30,576 --> 00:08:31,416 A:middle
We do this at Apple.

215
00:08:31,916 --> 00:08:33,385 A:middle
We look across all
the applications

216
00:08:33,385 --> 00:08:34,206 A:middle
that we're developing.

217
00:08:34,566 --> 00:08:35,716 A:middle
We start seeing patterns.

218
00:08:36,376 --> 00:08:38,035 A:middle
We start seeing things that
are repeating themselves.

219
00:08:38,035 --> 00:08:40,176 A:middle
So we take those patterns, we
pull them down in the framework.

220
00:08:40,176 --> 00:08:43,246 A:middle
They either go from the apps in
the UIKit or they go in the apps

221
00:08:43,246 --> 00:08:46,256 A:middle
in the AppKit on OS X, or they
go down in the foundation,

222
00:08:46,256 --> 00:08:48,286 A:middle
or they wind up going
down into Core OS.

223
00:08:48,286 --> 00:08:49,756 A:middle
There are lots of
different places

224
00:08:50,106 --> 00:08:52,226 A:middle
where we start pulling
common code up out of apps

225
00:08:52,756 --> 00:08:55,306 A:middle
and make sure that they
wind up at the right level

226
00:08:55,496 --> 00:08:57,426 A:middle
of abstraction for
use everywhere else.

227
00:08:57,826 --> 00:09:02,226 A:middle
Right? So, a really good
technique in terms of separating

228

229
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

230
00:08:57,826 --> 00:09:02,226 A:middle
Right? So, a really good
technique in terms of separating

231
00:09:02,226 --> 00:09:03,096 A:middle
out everything that you're doing

232
00:09:03,096 --> 00:09:05,776 A:middle
in your applications is
doing the same thing.

233
00:09:06,236 --> 00:09:08,776 A:middle
Figure out what's in common,
put it in the framework,

234
00:09:08,856 --> 00:09:11,056 A:middle
use the framework as
the unit of distribution

235
00:09:11,566 --> 00:09:12,896 A:middle
for pulling all that
stuff together.

236
00:09:14,376 --> 00:09:15,266 A:middle
Frameworks are API.

237
00:09:16,466 --> 00:09:20,136 A:middle
You heard Andy and Collin talk
a little bit about it yes --

238
00:09:20,376 --> 00:09:21,486 A:middle
yesterday -- earlier today.

239
00:09:21,486 --> 00:09:25,906 A:middle
Identifying the
responsibilities,

240
00:09:25,906 --> 00:09:28,356 A:middle
figuring out who should be
doing what within your classes.

241
00:09:28,736 --> 00:09:30,916 A:middle
Right? Some guy on the
internet wrote a thing

242
00:09:30,916 --> 00:09:33,096 A:middle
about being ruthless with
your objects and making sure

243
00:09:33,096 --> 00:09:34,426 A:middle
that there are these
clean, bright lines

244
00:09:34,466 --> 00:09:37,786 A:middle
between where those
responsibilities go.

245
00:09:37,786 --> 00:09:40,956 A:middle
It is a great technique
and it will make a lot

246
00:09:40,956 --> 00:09:43,406 A:middle
of your development easier
to take the same kinds

247
00:09:43,406 --> 00:09:47,276 A:middle
of framework approach to
developing your application

248
00:09:47,566 --> 00:09:49,056 A:middle
because now you get
really separable code.

249
00:09:49,056 --> 00:09:51,196 A:middle
You get easily testable
code, you get very,

250
00:09:51,196 --> 00:09:52,986 A:middle
very good abstraction layers.

251
00:09:53,876 --> 00:09:56,016 A:middle
Once you've decided you're
going to be offering frameworks

252
00:09:56,626 --> 00:09:58,356 A:middle
to your application or to
anyone else, you're going

253
00:09:58,356 --> 00:10:01,326 A:middle
to publish a framework as API
for your service, you know,

254

255
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

256
00:09:58,356 --> 00:10:01,326 A:middle
to publish a framework as API
for your service, you know,

257
00:10:01,326 --> 00:10:03,086 A:middle
providing all those
UI view controllers

258
00:10:03,086 --> 00:10:04,106 A:middle
that go along with it.

259
00:10:04,876 --> 00:10:06,736 A:middle
The keyword there is it's API.

260
00:10:07,756 --> 00:10:11,476 A:middle
The key thing is to make sure
that you get the API right.

261
00:10:12,496 --> 00:10:17,726 A:middle
We spend weeks arguing about
things on mailing lists at Apple

262
00:10:17,726 --> 00:10:19,066 A:middle
about how to develop the API,

263
00:10:19,066 --> 00:10:20,616 A:middle
what the architecture
should look like,

264
00:10:20,616 --> 00:10:23,716 A:middle
what things should be
named, all of that stuff.

265
00:10:24,076 --> 00:10:27,316 A:middle
There is some Cocoa guidelines
that we use, I'm going to run

266
00:10:27,316 --> 00:10:28,356 A:middle
through some of them here.

267
00:10:28,606 --> 00:10:31,426 A:middle
One of them is that it's
much better to be clear

268
00:10:31,426 --> 00:10:32,476 A:middle
than it is to be brief.

269
00:10:33,896 --> 00:10:36,976 A:middle
Right? So, a method like this
in Objective-C, insert:at:

270
00:10:37,096 --> 00:10:40,126 A:middle
is very brief, it's very terse.

271
00:10:40,586 --> 00:10:43,146 A:middle
What are you inserting?

272
00:10:43,146 --> 00:10:48,536 A:middle
What is the at that
you're inserting it to?

273
00:10:48,776 --> 00:10:49,466 A:middle
Don't do this.

274
00:10:49,736 --> 00:10:52,376 A:middle
It's not clear enough,
it's not specific enough,

275
00:10:52,936 --> 00:10:54,956 A:middle
it doesn't help you,
because, you know,

276
00:10:54,956 --> 00:10:57,006 A:middle
we all write this code,
what, once, twice.

277
00:10:57,606 --> 00:10:59,346 A:middle
We're going to read
it thousands of times.

278
00:10:59,876 --> 00:11:01,326 A:middle
I'm going to hand a
whole bunch of code off

279

280
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

281
00:10:59,876 --> 00:11:01,326 A:middle
I'm going to hand a
whole bunch of code off

282
00:11:01,326 --> 00:11:03,296 A:middle
to some kid who's younger and
smarter than I am and he's going

283
00:11:03,296 --> 00:11:04,576 A:middle
to have to figure
out what I was doing.

284
00:11:05,676 --> 00:11:08,686 A:middle
Right? So, be clear,
express your intent.

285
00:11:09,206 --> 00:11:11,786 A:middle
insertObject:atIndex:, right?

286
00:11:12,336 --> 00:11:14,056 A:middle
What are you inserting?

287
00:11:14,056 --> 00:11:14,756 A:middle
Some object.

288
00:11:14,956 --> 00:11:15,596 A:middle
Where is it going?

289
00:11:15,596 --> 00:11:16,496 A:middle
At an index.

290
00:11:17,126 --> 00:11:19,496 A:middle
Right? Now you've got a
very specific guarantee.

291
00:11:19,496 --> 00:11:22,116 A:middle
You've got a readable
chunk of code.

292
00:11:22,766 --> 00:11:26,746 A:middle
This is the kind of thing that
we will literally spend a week

293
00:11:26,746 --> 00:11:29,646 A:middle
in email arguing
about to get right.

294
00:11:30,746 --> 00:11:33,636 A:middle
API design is like a
contact sport at our company.

295
00:11:34,376 --> 00:11:36,896 A:middle
So, if you're not really
throwing some elbows

296
00:11:36,896 --> 00:11:38,956 A:middle
in the mailing list with
your friends and neighbors

297
00:11:39,046 --> 00:11:42,156 A:middle
in doing API you're probably
just not having enough fun

298
00:11:42,156 --> 00:11:42,886 A:middle
with it.

299
00:11:44,266 --> 00:11:45,876 A:middle
So, do this.

300
00:11:46,486 --> 00:11:47,446 A:middle
Be really specific.

301
00:11:48,706 --> 00:11:50,556 A:middle
Don't abbreviate, right?

302
00:11:50,606 --> 00:11:52,546 A:middle
Don't' make your selectors
look like line noise.

303
00:11:52,956 --> 00:11:58,116 A:middle
All right -- setBkgndColor:
We have code completion,

304
00:11:58,116 --> 00:12:00,316 A:middle
it fills it out for you, you
can get a couple of keystrokes

305

306
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

307
00:11:58,116 --> 00:12:00,316 A:middle
it fills it out for you, you
can get a couple of keystrokes

308
00:12:00,316 --> 00:12:02,106 A:middle
into it and it'll
tell you, oh, look,

309
00:12:02,956 --> 00:12:05,086 A:middle
you know, setBackgroundColor:.

310
00:12:05,586 --> 00:12:12,066 A:middle
Right? It's long, it tells
you exactly what's going on.

311
00:12:12,786 --> 00:12:15,896 A:middle
Do that. Don't be ambiguous.

312
00:12:16,406 --> 00:12:17,256 A:middle
Right? There are a lot of words

313
00:12:17,256 --> 00:12:20,106 A:middle
that can be used as
a verb or a noun.

314
00:12:21,096 --> 00:12:23,316 A:middle
Here's one of the ones that I
actually proposes and managed

315
00:12:23,316 --> 00:12:27,356 A:middle
to get by and now
regret, displayName:.

316
00:12:28,296 --> 00:12:29,916 A:middle
Right? You see this in a
couple of places, I think it's

317
00:12:29,916 --> 00:12:30,976 A:middle
on NSFileManager these days.

318
00:12:31,046 --> 00:12:32,786 A:middle
We try not to do this anymore.

319
00:12:33,016 --> 00:12:34,246 A:middle
Is display a noun or a verb?

320
00:12:35,156 --> 00:12:38,526 A:middle
Am I telling this thing to
show the name to somebody

321
00:12:38,596 --> 00:12:41,656 A:middle
or is it a name intended
for display?

322
00:12:42,106 --> 00:12:44,676 A:middle
Right? What we do these days

323
00:12:44,676 --> 00:12:49,416 A:middle
in the Kit mostly is anything
that's intended for the display

324
00:12:49,416 --> 00:12:51,966 A:middle
to the user is a localized name.

325
00:12:52,326 --> 00:12:54,016 A:middle
Even if you're getting
as input from the user.

326
00:12:54,016 --> 00:12:56,346 A:middle
Because if you're getting
it as input from the user,

327
00:12:56,346 --> 00:12:58,616 A:middle
it's pretty much as localized
as it's going to get.

328
00:12:59,366 --> 00:13:00,626 A:middle
Right? It's coming from that.

329

330
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

331
00:12:59,366 --> 00:13:00,626 A:middle
Right? It's coming from that.

332
00:13:01,566 --> 00:13:04,186 A:middle
If you're showing it to the user
and it's in your strings files

333
00:13:04,186 --> 00:13:05,816 A:middle
and things like that,
it's the localized name,

334
00:13:05,816 --> 00:13:09,146 A:middle
it's coming out of the bundle
system to have the localization.

335
00:13:09,856 --> 00:13:11,716 A:middle
Right, so our intent
was to be able to say,

336
00:13:12,046 --> 00:13:13,936 A:middle
we want to show the users
something in their language.

337
00:13:15,086 --> 00:13:16,436 A:middle
It's for display.

338
00:13:17,056 --> 00:13:20,016 A:middle
And then everybody went, well,
why -- I'm calling displayName,

339
00:13:20,016 --> 00:13:20,926 A:middle
why isn't this drawing?

340
00:13:21,066 --> 00:13:23,696 A:middle
Oops, yeah, let's not do that.

341
00:13:24,326 --> 00:13:26,256 A:middle
So, be clear.

342
00:13:28,296 --> 00:13:32,326 A:middle
Also, don't take advantage
of some of the things

343
00:13:32,326 --> 00:13:34,376 A:middle
that Objective-C in
this case lets you do.

344
00:13:34,376 --> 00:13:37,436 A:middle
For instance, you could
declare sendAction like this.

345
00:13:38,546 --> 00:13:41,616 A:middle
And you don't necessarily have
to give names to the parameters.

346
00:13:42,466 --> 00:13:46,766 A:middle
So this produces a call site
that looks like sendAction::,

347
00:13:46,766 --> 00:13:51,896 A:middle
you know, sendAction: --
Selector,:object, :flag.

348
00:13:51,896 --> 00:13:55,186 A:middle
It's not specific enough, what's
the object intended to be?

349
00:13:55,426 --> 00:13:57,016 A:middle
What does that flag
actually mean?

350
00:13:58,226 --> 00:14:01,066 A:middle
Right? Fill the whole
selector out.

351

352
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

353
00:13:58,226 --> 00:14:01,066 A:middle
Right? Fill the whole
selector out.

354
00:14:01,616 --> 00:14:05,036 A:middle
sendAction, toObject,
forAllCells, YES or NO.

355
00:14:06,136 --> 00:14:07,176 A:middle
Right, that flag could
have been anything.

356
00:14:07,176 --> 00:14:09,736 A:middle
It could have been animated,
it could have been, you know,

357
00:14:10,556 --> 00:14:12,276 A:middle
stop transmitting the message

358
00:14:12,276 --> 00:14:14,056 A:middle
after you find a
hit or keep going.

359
00:14:14,846 --> 00:14:16,956 A:middle
Those kinds of things
have to be spelled out.

360
00:14:17,486 --> 00:14:20,306 A:middle
Again, you're going to write it
once, somebody's going to come

361
00:14:20,306 --> 00:14:22,416 A:middle
by later and curse your
name because they have

362
00:14:22,416 --> 00:14:24,636 A:middle
to read it 1000 times
after that.

363
00:14:25,306 --> 00:14:29,566 A:middle
Don't be that guy.

364
00:14:29,566 --> 00:14:30,736 A:middle
Do this. Swift, though,

365
00:14:30,736 --> 00:14:32,866 A:middle
brings us some really
interesting opportunities

366
00:14:32,866 --> 00:14:37,796 A:middle
to be clear, to be expressive
and still try maintain some

367
00:14:37,796 --> 00:14:39,736 A:middle
of the terseness and the
less typing and things

368
00:14:39,736 --> 00:14:40,846 A:middle
like that that we'd like to do.

369
00:14:40,846 --> 00:14:42,906 A:middle
And some of the things that
I'm doing to talk about as far

370
00:14:42,906 --> 00:14:47,906 A:middle
as Swift goes are a little
bit different because, for us,

371
00:14:47,976 --> 00:14:49,766 A:middle
we're still trying to
figure out what some

372
00:14:49,766 --> 00:14:51,926 A:middle
of the really good
API idioms mean

373
00:14:51,926 --> 00:14:53,526 A:middle
and we're really not
sure what it means

374
00:14:53,526 --> 00:14:56,776 A:middle
to have a language idiom
for a language that has had

375
00:14:56,776 --> 00:15:00,406 A:middle
about 200 native speakers
for less than a year.

376

377
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

378
00:14:56,776 --> 00:15:00,406 A:middle
about 200 native speakers
for less than a year.

379
00:15:00,516 --> 00:15:03,726 A:middle
So, trying to figure out sort of
what some of this stuff is going

380
00:15:03,726 --> 00:15:06,016 A:middle
to wind up looking like is
a little bit of a challenge.

381
00:15:06,016 --> 00:15:07,756 A:middle
This is actually a great
opportunity for all of you

382
00:15:07,756 --> 00:15:10,676 A:middle
to be able to provide us
feedback with Swift in terms

383
00:15:10,676 --> 00:15:13,786 A:middle
of what the API looks like
and how your experiences

384
00:15:13,786 --> 00:15:17,456 A:middle
in using it both as a native
language and through the mix

385
00:15:17,456 --> 00:15:20,236 A:middle
and match bits with
Cocoa and Cocoa Touch,

386
00:15:20,796 --> 00:15:22,976 A:middle
and let us know exactly
what you'd like to see

387
00:15:23,036 --> 00:15:25,806 A:middle
and what makes it easy to use
Swift with all of these things,

388
00:15:25,806 --> 00:15:26,666 A:middle
versus what makes it feel

389
00:15:26,666 --> 00:15:28,066 A:middle
like there's a little
bit of friction there.

390
00:15:29,006 --> 00:15:30,376 A:middle
All right, so please make sure

391
00:15:30,376 --> 00:15:31,346 A:middle
that you're filing
those [inaudible]

392
00:15:31,346 --> 00:15:32,406 A:middle
on how you'd like it to work.

393
00:15:33,226 --> 00:15:37,346 A:middle
Let's take a quick look at a
Swift function, or I pulled this

394
00:15:37,346 --> 00:15:40,666 A:middle
out of the examples in the book
but I'm going to sort of work

395
00:15:40,666 --> 00:15:43,666 A:middle
through those and then we'll
extend it to something else.

396
00:15:43,666 --> 00:15:46,376 A:middle
So containsCharacter string:
String character: Character.

397
00:15:46,376 --> 00:15:50,636 A:middle
So a Swift function
has named parameters,

398
00:15:50,866 --> 00:15:52,876 A:middle
in this case these names
are the variable names

399
00:15:52,876 --> 00:15:54,776 A:middle
that you'll use inside
a function

400
00:15:55,886 --> 00:15:59,226 A:middle
to describe the variables.

401
00:15:59,296 --> 00:16:01,126 A:middle
Right, so this produces a call
site that looks like this,

402

403
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

404
00:15:59,296 --> 00:16:01,126 A:middle
Right, so this produces a call
site that looks like this,

405
00:16:01,126 --> 00:16:02,806 A:middle
containsCharacter"Buddy", "u".

406
00:16:02,866 --> 00:16:05,286 A:middle
Right, there's a string,
there's a character.

407
00:16:05,326 --> 00:16:08,426 A:middle
If you tack a little
hash mark in front of it,

408
00:16:09,206 --> 00:16:11,466 A:middle
this is not a social media
construct, you don't get to find

409
00:16:11,466 --> 00:16:12,926 A:middle
out what's trending in
your code [laughter],

410
00:16:15,206 --> 00:16:16,446 A:middle
although that might an
interesting question.

411
00:16:16,526 --> 00:16:21,396 A:middle
Right? How often do you use
hashtag character in your code?

412
00:16:21,576 --> 00:16:25,396 A:middle
This allows you to be able
to use a named parameter

413
00:16:25,396 --> 00:16:27,776 A:middle
at the call site and be
specific about what it is.

414
00:16:27,776 --> 00:16:29,326 A:middle
This produces a call site
that looks like this.

415
00:16:29,326 --> 00:16:31,686 A:middle
containsCharacterstring:
character:.

416
00:16:32,876 --> 00:16:37,816 A:middle
Java code -- you've got method
overloading, you can wind

417
00:16:37,816 --> 00:16:40,846 A:middle
up with a method that's one word

418
00:16:41,766 --> 00:16:43,796 A:middle
and it has 19 different
sets of parameters.

419
00:16:43,796 --> 00:16:46,366 A:middle
Some of them have, you know,
four arguments, six arguments,

420
00:16:46,366 --> 00:16:47,926 A:middle
12 arguments, nine arguments.

421
00:16:47,926 --> 00:16:49,656 A:middle
Some of them are the same,
some of them are different.

422
00:16:50,866 --> 00:16:51,676 A:middle
What arguments are they?

423
00:16:51,986 --> 00:16:54,186 A:middle
These named parameters are a
great way to be able to actually

424
00:16:54,186 --> 00:16:57,496 A:middle
to tell at the call sites which
ones you're using along the way.

425
00:16:57,856 --> 00:16:58,906 A:middle
It's a way to be expressive.

426
00:16:58,906 --> 00:16:59,986 A:middle
It's a way to be specific.

427

428
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

429
00:17:01,016 --> 00:17:06,366 A:middle
Right? One of the really nifty
things about Swift is the mix

430
00:17:06,366 --> 00:17:10,086 A:middle
and match feature, being able to
take code that already exists,

431
00:17:10,226 --> 00:17:13,195 A:middle
you've already got a
ton of Objective-C code.

432
00:17:13,396 --> 00:17:15,856 A:middle
In terms of practical terms and
shipping applications and things

433
00:17:15,856 --> 00:17:17,576 A:middle
like that, you'd be nuts
to throw that away and try

434
00:17:17,576 --> 00:17:19,016 A:middle
to do it all over
again in Swift.

435
00:17:19,016 --> 00:17:22,566 A:middle
It'd be fun if you had the
time but you probably don't,

436
00:17:22,566 --> 00:17:24,346 A:middle
you're trying to ship, right?

437
00:17:24,756 --> 00:17:26,726 A:middle
Mix and match lets you
do things like this.

438
00:17:27,136 --> 00:17:31,526 A:middle
This is the Popover
presentation API from UIKit.

439
00:17:31,896 --> 00:17:37,676 A:middle
It gets converted into something
that looks vaguely like this

440
00:17:37,676 --> 00:17:40,556 A:middle
by the mix and match
system for Swift.

441
00:17:41,936 --> 00:17:45,846 A:middle
Right? So, got a function,
presentPopoverFromtRect rect:

442
00:17:45,846 --> 00:17:47,576 A:middle
view: arrowDirections: animated:

443
00:17:48,186 --> 00:17:53,366 A:middle
That produces a call site
that looks like this.

444
00:17:53,586 --> 00:17:55,376 A:middle
Okay, again, not
specific enough,

445
00:17:56,356 --> 00:17:59,986 A:middle
not a really good description
of what's happening, right?

446
00:17:59,986 --> 00:18:01,126 A:middle
What's .Any there?

447

448
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

449
00:17:59,986 --> 00:18:01,126 A:middle
What's .Any there?

450
00:18:01,126 --> 00:18:01,656 A:middle
I have no idea.

451
00:18:01,656 --> 00:18:02,586 A:middle
What does true mean?

452
00:18:03,516 --> 00:18:05,696 A:middle
I mean someRect and someView
are at least descriptive enough,

453
00:18:05,696 --> 00:18:06,836 A:middle
but that doesn't really help me

454
00:18:06,836 --> 00:18:08,456 A:middle
out if those aren't
my variable names.

455
00:18:08,866 --> 00:18:11,396 A:middle
Right? If we re-declare --

456
00:18:11,396 --> 00:18:13,576 A:middle
oh, and then we've got
presentFromBarButtonItem

457
00:18:13,576 --> 00:18:15,406 A:middle
and that just throws the
other wrench into it.

458
00:18:15,806 --> 00:18:16,426 A:middle
Right? Which is okay.

459
00:18:16,426 --> 00:18:18,616 A:middle
Well, now I got barButtonItem,
but arrowDirections

460
00:18:18,616 --> 00:18:19,676 A:middle
and animated are still there.

461
00:18:20,316 --> 00:18:22,716 A:middle
We can be more specific
about these things.

462
00:18:23,286 --> 00:18:24,986 A:middle
We can take advantage
of function overloading,

463
00:18:25,086 --> 00:18:26,176 A:middle
method overloading, and say,

464
00:18:26,176 --> 00:18:28,186 A:middle
let's call them both
presentPopover, what the heck?

465
00:18:29,036 --> 00:18:30,896 A:middle
All right, but now we've got
this really neat way to be able

466
00:18:30,896 --> 00:18:35,266 A:middle
to separate out the
other API from, you know,

467
00:18:36,096 --> 00:18:40,986 A:middle
Cocoa and Cocoa Touch, and
make these two different.

468
00:18:40,986 --> 00:18:42,516 A:middle
So what do we have here?

469
00:18:42,516 --> 00:18:44,286 A:middle
I've got fromRect rect.

470
00:18:44,826 --> 00:18:47,936 A:middle
Right? So fromRect is going to
wind up being the external name

471
00:18:47,936 --> 00:18:50,226 A:middle
that you use at the
call site, rect is going

472
00:18:50,226 --> 00:18:51,666 A:middle
to be the variable
inside the method,

473
00:18:52,826 --> 00:18:54,536 A:middle
the implementation
variable that you're using.

474
00:18:54,536 --> 00:18:55,326 A:middle
It's the parameter that --

475
00:18:55,326 --> 00:18:56,256 A:middle
it's the name that you use

476
00:18:56,256 --> 00:18:58,366 A:middle
for the parameter
that gets passed in.

477
00:18:58,366 --> 00:19:00,676 A:middle
inView view and then the
hash marks there again,

478

479
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

480
00:18:58,366 --> 00:19:00,676 A:middle
inView view and then the
hash marks there again,

481
00:19:01,296 --> 00:19:05,536 A:middle
that makes it possible
to use the same name

482
00:19:05,536 --> 00:19:07,136 A:middle
as the external name,
as the internal name.

483
00:19:07,136 --> 00:19:09,106 A:middle
Those produce call sites
that look like this.

484
00:19:09,956 --> 00:19:12,106 A:middle
Right? So now I've got
presentPopover fromRect, inView,

485
00:19:12,106 --> 00:19:14,116 A:middle
ArrowDirections,
Animated, and presentPopover

486
00:19:14,116 --> 00:19:16,696 A:middle
from BarButtonItem,
arrowDirections, animated.

487
00:19:16,746 --> 00:19:19,336 A:middle
Great, I can tell the different
between them, that's awesome.

488
00:19:19,746 --> 00:19:24,456 A:middle
That's a lot of typing.

489
00:19:24,576 --> 00:19:27,496 A:middle
Co-completions nice but that's
still a bunch of typing.

490
00:19:28,296 --> 00:19:30,356 A:middle
Swift has some really
nice features

491
00:19:30,446 --> 00:19:33,616 A:middle
for default arguments
in your API.

492
00:19:34,866 --> 00:19:36,146 A:middle
So let's go back and take a look

493
00:19:36,146 --> 00:19:37,736 A:middle
at just the presentPopover
method.

494
00:19:38,656 --> 00:19:41,926 A:middle
Okay? If we re-declare
it like this,

495
00:19:43,056 --> 00:19:46,956 A:middle
what we've got is
UIPopoverArrowDirection is the

496
00:19:46,956 --> 00:19:49,066 A:middle
type, and .Any there
is the default value.

497
00:19:50,236 --> 00:19:51,616 A:middle
Right? Swift, when it
goes through the mix

498
00:19:51,616 --> 00:19:55,396 A:middle
and match bits takes the common
pre-fix off of the ENUM's

499
00:19:55,396 --> 00:19:59,196 A:middle
for the options and makes
them the shortened version

500
00:19:59,196 --> 00:20:00,626 A:middle
at the end, which is
one really nice thing

501

502
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

503
00:19:59,196 --> 00:20:00,626 A:middle
at the end, which is
one really nice thing

504
00:20:00,626 --> 00:20:01,886 A:middle
about when we went back through

505
00:20:01,936 --> 00:20:03,836 A:middle
and started normalizing
all the ENUM's again

506
00:20:03,836 --> 00:20:06,016 A:middle
and the common prefixes
allowed us to do this.

507
00:20:06,166 --> 00:20:11,446 A:middle
So, .Any as passed into a
popoverArrowDirection type is

508
00:20:11,986 --> 00:20:15,876 A:middle
that particular entry out
of the NS ENUM argument.

509
00:20:15,876 --> 00:20:18,896 A:middle
And Bool gets true there
is a way to say that YES,

510
00:20:19,036 --> 00:20:21,436 A:middle
if there's no argument
presented we want to be able

511
00:20:21,436 --> 00:20:23,596 A:middle
to have this thing
be true all the time.

512
00:20:24,366 --> 00:20:27,586 A:middle
So that turns these call
sites, which are nice,

513
00:20:27,696 --> 00:20:32,756 A:middle
they're descriptive,
into these call sites.

514
00:20:33,066 --> 00:20:37,226 A:middle
Right? One of the
patterns that you see

515
00:20:37,226 --> 00:20:39,926 A:middle
in foundation is you'll
see a really long method,

516
00:20:39,926 --> 00:20:42,356 A:middle
it'll have probably, I don't
know, anywhere between six,

517
00:20:42,356 --> 00:20:44,136 A:middle
and eight to 12 arguments.

518
00:20:44,646 --> 00:20:47,156 A:middle
And then you'll see versions
of that that are shorter.

519
00:20:47,156 --> 00:20:49,216 A:middle
Generally you'll see
that the end arguments

520
00:20:49,216 --> 00:20:51,276 A:middle
of an Objective-C [inaudible]
starting to get peeled off.

521
00:20:51,486 --> 00:20:53,006 A:middle
Those shorter versions
are calling

522
00:20:53,006 --> 00:20:55,176 A:middle
into the longer version
with default values.

523
00:20:55,836 --> 00:20:57,976 A:middle
Right? Those are all generally
one line implementations

524
00:20:57,976 --> 00:21:01,056 A:middle
that call back out to the big
guy with all the switches on it.

525

526
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

527
00:20:57,976 --> 00:21:01,056 A:middle
that call back out to the big
guy with all the switches on it.

528
00:21:02,096 --> 00:21:04,066 A:middle
Right? This is a way
that you can provide all

529
00:21:04,066 --> 00:21:05,356 A:middle
of those switches without having

530
00:21:05,356 --> 00:21:06,766 A:middle
to provide all those
methods all the time.

531
00:21:07,426 --> 00:21:08,766 A:middle
Put in the same default values.

532
00:21:09,656 --> 00:21:12,606 A:middle
Right? This provides you with
some really good opportunities

533
00:21:12,606 --> 00:21:15,836 A:middle
to be able to clean up your
code, be really clear in Swift,

534
00:21:15,836 --> 00:21:21,026 A:middle
and doing this in Swift,
talking to Objective-C API's,

535
00:21:21,426 --> 00:21:25,106 A:middle
you can start really
thinning down the API surface

536
00:21:25,506 --> 00:21:26,766 A:middle
so you don't have
tons and tons and tons

537
00:21:26,766 --> 00:21:28,016 A:middle
of methods to keep track of.

538
00:21:28,626 --> 00:21:30,586 A:middle
You've got one place to
do these implementations

539
00:21:30,976 --> 00:21:34,536 A:middle
and the default value's
just go in the right place.

540
00:21:34,716 --> 00:21:36,646 A:middle
There's really good
documentation online,

541
00:21:36,646 --> 00:21:39,826 A:middle
the "Coding Guidelines for
Cocoa" at developer.apple.com.

542
00:21:39,926 --> 00:21:44,236 A:middle
If you just go to
developer.apple.com, log in,

543
00:21:44,396 --> 00:21:48,186 A:middle
search for this document, it's
the same coding guidelines

544
00:21:48,186 --> 00:21:50,896 A:middle
that we have up on our
internal wiki for how

545
00:21:50,896 --> 00:21:52,356 A:middle
to get started with
developing API.

546
00:21:52,356 --> 00:21:56,106 A:middle
All right, so the rules that
we're trying to put down there,

547
00:21:56,596 --> 00:21:58,236 A:middle
they're the same things
that we use at Apple.

548
00:21:58,706 --> 00:22:03,346 A:middle
So another good reason to
go and look at these is all

549

550
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

551
00:21:58,706 --> 00:22:03,346 A:middle
So another good reason to
go and look at these is all

552
00:22:03,346 --> 00:22:05,266 A:middle
of the Objective-C API
that you're going to write,

553
00:22:06,046 --> 00:22:07,966 A:middle
if you're not just going
to chuck it over and go

554
00:22:07,966 --> 00:22:13,306 A:middle
for Swift entirely, all of
that API will work well and fit

555
00:22:13,306 --> 00:22:15,496 A:middle
in with the idioms
that we already have

556
00:22:15,636 --> 00:22:17,846 A:middle
for our existing
Cocoa frameworks.

557
00:22:18,376 --> 00:22:20,106 A:middle
The other document you
probably want to read

558
00:22:20,106 --> 00:22:21,896 A:middle
that I'm sure you've
all downloaded already,

559
00:22:22,836 --> 00:22:24,146 A:middle
"The Swift Programming
Language."

560
00:22:24,176 --> 00:22:25,196 A:middle
I wouldn't be surprised if all

561
00:22:25,196 --> 00:22:26,936 A:middle
of you suddenly have
more experience with it

562
00:22:26,936 --> 00:22:28,996 A:middle
than I do by this point.

563
00:22:30,146 --> 00:22:32,096 A:middle
It's available on iBooks,
it's also available online

564
00:22:32,096 --> 00:22:33,316 A:middle
at developer.apple.com.

565
00:22:33,316 --> 00:22:36,626 A:middle
It's got all of the
information about Swift in it

566
00:22:36,626 --> 00:22:38,836 A:middle
and they do make some
API recommendations

567
00:22:38,836 --> 00:22:39,596 A:middle
in there as well.

568
00:22:40,036 --> 00:22:43,326 A:middle
Again, we're all sort of
just figuring this out.

569
00:22:44,316 --> 00:22:47,616 A:middle
So, if there's something
that you see that makes a lot

570
00:22:47,616 --> 00:22:50,266 A:middle
of sense, great, call that out,
tell us because we'll make sure

571
00:22:50,266 --> 00:22:51,246 A:middle
that we try to keep it.

572
00:22:51,646 --> 00:22:53,386 A:middle
If there's something you
see that you don't like

573
00:22:53,386 --> 00:22:56,956 A:middle
or that you'd like to make
suggestions of, send them in.

574
00:22:57,606 --> 00:22:59,616 A:middle
Take advantage of
bugreport.apple.com,

575
00:22:59,616 --> 00:23:00,766 A:middle
get the radars in on Swift

576

577
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

578
00:22:59,616 --> 00:23:00,766 A:middle
get the radars in on Swift

579
00:23:00,816 --> 00:23:02,926 A:middle
because this is really your
opportunity to have a lot

580
00:23:02,926 --> 00:23:05,526 A:middle
of influence on how all
of this stuff develops.

581
00:23:06,036 --> 00:23:09,606 A:middle
If you're publishing a
framework, whether it's

582
00:23:09,646 --> 00:23:13,726 A:middle
for your own applications, or
whether it's for other people

583
00:23:13,726 --> 00:23:16,466 A:middle
to use in their own
applications, you're going

584
00:23:16,466 --> 00:23:17,376 A:middle
to run into a problem.

585
00:23:17,946 --> 00:23:18,996 A:middle
This is a problem that we run

586
00:23:18,996 --> 00:23:21,866 A:middle
into every time we release a new
version of the operating system

587
00:23:21,866 --> 00:23:23,276 A:middle
and that's framework version.

588
00:23:24,196 --> 00:23:27,956 A:middle
Right? So your user has gone

589
00:23:27,956 --> 00:23:29,376 A:middle
and downloaded a
whole bunch of apps.

590
00:23:29,656 --> 00:23:31,576 A:middle
Darn them.

591
00:23:31,786 --> 00:23:32,686 A:middle
Well, I mean, good for you guys.

592
00:23:33,226 --> 00:23:35,136 A:middle
They should download
all of your apps.

593
00:23:35,736 --> 00:23:39,106 A:middle
All of those applications, let's
say, used the latest version

594
00:23:39,106 --> 00:23:42,776 A:middle
of this new framework that just
came out and its version 1.

595
00:23:43,386 --> 00:23:47,116 A:middle
So for a while at least
you're in good shape.

596
00:23:47,116 --> 00:23:49,006 A:middle
Everybody's got the
same code running,

597
00:23:49,326 --> 00:23:51,166 A:middle
if an application
sends information

598
00:23:51,166 --> 00:23:54,066 A:middle
to another one via an extension
or via the open URL call,

599
00:23:54,066 --> 00:23:58,426 A:middle
things like that, hey, all
of the objects work together.

600
00:23:59,616 --> 00:24:00,376 A:middle
No problem, right?

601

602
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

603
00:23:59,616 --> 00:24:00,376 A:middle
No problem, right?

604
00:24:01,006 --> 00:24:01,316 A:middle
Awesome.

605
00:24:03,306 --> 00:24:07,006 A:middle
And then, you come out with a
new version of the framework

606
00:24:07,486 --> 00:24:13,216 A:middle
and some applications update to
it and some applications don't.

607
00:24:13,386 --> 00:24:16,706 A:middle
Or some of the applications just
got developed and then abandoned

608
00:24:16,706 --> 00:24:17,666 A:middle
and they'll never update.

609
00:24:18,106 --> 00:24:21,246 A:middle
Right? So some applications
on the user's device are going

610
00:24:21,246 --> 00:24:24,446 A:middle
to be Version 2, the blue ones,

611
00:24:24,446 --> 00:24:26,066 A:middle
some versions are
going to be Version 1.

612
00:24:26,566 --> 00:24:29,356 A:middle
And now suddenly I'm
trying to send an object

613
00:24:29,436 --> 00:24:31,616 A:middle
to that other application
from a Version 2 framework

614
00:24:31,616 --> 00:24:33,866 A:middle
to a Version 1 framework or
from a Version 1 framework

615
00:24:33,866 --> 00:24:34,796 A:middle
to a Version 2 framework.

616
00:24:36,076 --> 00:24:37,186 A:middle
Not everything's the same.

617
00:24:38,206 --> 00:24:39,896 A:middle
Those objects have
grown new capabilities,

618
00:24:39,896 --> 00:24:40,986 A:middle
the data that you're
passing back

619
00:24:40,986 --> 00:24:42,546 A:middle
and forth may have
new keys in it.

620
00:24:43,796 --> 00:24:45,796 A:middle
Right? One of the things that
you're going to have to do

621
00:24:45,796 --> 00:24:46,506 A:middle
if you are going

622
00:24:46,506 --> 00:24:49,346 A:middle
to be publishing a
framework is be very careful

623
00:24:49,586 --> 00:24:50,556 A:middle
about the versioning.

624
00:24:51,616 --> 00:24:55,466 A:middle
So, a number of things that
you can do about dealing

625
00:24:55,466 --> 00:24:56,546 A:middle
with framework versions.

626
00:24:57,156 --> 00:24:58,916 A:middle
First, you're going to have

627
00:24:58,916 --> 00:25:00,466 A:middle
to put a framework
version in there anyway.

628

629
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

630
00:24:58,916 --> 00:25:00,466 A:middle
to put a framework
version in there anyway.

631
00:25:01,456 --> 00:25:04,656 A:middle
The framework mechanism
when you create a new target

632
00:25:04,656 --> 00:25:06,916 A:middle
or when you create a new
project for a framework,

633
00:25:07,716 --> 00:25:08,456 A:middle
that goes in the
info [inaudible],

634
00:25:08,456 --> 00:25:11,166 A:middle
there's a short version string,
keep track of that, use that.

635
00:25:11,436 --> 00:25:13,206 A:middle
That's information that you
can use in order to figure

636
00:25:13,206 --> 00:25:14,806 A:middle
out what's happening,
what version

637
00:25:14,806 --> 00:25:15,936 A:middle
of the framework were
you linked against,

638
00:25:15,936 --> 00:25:18,076 A:middle
what version is the
data coming from?

639
00:25:18,076 --> 00:25:20,006 A:middle
You can send that data to
something else to say, hey,

640
00:25:20,006 --> 00:25:23,076 A:middle
I'm a Version 1 thing,
I'm a Version 2 thing.

641
00:25:23,296 --> 00:25:25,816 A:middle
The other thing you should
do probably is take advantage

642
00:25:25,816 --> 00:25:28,996 A:middle
of keyed archiving or keyed
archiving-like behavior.

643
00:25:29,726 --> 00:25:31,866 A:middle
Right? So if you are doing
key-value stuff as part

644
00:25:31,866 --> 00:25:36,086 A:middle
of your archiving or part of
your document format make sure

645
00:25:36,086 --> 00:25:38,216 A:middle
that your key-value pair
meanings are consistent.

646
00:25:39,326 --> 00:25:41,856 A:middle
Right? Don't suddenly
for a Version 1 key

647
00:25:41,856 --> 00:25:43,156 A:middle
that might be background color,

648
00:25:44,096 --> 00:25:46,166 A:middle
don't suddenly make
zero mean white instead

649
00:25:46,166 --> 00:25:47,406 A:middle
of black in Version 2.

650
00:25:48,756 --> 00:25:51,166 A:middle
Because then suddenly the
user's going to come along

651
00:25:51,166 --> 00:25:52,786 A:middle
and you're going to get sent
some data and they're going

652
00:25:52,786 --> 00:25:54,416 A:middle
to say, "Wow, this is
completely rendered wrong.

653
00:25:54,506 --> 00:25:54,956 A:middle
What happened?"

654
00:25:56,096 --> 00:25:59,346 A:middle
Right? So once you've committed
to what a key-value pair means

655
00:25:59,706 --> 00:26:03,056 A:middle
or what a relationship between
two key-value pairs mean inside

656

657
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

658
00:25:59,706 --> 00:26:03,056 A:middle
or what a relationship between
two key-value pairs mean inside

659
00:26:03,056 --> 00:26:04,696 A:middle
those archives that you're
sending back and forth

660
00:26:04,696 --> 00:26:07,226 A:middle
of different versions of
yourself, you really kind

661
00:26:07,226 --> 00:26:07,976 A:middle
of have to stick with it.

662
00:26:09,126 --> 00:26:10,676 A:middle
Right? We do this at Apple also.

663
00:26:10,676 --> 00:26:13,716 A:middle
There's this whole set of keys
that have sort of come along

664
00:26:13,716 --> 00:26:17,626 A:middle
to make sure that when we open
up archives from older versions

665
00:26:17,626 --> 00:26:19,566 A:middle
of the system that we can
continue to read that data.

666
00:26:19,566 --> 00:26:23,946 A:middle
You do get lots of interesting
opportunities at read

667
00:26:23,946 --> 00:26:25,586 A:middle
and write time to be
able to deal with that.

668
00:26:25,586 --> 00:26:28,636 A:middle
So, one is missing keys should
return 'nil' or the equivalent.

669
00:26:28,636 --> 00:26:31,236 A:middle
In the face of getting back
'nil' you probably want

670
00:26:31,236 --> 00:26:31,996 A:middle
to do something sane.

671
00:26:33,406 --> 00:26:35,606 A:middle
Right? If you're looking for
a key and it's not there,

672
00:26:36,106 --> 00:26:38,276 A:middle
maybe that's a great opportunity
for some default value

673
00:26:38,276 --> 00:26:40,776 A:middle
to get injected in at the
time that you're on archive.

674
00:26:41,356 --> 00:26:43,326 A:middle
Right? And that's
really the opportunity

675
00:26:43,326 --> 00:26:44,106 A:middle
to be able to do that.

676
00:26:44,106 --> 00:26:47,386 A:middle
Because the encoding and the
decoding are your chances

677
00:26:47,856 --> 00:26:49,086 A:middle
to get at that interface.

678
00:26:49,146 --> 00:26:51,346 A:middle
When you're writing that data
out, you're going to be writing

679
00:26:51,346 --> 00:26:53,336 A:middle
that data out for
consumption by somebody else.

680
00:26:53,336 --> 00:26:55,666 A:middle
When you're consuming that data
you kind of have to look at it

681
00:26:55,666 --> 00:26:58,366 A:middle
and go, well, I'm not
really sure where this comes

682
00:26:58,366 --> 00:27:00,116 A:middle
from so I should at
least be wary of it.

683

684
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

685
00:26:58,366 --> 00:27:00,116 A:middle
from so I should at
least be wary of it.

686
00:27:00,856 --> 00:27:04,256 A:middle
Right? If you're encoding
things and you know

687
00:27:04,256 --> 00:27:06,596 A:middle
that there's a bug back there
that you need to fix back

688
00:27:06,596 --> 00:27:07,796 A:middle
in Version 1 and you can do it

689
00:27:07,796 --> 00:27:10,686 A:middle
by encoding something
different, you might do that.

690
00:27:10,686 --> 00:27:11,866 A:middle
If you're looking at situations

691
00:27:11,866 --> 00:27:15,666 A:middle
where you're pulling new keys
in, the old code isn't going

692
00:27:15,666 --> 00:27:17,326 A:middle
to go looking for those
new keys, so it's going

693
00:27:17,326 --> 00:27:19,096 A:middle
to ignore those things,
you're probably pretty safe.

694
00:27:20,136 --> 00:27:23,216 A:middle
The new stuff you want to
make sure you're not stomping

695
00:27:23,216 --> 00:27:25,096 A:middle
on old keys, you're
not interfering

696
00:27:25,096 --> 00:27:26,656 A:middle
with the relationships
between keys.

697
00:27:27,296 --> 00:27:29,546 A:middle
When you encode and decode
that's your interface.

698
00:27:29,786 --> 00:27:32,336 A:middle
I know I'm writing out
four something that's going

699
00:27:32,336 --> 00:27:34,826 A:middle
to pick us up and I don't know
what version it's going to be.

700
00:27:34,826 --> 00:27:37,476 A:middle
Or, I'm getting data
back in I have no idea

701
00:27:37,476 --> 00:27:38,106 A:middle
where it's coming from.

702
00:27:38,696 --> 00:27:41,936 A:middle
Right? Make sure your
keys are unique, right?

703
00:27:41,936 --> 00:27:43,706 A:middle
If somebody's sub-classing
your stuff

704
00:27:43,706 --> 00:27:45,586 A:middle
and they're sending stuff back
and forth but they're depending

705
00:27:45,586 --> 00:27:46,966 A:middle
on your framework, you won't

706
00:27:46,966 --> 00:27:49,646 A:middle
to actually stomp
on their name space.

707
00:27:49,896 --> 00:27:54,746 A:middle
Right? So the keys, even though
we're getting some name spacing

708
00:27:54,746 --> 00:27:56,616 A:middle
behavior in Swift, the
keys in these kinds

709
00:27:56,616 --> 00:27:58,686 A:middle
of things aren't
name spaced at all.

710
00:27:58,686 --> 00:28:00,106 A:middle
So make sure they're unique.

711

712
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

713
00:27:58,686 --> 00:28:00,106 A:middle
So make sure they're unique.

714
00:28:00,106 --> 00:28:01,916 A:middle
Use the prefixes, if you want

715
00:28:01,916 --> 00:28:05,046 A:middle
to be really defensive use your
bundle ID, prefix it there.

716
00:28:05,996 --> 00:28:10,476 A:middle
One of the ways you can also
mention this, I didn't put it

717
00:28:10,476 --> 00:28:12,676 A:middle
on the slide, one of the ways
you can also work with this is

718
00:28:12,676 --> 00:28:14,236 A:middle
by conforming to
NS secure coding.

719
00:28:14,966 --> 00:28:16,576 A:middle
Right? Secure coding
will make sure

720
00:28:16,576 --> 00:28:19,996 A:middle
that you're only getting the
objects out of the archive

721
00:28:19,996 --> 00:28:21,316 A:middle
that you're expecting
to be there.

722
00:28:22,756 --> 00:28:24,626 A:middle
Also, start looking for
feature availability.

723
00:28:25,566 --> 00:28:29,276 A:middle
Right? Classes respond to
selectors for a reason.

724
00:28:29,276 --> 00:28:30,266 A:middle
If you're in some code

725
00:28:30,266 --> 00:28:32,336 A:middle
and you're using somebody else's
framework you want to make sure

726
00:28:32,336 --> 00:28:34,456 A:middle
that your code is going
to keep functioning

727
00:28:34,456 --> 00:28:35,456 A:middle
if something gets updated.

728
00:28:36,286 --> 00:28:37,726 A:middle
Check to see if it
respondsToSelector.

729
00:28:38,096 --> 00:28:39,506 A:middle
Check NSClassFromString.

730
00:28:39,506 --> 00:28:43,696 A:middle
Do those things in order to make
sure that when you're working

731
00:28:43,696 --> 00:28:46,366 A:middle
with all of this
stuff you don't wind

732
00:28:46,366 --> 00:28:48,826 A:middle
up accidently pantsing the
user and killing their app

733
00:28:48,856 --> 00:28:53,316 A:middle
because of sending a message
to a string or a variable

734
00:28:53,316 --> 00:28:56,276 A:middle
that doesn't respond to that
message except in Version 2.

735
00:28:57,666 --> 00:28:59,946 A:middle
Okay, this is all
awesome, great.

736

737
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

738
00:29:01,386 --> 00:29:04,856 A:middle
How does all this work?

739
00:29:06,356 --> 00:29:07,256 A:middle
Pretty well actually.

740
00:29:08,536 --> 00:29:12,456 A:middle
If you follow me on
the social networks

741
00:29:12,496 --> 00:29:15,506 A:middle
of the day you probably
know that I had a dog.

742
00:29:16,876 --> 00:29:17,886 A:middle
This is my dog.

743
00:29:19,436 --> 00:29:20,206 A:middle
This is Buddy.

744
00:29:20,906 --> 00:29:24,646 A:middle
He's got a 60-pound bark
and a 30-pound body.

745
00:29:24,646 --> 00:29:27,326 A:middle
He's about this tall.

746
00:29:27,826 --> 00:29:30,666 A:middle
And he's cute, and I post
a lot of pictures of my dog

747
00:29:30,666 --> 00:29:33,396 A:middle
because I can't really post
anything about work [laughter].

748
00:29:33,836 --> 00:29:40,936 A:middle
So, a lot of people
like to say, "Hey,

749
00:29:40,936 --> 00:29:42,556 A:middle
Chris, your dog is awesome."

750
00:29:44,026 --> 00:29:45,546 A:middle
You know, "Can I
borrow your dog?"

751
00:29:45,546 --> 00:29:46,836 A:middle
"I'd love to meet your dog."

752
00:29:47,786 --> 00:29:49,166 A:middle
"Your dog would be a
great part of my life."

753
00:29:49,166 --> 00:29:50,726 A:middle
I'm not giving away
my dog, sorry.

754
00:29:51,366 --> 00:29:52,146 A:middle
You can't have him.

755
00:29:52,996 --> 00:29:56,296 A:middle
But I am pleased to talk a
little bit about a prototype

756
00:29:56,296 --> 00:29:57,796 A:middle
that I've been working on.

757
00:29:58,376 --> 00:30:04,186 A:middle
It's called Budstagram
and it's a way

758

759
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

760
00:29:58,376 --> 00:30:04,186 A:middle
It's called Budstagram
and it's a way

761
00:30:04,186 --> 00:30:05,366 A:middle
that you can take your pictures

762
00:30:05,366 --> 00:30:06,786 A:middle
and put my dog into
them [laughter].

763
00:30:07,306 --> 00:30:07,373 A:middle
So --

764
00:30:08,516 --> 00:30:13,816 A:middle
[ Applause ]

765
00:30:14,316 --> 00:30:16,536 A:middle
What we'll do is I'm
going to take a quick tour

766
00:30:16,536 --> 00:30:21,546 A:middle
through Xcode both on -- for
what I've done so far with this

767
00:30:21,546 --> 00:30:25,456 A:middle
and just to walk through the
initial setup of an extension

768
00:30:25,456 --> 00:30:26,986 A:middle
and an application
and a framework.

769
00:30:27,646 --> 00:30:29,816 A:middle
But you're going to be able
to do this kind of thing.

770
00:30:29,816 --> 00:30:33,096 A:middle
The idea is -- but this is
a terrible picture isn't it?

771
00:30:33,096 --> 00:30:34,366 A:middle
This is a beach in Corsica.

772
00:30:34,366 --> 00:30:35,856 A:middle
I went on a biking
trip a while back.

773
00:30:36,806 --> 00:30:38,016 A:middle
Our ride wound up here.

774
00:30:38,016 --> 00:30:39,706 A:middle
It was absolutely gorgeous.

775
00:30:40,006 --> 00:30:41,406 A:middle
We were going to try and
stay a couple of days

776
00:30:41,406 --> 00:30:42,566 A:middle
but they weren't
going to let us do it.

777
00:30:42,566 --> 00:30:44,566 A:middle
But this is a great picture
but I really missed Buddy.

778
00:30:45,426 --> 00:30:47,106 A:middle
I'd been gone about
10 days by this point

779
00:30:47,916 --> 00:30:49,836 A:middle
and it's a great
picture but now,

780
00:30:50,506 --> 00:30:52,966 A:middle
now it's an even better
picture having been photo bombed

781
00:30:53,466 --> 00:30:54,026 A:middle
by my dog.

782
00:30:54,746 --> 00:30:54,846 A:middle
So --

783
00:30:55,516 --> 00:30:57,776 A:middle
[ Applause ]

784
00:30:58,276 --> 00:31:00,486 A:middle
We're going to take a
look at three things.

785

786
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

787
00:30:58,276 --> 00:31:00,486 A:middle
We're going to take a
look at three things.

788
00:31:01,196 --> 00:31:04,556 A:middle
Budstagram, the application,
is sort of the icon

789
00:31:04,556 --> 00:31:06,516 A:middle
that the user sees,
it's the place

790
00:31:06,516 --> 00:31:07,236 A:middle
that they're going to start.

791
00:31:07,236 --> 00:31:11,106 A:middle
Right? It's going to allow
posting and editing of photos,

792
00:31:11,516 --> 00:31:16,066 A:middle
and as long as there's a picture
of Buddy in there it'll post.

793
00:31:16,066 --> 00:31:18,416 A:middle
We'd like to allow some
comments on existing photos,

794
00:31:18,516 --> 00:31:20,146 A:middle
sort of a feed kind
of mechanism.

795
00:31:20,576 --> 00:31:24,266 A:middle
You may have seen apps like this
before somewhere, I'm not sure.

796
00:31:24,516 --> 00:31:27,106 A:middle
And we're going to have it
share a posting view controller

797
00:31:27,106 --> 00:31:27,946 A:middle
with the extension.

798
00:31:28,266 --> 00:31:29,426 A:middle
Right? We want to
share that code

799
00:31:29,426 --> 00:31:31,496 A:middle
so it winds up in both places.

800
00:31:31,926 --> 00:31:34,876 A:middle
The extension is going to allow
posting and editing of photos

801
00:31:34,876 --> 00:31:36,766 A:middle
within other apps,
but it's not going

802
00:31:36,766 --> 00:31:38,356 A:middle
to allow comments
on existing photos.

803
00:31:38,356 --> 00:31:39,796 A:middle
We're not going to put
the feed in the extension.

804
00:31:39,796 --> 00:31:41,146 A:middle
That's the business
of the application.

805
00:31:41,396 --> 00:31:43,266 A:middle
And that's actually one
thing about this architecture

806
00:31:43,266 --> 00:31:44,686 A:middle
in the frameworks and stuff
like that that you want

807
00:31:44,686 --> 00:31:45,626 A:middle
to be really careful about.

808
00:31:46,276 --> 00:31:47,486 A:middle
Right? You don't want to wind

809
00:31:47,486 --> 00:31:50,356 A:middle
up with your entire application
suddenly living in the framework

810
00:31:50,416 --> 00:31:52,806 A:middle
because not all of your
applications can be appropriate

811
00:31:52,806 --> 00:31:53,996 A:middle
for the extension or not all

812
00:31:53,996 --> 00:31:56,356 A:middle
of your applications can be
appropriate for publishing

813
00:31:56,356 --> 00:31:57,416 A:middle
as a third party framework.

814
00:31:57,526 --> 00:31:59,566 A:middle
There's the things that
are common to your service

815
00:31:59,766 --> 00:32:01,346 A:middle
and there are things that
make your app unique.

816

817
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

818
00:31:59,766 --> 00:32:01,346 A:middle
and there are things that
make your app unique.

819
00:32:02,736 --> 00:32:05,296 A:middle
Right? So you want to try and
keep those two things separate.

820
00:32:06,276 --> 00:32:08,746 A:middle
And it's going to share
the posting view controller

821
00:32:08,746 --> 00:32:09,876 A:middle
with the application obviously.

822
00:32:10,136 --> 00:32:12,116 A:middle
The framework is going

823
00:32:12,116 --> 00:32:14,106 A:middle
to contain the shared
posting view controller

824
00:32:14,386 --> 00:32:16,386 A:middle
and the shared networking code

825
00:32:16,506 --> 00:32:17,756 A:middle
for posting and things
like that.

826
00:32:17,756 --> 00:32:18,546 A:middle
And the model code.

827
00:32:18,786 --> 00:32:21,436 A:middle
Right? All the stuff that
makes up the common things

828
00:32:21,436 --> 00:32:23,376 A:middle
that the extension needs
to know to be able to deal

829
00:32:23,376 --> 00:32:26,116 A:middle
with the objects that the
applications also deal with.

830
00:32:26,606 --> 00:32:29,626 A:middle
So we have the Budstagram
application here.

831
00:32:30,506 --> 00:32:33,386 A:middle
And if I tap on it,
there's Bud in Corsica,

832
00:32:33,386 --> 00:32:37,026 A:middle
this is the feed here,
and if we were going

833
00:32:37,026 --> 00:32:38,316 A:middle
to post something
here, this is a picture

834
00:32:38,316 --> 00:32:39,946 A:middle
of my parents' backyard

835
00:32:39,946 --> 00:32:44,276 A:middle
in Connecticut looking very
New England in the fall

836
00:32:44,276 --> 00:32:45,946 A:middle
and it's very pretty and
I can't bring Bud there

837
00:32:45,946 --> 00:32:46,906 A:middle
because he doesn't like to fly.

838
00:32:48,176 --> 00:32:49,536 A:middle
We've got this app,
we've got the extension,

839
00:32:49,536 --> 00:32:50,236 A:middle
they work together.

840
00:32:50,236 --> 00:32:52,466 A:middle
You're going to be able to
take data from the extension,

841
00:32:52,466 --> 00:32:55,136 A:middle
throw it into the application
and the code that you're going

842
00:32:55,136 --> 00:32:57,146 A:middle
to share between the
two, you're only going

843
00:32:57,146 --> 00:32:59,306 A:middle
to use in the framework.

844
00:32:59,356 --> 00:33:02,396 A:middle
So you don't have to be
jocking targets, you don't have

845

846
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

847
00:32:59,356 --> 00:33:02,396 A:middle
So you don't have to be
jocking targets, you don't have

848
00:33:02,396 --> 00:33:04,126 A:middle
to be shuffling stuff
around, things like that.

849
00:33:04,126 --> 00:33:05,666 A:middle
So, let's take a look at Xcode.

850
00:33:06,576 --> 00:33:08,636 A:middle
So let's take a look
at a new Xcode project.

851
00:33:08,636 --> 00:33:12,406 A:middle
I'm going to start from scratch
here mostly to give you sort

852
00:33:12,406 --> 00:33:15,206 A:middle
of an orientation before I start
jumping around in Budstagram

853
00:33:15,206 --> 00:33:16,066 A:middle
to show you what I did.

854
00:33:16,066 --> 00:33:20,416 A:middle
So, what we've got here
is the start of, say,

855
00:33:20,416 --> 00:33:22,676 A:middle
a tabbed application or
a page-based application.

856
00:33:22,676 --> 00:33:25,196 A:middle
Let's go with the single
view application here just

857
00:33:25,196 --> 00:33:26,196 A:middle
for the basics.

858
00:33:26,336 --> 00:33:30,066 A:middle
We'll call this framework
example

859
00:33:30,066 --> 00:33:31,836 A:middle
because I'm not particularly
creative.

860
00:33:33,196 --> 00:33:36,106 A:middle
And we've got a language
choice here, I'm going to stick

861
00:33:36,106 --> 00:33:39,026 A:middle
with Objective-C for a
minute and we'll just --

862
00:33:39,636 --> 00:33:44,896 A:middle
oh, I am not an organization
unto myself, so we'll call

863
00:33:45,746 --> 00:33:47,316 A:middle
that Apple, Incorporated.

864
00:33:47,316 --> 00:33:49,286 A:middle
Desktop will create this.

865
00:33:49,996 --> 00:33:52,416 A:middle
So we've got here now
is just an application.

866
00:33:53,396 --> 00:33:57,506 A:middle
Right? And there's some
different things here,

867
00:33:57,506 --> 00:34:00,396 A:middle
there's some build settings, and
build phases, and all this stuff

868

869
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

870
00:33:57,506 --> 00:34:00,396 A:middle
there's some build settings, and
build phases, and all this stuff

871
00:34:00,396 --> 00:34:01,176 A:middle
that you're familiar with.

872
00:34:01,206 --> 00:34:04,396 A:middle
You'll see the link binary
with libraries bit here.

873
00:34:05,046 --> 00:34:07,346 A:middle
And if you were just going

874
00:34:07,346 --> 00:34:08,775 A:middle
to have an application
this would be fine,

875
00:34:08,775 --> 00:34:11,596 A:middle
you'd work with this and
you'd put all of your code in

876
00:34:11,596 --> 00:34:13,956 A:middle
and your tabs and you'd work
with your targets and things

877
00:34:13,956 --> 00:34:15,866 A:middle
like that, but we're
actually going to go ahead

878
00:34:15,866 --> 00:34:17,036 A:middle
and create a new target here.

879
00:34:17,036 --> 00:34:19,976 A:middle
And we'll create a new
framework and library target,

880
00:34:19,976 --> 00:34:20,996 A:middle
a Cocoa Touch Framework.

881
00:34:22,795 --> 00:34:28,886 A:middle
We'll call this --
let's call it Budstakit.

882
00:34:28,886 --> 00:34:30,406 A:middle
And you'll see two
new things here.

883
00:34:30,406 --> 00:34:33,426 A:middle
It says here the project is
the framework example here,

884
00:34:33,985 --> 00:34:36,186 A:middle
and embed in application
framework example.

885
00:34:36,186 --> 00:34:41,616 A:middle
So, we're creating this new
framework and Xcode's also going

886
00:34:41,616 --> 00:34:44,036 A:middle
to set it up so that when
a framework builds and then

887
00:34:44,036 --> 00:34:46,146 A:middle
when you go and archive
it all that stuff winds

888
00:34:46,146 --> 00:34:47,016 A:middle
up in the right place.

889
00:34:48,005 --> 00:34:49,056 A:middle
So we can do Finish here.

890
00:34:49,716 --> 00:34:53,146 A:middle
And now we've got the link
binary with libraries there.

891
00:34:53,146 --> 00:34:54,856 A:middle
Budstakit framework is required.

892
00:34:56,376 --> 00:34:58,886 A:middle
And let's go ahead and actually
create the extension here too

893
00:34:58,886 --> 00:34:59,546 A:middle
while we're at it.

894
00:34:59,576 --> 00:35:00,986 A:middle
So here's an application
extension.

895

896
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

897
00:34:59,576 --> 00:35:00,986 A:middle
So here's an application
extension.

898
00:35:01,636 --> 00:35:04,086 A:middle
We'll use a share extension.

899
00:35:04,086 --> 00:35:12,596 A:middle
Okay, and this'll be the
BudstaPosting extension.

900
00:35:13,176 --> 00:35:20,836 A:middle
Okay. So now we've got
BudstaKit, BudstaPosting.

901
00:35:21,436 --> 00:35:27,096 A:middle
The BudstaPosting bits have the
share view controller in here,

902
00:35:27,316 --> 00:35:29,526 A:middle
and a storyboard for that.

903
00:35:29,976 --> 00:35:31,486 A:middle
Let's see.

904
00:35:32,036 --> 00:35:36,786 A:middle
We pause for station
identification.

905
00:35:37,616 --> 00:35:40,986 A:middle
So there's nothing in
BudstaKit right now.

906
00:35:41,506 --> 00:35:42,366 A:middle
There's nothing in the --

907
00:35:42,366 --> 00:35:45,086 A:middle
there's this sort of empty
share view controller in here.

908
00:35:45,086 --> 00:35:47,266 A:middle
And we've got this
ViewController

909
00:35:47,266 --> 00:35:50,276 A:middle
for the framework example
for the application.

910
00:35:50,816 --> 00:35:54,056 A:middle
One of the things that I
mentioned before was I wanted

911
00:35:54,056 --> 00:35:56,746 A:middle
to be able to have the share
view controller be part

912
00:35:56,746 --> 00:35:57,606 A:middle
of the framework.

913
00:35:57,606 --> 00:35:59,216 A:middle
Right? Because I
want to use that both

914
00:35:59,216 --> 00:36:03,816 A:middle
in Budstagram itself
and in the extension.

915

916
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

917
00:35:59,216 --> 00:36:03,816 A:middle
in Budstagram itself
and in the extension.

918
00:36:04,556 --> 00:36:06,046 A:middle
BudstaPosting is the extension.

919
00:36:06,816 --> 00:36:09,926 A:middle
All of this stuff,
if we go look,

920
00:36:09,926 --> 00:36:11,726 A:middle
let's take a quick look
at the Finder here.

921
00:36:12,306 --> 00:36:18,016 A:middle
Actually, if we go look in the
framework example folder, right,

922
00:36:18,766 --> 00:36:22,606 A:middle
Xcodes are organizing all
the code in directories here,

923
00:36:22,826 --> 00:36:26,866 A:middle
but the directory -- obviously
directory hierarchy is not

924
00:36:26,866 --> 00:36:30,016 A:middle
necessarily reflected in how
Xcode shows that in its files

925
00:36:31,276 --> 00:36:31,746 A:middle
and groups thing here.

926
00:36:31,746 --> 00:36:40,606 A:middle
But we're going to just move
these guys up into here.

927
00:36:42,106 --> 00:36:44,666 A:middle
So I'm just making the
share view controller part

928
00:36:44,666 --> 00:36:46,666 A:middle
of the BudstaKit group,
it's not actually moved

929
00:36:46,666 --> 00:36:50,316 A:middle
out of the directory that
it's in behind the scenes.

930
00:36:50,356 --> 00:36:53,176 A:middle
But, you know, if you feel like
you want to do that go ahead

931
00:36:53,176 --> 00:36:54,756 A:middle
and move it with your
version controller system

932
00:36:54,756 --> 00:36:56,226 A:middle
over into the right spot.

933
00:36:56,596 --> 00:36:58,926 A:middle
Here in the BudstaKit header
I'm going to go ahead and,

934
00:36:59,126 --> 00:37:00,116 A:middle
it says here, in this header,

935

936
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

937
00:36:59,126 --> 00:37:00,116 A:middle
it says here, in this header,

938
00:37:00,116 --> 00:37:01,736 A:middle
you should import all
the public headers

939
00:37:01,736 --> 00:37:03,456 A:middle
of your framework
using statements

940
00:37:03,456 --> 00:37:05,256 A:middle
like import BudstaKit
PublicHeader.

941
00:37:05,256 --> 00:37:14,906 A:middle
So let's do import
BudstaKit ShareViewController.

942
00:37:15,436 --> 00:37:17,996 A:middle
Hello code completion.

943
00:37:18,446 --> 00:37:22,956 A:middle
And then we need to make
sure that we change these

944
00:37:22,956 --> 00:37:24,176 A:middle
to be part of the right targets.

945
00:37:24,176 --> 00:37:27,456 A:middle
Over here on the right-hand side
ShareViewController.m is part

946
00:37:27,456 --> 00:37:29,756 A:middle
of the BudstaPosting target, we
actually want to make it part

947
00:37:29,756 --> 00:37:30,816 A:middle
of the BudstaKit target.

948
00:37:30,816 --> 00:37:32,776 A:middle
And the thing that
you're going to do

949
00:37:32,776 --> 00:37:33,946 A:middle
with the frameworks is different

950
00:37:33,946 --> 00:37:35,846 A:middle
than what you've probably
been doing before,

951
00:37:35,846 --> 00:37:38,476 A:middle
is within a framework
there are some designations

952
00:37:38,476 --> 00:37:39,916 A:middle
for what a header means.

953
00:37:39,916 --> 00:37:42,306 A:middle
So, you're actually going
to wind up adding the header

954
00:37:42,606 --> 00:37:44,266 A:middle
to be part of the
target of the framework,

955
00:37:44,906 --> 00:37:46,586 A:middle
which isn't necessarily
something you've really

956
00:37:46,586 --> 00:37:47,136 A:middle
done before.

957
00:37:47,136 --> 00:37:49,186 A:middle
Right? Usually you use
the headers, the .m's,

958
00:37:49,186 --> 00:37:50,666 A:middle
or the .s's are part
of the framework --

959
00:37:51,006 --> 00:37:53,746 A:middle
or the target, the headers are
just loose, they never wind

960
00:37:53,746 --> 00:37:54,476 A:middle
up getting distributed.

961
00:37:54,676 --> 00:37:56,506 A:middle
So since this is a framework
and you're going to hand it

962
00:37:56,506 --> 00:37:57,656 A:middle
out to people, you're
going to be handing it

963
00:37:57,656 --> 00:37:59,276 A:middle
out to other developers on
your team, you're going to want

964
00:37:59,276 --> 00:38:01,796 A:middle
to tell us whether this
thing is a project header,

965

966
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

967
00:37:59,276 --> 00:38:01,796 A:middle
to tell us whether this
thing is a project header,

968
00:38:02,076 --> 00:38:03,706 A:middle
a private header,
or a public header.

969
00:38:04,806 --> 00:38:07,966 A:middle
Right? So the project header
means that only things

970
00:38:07,966 --> 00:38:09,036 A:middle
within the project can see it.

971
00:38:09,976 --> 00:38:11,136 A:middle
The private header goes --

972
00:38:11,136 --> 00:38:12,676 A:middle
anything that's marked
as a private header goes

973
00:38:12,676 --> 00:38:15,416 A:middle
into a private header's
directory inside the framework

974
00:38:15,866 --> 00:38:17,176 A:middle
when that framework gets built.

975
00:38:18,396 --> 00:38:22,686 A:middle
Right? The public portion of it
is obviously the public headers,

976
00:38:22,776 --> 00:38:25,196 A:middle
it's the headers that are just
in the headers directory there.

977
00:38:25,196 --> 00:38:27,996 A:middle
I'm going to make
this a public header.

978
00:38:27,996 --> 00:38:30,656 A:middle
You might use private
headers because just

979
00:38:30,656 --> 00:38:33,346 A:middle
like us you've got SPI that
you don't want people to use

980
00:38:33,346 --> 00:38:36,096 A:middle
but it's really handy to be
able to use it internally

981
00:38:36,276 --> 00:38:37,686 A:middle
or across two projects,

982
00:38:38,046 --> 00:38:40,256 A:middle
and maybe that SPI is something
you want to publish later

983
00:38:40,256 --> 00:38:43,416 A:middle
but it's not quite bulletproof
enough to be able to be API now.

984
00:38:43,796 --> 00:38:45,026 A:middle
You'll put that in
a private header.

985
00:38:45,456 --> 00:38:47,976 A:middle
If you publish your
framework, don't forget

986
00:38:47,976 --> 00:38:50,666 A:middle
to remove the private headers
directory from the framework,

987
00:38:51,266 --> 00:38:55,386 A:middle
because then everybody
can grope all over it.

988
00:38:56,326 --> 00:39:00,546 A:middle
So, and then down here in the
BudstaPosting thing, well,

989

990
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

991
00:38:56,326 --> 00:39:00,546 A:middle
So, and then down here in the
BudstaPosting thing, well,

992
00:39:00,546 --> 00:39:01,946 A:middle
we're going to have
to edit the target.

993
00:39:02,086 --> 00:39:06,056 A:middle
So, let's go back up to
this framework example here,

994
00:39:06,266 --> 00:39:08,876 A:middle
and if I look at BudstaKit,

995
00:39:08,876 --> 00:39:11,296 A:middle
BudstaKit is linking
with no libraries.

996
00:39:11,296 --> 00:39:13,426 A:middle
The framework example is
linking with BudstaKit.

997
00:39:13,606 --> 00:39:16,946 A:middle
I need to make BudstaPosting
link with BudstaKit,

998
00:39:16,946 --> 00:39:20,496 A:middle
so what I can do is just drag
this guy here -- no, okay.

999
00:39:20,926 --> 00:39:24,066 A:middle
We'll pick a plus, we'll choose
BudstaKit from the project,

1000
00:39:24,926 --> 00:39:27,456 A:middle
and now all of those
things will link together.

1001
00:39:27,456 --> 00:39:30,276 A:middle
So now ShareViewController
is now part of the framework.

1002
00:39:31,536 --> 00:39:35,746 A:middle
Since BudstaPosting the
extension links the framework

1003
00:39:35,746 --> 00:39:37,246 A:middle
and the app links the
framework they can both

1004
00:39:37,246 --> 00:39:38,866 A:middle
use ShareViewController.

1005
00:39:38,866 --> 00:39:41,556 A:middle
Let's go ahead and build
that for the simulator.

1006
00:39:42,126 --> 00:39:45,086 A:middle
And then let's take
a quick look here

1007
00:39:45,086 --> 00:39:46,636 A:middle
at what actually got produced.

1008
00:39:46,636 --> 00:39:49,186 A:middle
So, if we go look at -- I moved
my build directory up here

1009
00:39:49,186 --> 00:39:51,026 A:middle
on the desktop so it
would be easier to find.

1010
00:39:51,626 --> 00:39:54,756 A:middle
And if we go look in products
here, we've got a couple

1011
00:39:54,756 --> 00:39:55,756 A:middle
of different products based

1012
00:39:55,756 --> 00:39:59,296 A:middle
on our target configuration
and our target.

1013
00:39:59,516 --> 00:40:02,776 A:middle
Here's sort of everything
spread out.

1014

1015
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1016
00:39:59,516 --> 00:40:02,776 A:middle
Here's sort of everything
spread out.

1017
00:40:02,776 --> 00:40:04,656 A:middle
Right? So here's
BudstaKit.framework.

1018
00:40:04,656 --> 00:40:05,696 A:middle
Here's the app.

1019
00:40:06,126 --> 00:40:08,866 A:middle
Here's my Budstagram application
that I was building earlier.

1020
00:40:08,866 --> 00:40:12,336 A:middle
Let's look at framework example.

1021
00:40:12,526 --> 00:40:15,546 A:middle
Inside that is now a couple
of different directories.

1022
00:40:15,546 --> 00:40:18,356 A:middle
This frameworks directory has
the BudstaKit framework inside

1023
00:40:18,356 --> 00:40:21,776 A:middle
of it and let's get
all old school

1024
00:40:21,776 --> 00:40:22,976 A:middle
and go look in the
terminal here.

1025
00:40:32,256 --> 00:40:33,556 A:middle
The old tricks are the best.

1026
00:40:33,936 --> 00:40:36,756 A:middle
And the BudstaKit framework
has inside it this headers

1027
00:40:36,756 --> 00:40:39,766 A:middle
directory, and a module.

1028
00:40:40,666 --> 00:40:44,516 A:middle
Modules are generated for use
with Swift and for the module

1029
00:40:44,516 --> 00:40:46,166 A:middle
at import directive
for Objective-C.

1030
00:40:46,166 --> 00:40:47,966 A:middle
There's some nifty things
that go along with that.

1031
00:40:47,966 --> 00:40:49,296 A:middle
But those are things
that you should read

1032
00:40:49,296 --> 00:40:50,626 A:middle
about in the Xcode
documentation.

1033
00:40:50,756 --> 00:40:54,496 A:middle
So, the framework is built
into the application,

1034
00:40:54,496 --> 00:40:58,146 A:middle
that's actually one thing to
be aware of is you're going

1035
00:40:58,146 --> 00:41:00,686 A:middle
to have multiple copies of the
frameworks on disk at a time.

1036

1037
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1038
00:40:58,146 --> 00:41:00,686 A:middle
to have multiple copies of the
frameworks on disk at a time.

1039
00:41:00,686 --> 00:41:03,816 A:middle
We're not sharing frameworks
across sandbox boundaries.

1040
00:41:03,816 --> 00:41:06,656 A:middle
Right? Things inside the same
sandbox could access the same

1041
00:41:06,656 --> 00:41:09,526 A:middle
framework, but we're not
letting you use the framework

1042
00:41:09,526 --> 00:41:11,376 A:middle
out of some other
application installed even

1043
00:41:11,376 --> 00:41:12,046 A:middle
if it's one of your own.

1044
00:41:12,046 --> 00:41:14,886 A:middle
All right, so all of these
things get imbedded directly

1045
00:41:14,886 --> 00:41:15,576 A:middle
in the application.

1046
00:41:15,576 --> 00:41:20,006 A:middle
So your apps are still
completely stand-alone items.

1047
00:41:20,896 --> 00:41:25,496 A:middle
So, let's go back to this
and take a quick look here.

1048
00:41:25,956 --> 00:41:32,076 A:middle
Because the extension is its own
little application some things

1049
00:41:32,076 --> 00:41:33,226 A:middle
you need to be aware
of are things

1050
00:41:33,226 --> 00:41:35,326 A:middle
like NSBundleMainBundle
isn't going

1051
00:41:35,326 --> 00:41:36,556 A:middle
to work exactly the
way you think.

1052
00:41:36,636 --> 00:41:38,196 A:middle
So you're going to have
to go look for assets

1053
00:41:38,586 --> 00:41:43,496 A:middle
by bundle identifier
using the bundle API.

1054
00:41:43,806 --> 00:41:45,576 A:middle
No that isn't a bug
I ran into myself

1055
00:41:45,576 --> 00:41:48,706 A:middle
that I introduced,
why do you ask?

1056
00:41:49,256 --> 00:41:54,826 A:middle
So, and the ShareViewController
has the standard extension stuff

1057
00:41:54,826 --> 00:41:56,986 A:middle
here for things like
isContentValid, didSelect.

1058
00:41:56,986 --> 00:42:00,916 A:middle
These are peculiar to
the ShareViewController

1059

1060
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1061
00:41:56,986 --> 00:42:00,916 A:middle
These are peculiar to
the ShareViewController

1062
00:42:00,916 --> 00:42:03,506 A:middle
but there are other API on
all the other extensions

1063
00:42:03,506 --> 00:42:04,856 A:middle
that are specific
to those as well.

1064
00:42:05,546 --> 00:42:07,896 A:middle
So let's actually take a look
and see how I sort of divided

1065
00:42:07,896 --> 00:42:10,196 A:middle
up BudstaKit and Budstagram.

1066
00:42:11,286 --> 00:42:18,626 A:middle
So, there are a lot of
really similar things here

1067
00:42:18,626 --> 00:42:21,116 A:middle
to the way everything
got broken down.

1068
00:42:22,216 --> 00:42:26,736 A:middle
Not really tall enough to
point up there but you'll see

1069
00:42:26,736 --> 00:42:30,066 A:middle
that we've got the
feed view controller

1070
00:42:30,066 --> 00:42:32,516 A:middle
and a posting view controller,
which are the two things

1071
00:42:32,516 --> 00:42:35,396 A:middle
that you saw in the tab
view in the demo earlier,

1072
00:42:35,816 --> 00:42:38,816 A:middle
and then the main storyboard
contains those two things.

1073
00:42:38,816 --> 00:42:40,726 A:middle
And then there's a bunch
of model code that's

1074
00:42:40,726 --> 00:42:43,446 A:middle
down in BudstaKit, and
BudstaKit has all of the stuff

1075
00:42:43,806 --> 00:42:46,646 A:middle
like the public umbrella header.

1076
00:42:47,516 --> 00:42:50,736 A:middle
Right? So just like you just
type importUIKit.h you should

1077
00:42:50,736 --> 00:42:51,856 A:middle
setting your umbrella header

1078
00:42:51,856 --> 00:42:53,166 A:middle
in your framework to
do the same thing.

1079
00:42:53,166 --> 00:42:57,846 A:middle
Put all your public API in there
so you'll import BudstaKit.h.

1080
00:42:58,086 --> 00:43:00,266 A:middle
Or at list I hope
you will someday.

1081

1082
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1083
00:42:58,086 --> 00:43:00,266 A:middle
Or at list I hope
you will someday.

1084
00:43:00,306 --> 00:43:03,036 A:middle
And then also, all of the model
codes down there, so the thing

1085
00:43:03,036 --> 00:43:04,416 A:middle
that manages a post is there.

1086
00:43:04,756 --> 00:43:06,786 A:middle
And the post view
that displays a post

1087
00:43:06,786 --> 00:43:10,876 A:middle
with the dog resizable there

1088
00:43:10,876 --> 00:43:12,346 A:middle
and the ShareViewController
and things like that.

1089
00:43:12,346 --> 00:43:14,096 A:middle
And then down here in
the Budstagram poster,

1090
00:43:14,096 --> 00:43:15,016 A:middle
again, it's the same thing.

1091
00:43:15,016 --> 00:43:17,046 A:middle
It's just the main
interface storyboard,

1092
00:43:17,046 --> 00:43:19,066 A:middle
the empty storyboard, which
says when you call up one

1093
00:43:19,066 --> 00:43:21,666 A:middle
of these things this is the
storyboard to launch into.

1094
00:43:21,766 --> 00:43:25,516 A:middle
Right now in the
extension that's it, right?

1095
00:43:25,516 --> 00:43:27,876 A:middle
There's other logic that
lives in the framework

1096
00:43:27,876 --> 00:43:30,366 A:middle
that does all the other
work, the sending of the data

1097
00:43:30,366 --> 00:43:33,506 A:middle
and the manipulation of the
photo and things like that.

1098
00:43:34,546 --> 00:43:36,856 A:middle
So making sure that you're
pulling all of these things

1099
00:43:36,856 --> 00:43:40,936 A:middle
down into the right place
is very, very, important.

1100
00:43:41,836 --> 00:43:44,296 A:middle
Most of those 13 years I've
spent doing frameworks I've

1101
00:43:44,296 --> 00:43:46,406 A:middle
worked for a lot of really
talented frameworks developers,

1102
00:43:46,406 --> 00:43:51,276 A:middle
a lot of this stuff is
tremendously hard-won lessons

1103
00:43:51,276 --> 00:43:52,466 A:middle
from shipping software.

1104
00:43:53,136 --> 00:43:57,046 A:middle
Right? Being clear,
being explicit,

1105
00:43:57,806 --> 00:44:01,136 A:middle
having the right amount of
API, having expressive API,

1106

1107
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1108
00:43:57,806 --> 00:44:01,136 A:middle
having the right amount of
API, having expressive API,

1109
00:44:01,716 --> 00:44:04,086 A:middle
distributing things in the
right way, being careful

1110
00:44:04,086 --> 00:44:06,406 A:middle
of your versions, making
sure that you're working

1111
00:44:06,406 --> 00:44:09,986 A:middle
with data safely, getting
the right abstractions.

1112
00:44:10,106 --> 00:44:13,786 A:middle
Right? All of those things make
our lives much, much easier.

1113
00:44:13,786 --> 00:44:16,136 A:middle
Taking that frameworks approach
even to the applications.

1114
00:44:16,136 --> 00:44:19,726 A:middle
If you look at most of our
applications, on the books,

1115
00:44:20,536 --> 00:44:21,926 A:middle
you know, Maps has MapKit.

1116
00:44:23,216 --> 00:44:26,036 A:middle
Right? On iOS 8,
Health has HealthKit.

1117
00:44:27,326 --> 00:44:31,446 A:middle
Right? All of the things that
make the app function and useful

1118
00:44:31,446 --> 00:44:32,796 A:middle
to the user live in the app.

1119
00:44:32,876 --> 00:44:35,896 A:middle
All of the heavy lifting,
all of the shared code,

1120
00:44:35,896 --> 00:44:38,006 A:middle
all of the interfaces that
allow the things to work

1121
00:44:38,006 --> 00:44:40,206 A:middle
with your app go in
those frameworks.

1122
00:44:40,616 --> 00:44:42,856 A:middle
Right? It's a great
separation for us,

1123
00:44:42,856 --> 00:44:44,666 A:middle
it's what helps us
ship software,

1124
00:44:45,076 --> 00:44:47,216 A:middle
it can be a great
separation for you as well.

1125
00:44:47,586 --> 00:44:50,206 A:middle
There are some related
sessions that happened earlier

1126
00:44:50,206 --> 00:44:51,706 A:middle
in the week and there's
one tomorrow.

1127
00:44:51,706 --> 00:44:54,306 A:middle
Creating Extensions
for iOS and OS X,

1128
00:44:54,756 --> 00:44:57,206 A:middle
Parts 1 and 2 were earlier.

1129
00:44:57,516 --> 00:45:00,696 A:middle
Go watch those for breaking
up things into the extensions

1130

1131
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1132
00:44:57,516 --> 00:45:00,696 A:middle
Go watch those for breaking
up things into the extensions

1133
00:45:00,696 --> 00:45:02,586 A:middle
and into the mechanics
of setting extensions up.

1134
00:45:03,296 --> 00:45:05,646 A:middle
Right? And then apply some of
the stuff that you got here

1135
00:45:05,646 --> 00:45:07,706 A:middle
or some of the stuff
that you got from Andy

1136
00:45:07,706 --> 00:45:09,356 A:middle
and Collin's talk previously,

1137
00:45:09,356 --> 00:45:12,216 A:middle
in the previous hour,
to all of that.

1138
00:45:12,476 --> 00:45:14,776 A:middle
And then sharing code
between iOS and OS X.

1139
00:45:14,996 --> 00:45:19,366 A:middle
A lot of you work on
both platforms and a lot

1140
00:45:19,366 --> 00:45:22,336 A:middle
of the model code and things
like that is actually shareable.

1141
00:45:22,336 --> 00:45:25,856 A:middle
And much of the extensions
API was developed specifically

1142
00:45:25,856 --> 00:45:27,376 A:middle
with an eye to being
able to write

1143
00:45:27,686 --> 00:45:31,916 A:middle
as much cross-platform code
as possible with as little

1144
00:45:31,916 --> 00:45:34,026 A:middle
of the #ifs for target
OS as we could manage.

1145
00:45:34,646 --> 00:45:37,116 A:middle
Right? So you will be
able to do a fair amount

1146
00:45:37,116 --> 00:45:39,996 A:middle
of code sharing even for
extensions in iOS and OS X.

1147
00:45:40,126 --> 00:45:42,836 A:middle
That's right here tomorrow
morning at 9:00 am.

1148
00:45:43,366 --> 00:45:43,996 A:middle
Bright and early.

1149
00:45:44,416 --> 00:45:47,746 A:middle
Okay? So, please have an
absolutely fantastic remainder

1150
00:45:47,746 --> 00:45:47,956 A:middle
of the week.

1151
00:45:47,956 --> 00:45:48,246 A:middle
Enjoy the bash.

1152
00:45:48,246 --> 00:45:48,976 A:middle
Thank you, very much.

1153
00:45:49,516 --> 00:45:54,730 A:middle
[ Applause ]

1154
