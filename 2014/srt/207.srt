X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1
00:00:13,046 --> 00:00:16,406 A:middle
>> Welcome, welcome to Session
207: Accessibility on OS X.

2
00:00:16,406 --> 00:00:18,976 A:middle
My name is Patti Hoa.

3
00:00:18,976 --> 00:00:22,046 A:middle
I'm a software engineer on
the OS X Accessibility team.

4
00:00:22,716 --> 00:00:27,396 A:middle
Today my colleague Chris Dolan
and I are extremely excited

5
00:00:27,396 --> 00:00:30,886 A:middle
to tell you about this brand
new API was have installed

6
00:00:30,886 --> 00:00:33,866 A:middle
for you that's designed
to make your life simpler.

7
00:00:34,426 --> 00:00:38,216 A:middle
But before I talk about
that, I want to just touch

8
00:00:38,216 --> 00:00:42,656 A:middle
up on the importance of
accessibility, and what it means

9
00:00:42,766 --> 00:00:46,536 A:middle
for your application to
be accessible to everyone.

10
00:00:47,236 --> 00:00:51,876 A:middle
Then I'll show you some examples
of how to use this new API

11
00:00:52,656 --> 00:00:55,156 A:middle
to make some UI's accessible,

12
00:00:55,676 --> 00:00:58,836 A:middle
and then I'll also show you
some tools that you can use

13
00:00:58,836 --> 00:01:00,246 A:middle
to verify your changes.

14

15
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

16
00:00:58,836 --> 00:01:00,246 A:middle
to verify your changes.

17
00:01:01,346 --> 00:01:04,926 A:middle
Then in the latter half of this
session, Chris will come up

18
00:01:05,275 --> 00:01:09,066 A:middle
and give you a live demo of
making a game accessible.

19
00:01:09,586 --> 00:01:12,906 A:middle
So, at Apple, we really care

20
00:01:12,906 --> 00:01:17,456 A:middle
about providing the best
platform for all users to have

21
00:01:17,456 --> 00:01:19,826 A:middle
that great and wonderful
experience

22
00:01:20,136 --> 00:01:22,116 A:middle
when using your application.

23
00:01:22,776 --> 00:01:25,486 A:middle
And when I say all
users, I mean users

24
00:01:25,616 --> 00:01:28,506 A:middle
with various ranges
of abilities.

25
00:01:29,276 --> 00:01:33,576 A:middle
That includes those who may be
visually challenged, and may...

26
00:01:33,576 --> 00:01:38,096 A:middle
(excuse me) ...those who
may be visually challenged

27
00:01:38,096 --> 00:01:41,386 A:middle
and have trouble seeing
the colors and the graphics

28
00:01:41,386 --> 00:01:45,716 A:middle
on the application: those who
are deaf and hard-of-hearing,

29
00:01:45,716 --> 00:01:48,386 A:middle
who may not be able to
hear the sound feedback

30
00:01:48,386 --> 00:01:53,176 A:middle
in the application; those who
may have mobility limitation,

31
00:01:53,436 --> 00:01:56,636 A:middle
and may not be able to use the
physical mouse or keyboard.

32
00:01:57,146 --> 00:02:01,296 A:middle
Well to achieve the
goal of making sure

33

34
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

35
00:01:57,146 --> 00:02:01,296 A:middle
Well to achieve the
goal of making sure

36
00:02:01,296 --> 00:02:03,916 A:middle
that everyone could
have equal access,

37
00:02:04,316 --> 00:02:08,076 A:middle
at Apple we work really
hard to provide tons

38
00:02:08,076 --> 00:02:11,656 A:middle
of accessibility solutions
built right into OS X,

39
00:02:11,656 --> 00:02:15,836 A:middle
and that includes products
such as: VoiceOver,

40
00:02:16,196 --> 00:02:19,816 A:middle
designed for the visually
impaired user; Switch Control,

41
00:02:20,146 --> 00:02:23,056 A:middle
designed for mobility impaired
users who may only be able

42
00:02:23,056 --> 00:02:26,236 A:middle
to use a single switch
to operate the computer;

43
00:02:26,936 --> 00:02:32,186 A:middle
Closed Captioning for the deaf
and hard of hearing; and tons

44
00:02:32,186 --> 00:02:35,786 A:middle
and tons of other great
accessibility features built

45
00:02:35,786 --> 00:02:36,786 A:middle
right into OS X.

46
00:02:37,756 --> 00:02:42,066 A:middle
But all of these features
are simply tools for the user

47
00:02:42,066 --> 00:02:43,966 A:middle
to use your application.

48
00:02:45,766 --> 00:02:50,106 A:middle
After all, it's your application
that they're looking at, whether

49
00:02:50,106 --> 00:02:55,176 A:middle
or not it's to read an
article or to watch a movie.

50
00:02:55,776 --> 00:02:59,066 A:middle
It is your application that
they're interacting with,

51
00:02:59,366 --> 00:03:05,156 A:middle
whether it's to play a game
or to write a term paper.

52

53
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

54
00:02:59,366 --> 00:03:05,156 A:middle
whether it's to play a game
or to write a term paper.

55
00:03:05,156 --> 00:03:07,676 A:middle
It's your application
at the end of the day

56
00:03:07,866 --> 00:03:10,636 A:middle
that they're looking
forward to use every day.

57
00:03:10,636 --> 00:03:13,246 A:middle
So how do you make sure

58
00:03:13,246 --> 00:03:16,326 A:middle
that your application is
accessible to everyone?

59
00:03:17,206 --> 00:03:19,686 A:middle
Well we've built a
foundation for you

60
00:03:19,686 --> 00:03:21,446 A:middle
to build your application.

61
00:03:22,056 --> 00:03:25,456 A:middle
And we have this what we
call "Accessibility API"

62
00:03:25,616 --> 00:03:28,276 A:middle
that you can implement to
make sure your application's

63
00:03:28,276 --> 00:03:29,856 A:middle
accessible to everyone.

64
00:03:30,526 --> 00:03:33,936 A:middle
So, I want to spend the rest
of this session telling you

65
00:03:33,936 --> 00:03:38,176 A:middle
about this API, but the first
thing I want to tell you is

66
00:03:38,226 --> 00:03:40,516 A:middle
to give you the big picture

67
00:03:40,516 --> 00:03:43,866 A:middle
of how this Accessibility
API works in the system.

68
00:03:44,636 --> 00:03:46,926 A:middle
So first there's
your application,

69
00:03:47,076 --> 00:03:50,756 A:middle
and then we have what we
call assistive softwares,

70
00:03:50,756 --> 00:03:54,746 A:middle
such as VoiceOver and Switch
Control, that help users

71
00:03:54,966 --> 00:03:58,516 A:middle
to perceive, understand, and
interact with your application.

72
00:03:58,516 --> 00:04:02,626 A:middle
And that happens through a
channel, on what we call...

73

74
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

75
00:03:58,516 --> 00:04:02,626 A:middle
And that happens through a
channel, on what we call...

76
00:04:03,816 --> 00:04:05,986 A:middle
Accessibility API.

77
00:04:06,766 --> 00:04:10,426 A:middle
And so, that's what I want
to talk to you about today:

78
00:04:10,426 --> 00:04:15,486 A:middle
it's this Accessibility API
which, for OS X Yosemite,

79
00:04:16,745 --> 00:04:19,466 A:middle
we created from the ground
up -- this brand new API.

80
00:04:19,466 --> 00:04:22,506 A:middle
I'm excited to tell
you about this.

81
00:04:22,766 --> 00:04:27,776 A:middle
So, when we were first designing
this API we had a few things

82
00:04:27,776 --> 00:04:28,256 A:middle
in mind...

83
00:04:29,276 --> 00:04:33,776 A:middle
Actually, just one goal,
and that is to simplify --

84
00:04:33,776 --> 00:04:35,736 A:middle
to make it easy for you to use.

85
00:04:36,546 --> 00:04:39,316 A:middle
And to show you just how
easy it is to use this API,

86
00:04:39,886 --> 00:04:42,236 A:middle
I'll walk you through
a few examples.

87
00:04:43,166 --> 00:04:46,786 A:middle
So what you see on the screen
first is a window that contains,

88
00:04:47,356 --> 00:04:48,986 A:middle
like, a media player controller.

89
00:04:49,056 --> 00:04:53,236 A:middle
So what we're going to do is
focus on the UIs in the middle.

90
00:04:54,506 --> 00:04:58,406 A:middle
What I see here is: a rewind,
play, and forward button.

91
00:04:59,096 --> 00:05:00,876 A:middle
Well how did I come
to that conclusion?

92

93
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

94
00:04:59,096 --> 00:05:00,876 A:middle
Well how did I come
to that conclusion?

95
00:05:01,546 --> 00:05:05,666 A:middle
Because visually you can
see three distinct icons,

96
00:05:06,156 --> 00:05:09,066 A:middle
and each of those icons
represents something.

97
00:05:10,226 --> 00:05:14,456 A:middle
Well if you're not sighted, and
you depend on assistive software

98
00:05:14,456 --> 00:05:18,506 A:middle
like VoiceOver to help you
perceive what's on the screen...

99
00:05:19,616 --> 00:05:23,046 A:middle
Well, this is what a VoiceOver
user would probably see.

100
00:05:23,906 --> 00:05:24,966 A:middle
Just a bunch of buttons.

101
00:05:25,676 --> 00:05:27,096 A:middle
They wouldn't know
what to do with them.

102
00:05:28,246 --> 00:05:31,926 A:middle
Even worse, if you
implemented them

103
00:05:31,926 --> 00:05:35,776 A:middle
as custom views,
they'll see nothing.

104
00:05:36,726 --> 00:05:38,926 A:middle
Not terribly accessible is it?

105
00:05:40,456 --> 00:05:42,216 A:middle
Well today I'm going
to show you how

106
00:05:42,216 --> 00:05:44,016 A:middle
to make these UIs accessible.

107
00:05:44,826 --> 00:05:48,676 A:middle
So what we'll do first is
we'll focus on just one button

108
00:05:48,676 --> 00:05:50,696 A:middle
in the middle: the Play button.

109
00:05:52,236 --> 00:05:55,306 A:middle
If you say you're using
AppKit control you're in luck,

110
00:05:55,916 --> 00:05:59,236 A:middle
because you get most of
that accessibility for free.

111
00:05:59,826 --> 00:06:05,186 A:middle
By default, AppKit
will already fill

112

113
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

114
00:05:59,826 --> 00:06:05,186 A:middle
By default, AppKit
will already fill

115
00:06:05,186 --> 00:06:07,676 A:middle
in all the accessibility
information for that piece

116
00:06:07,676 --> 00:06:09,506 A:middle
of UI knowing that
it's a button.

117
00:06:09,936 --> 00:06:11,366 A:middle
However, AppKit is not psychic.

118
00:06:11,366 --> 00:06:14,506 A:middle
It's not going to be able
to know what the function

119
00:06:14,506 --> 00:06:15,896 A:middle
of that button will do.

120
00:06:16,216 --> 00:06:19,276 A:middle
That's something only you,
the developer, will know...

121
00:06:19,636 --> 00:06:23,986 A:middle
and so that's where you come
in: to help label this button.

122
00:06:24,446 --> 00:06:26,486 A:middle
So, there's two ways
you could do it.

123
00:06:26,656 --> 00:06:30,096 A:middle
You could go into Xcode
Identity Inspector.

124
00:06:30,816 --> 00:06:33,436 A:middle
Under the Accessibility
Identity section,

125
00:06:33,436 --> 00:06:36,696 A:middle
you could just add a
description: "Play."

126
00:06:37,286 --> 00:06:40,856 A:middle
So this, you could do
that in your zip file.

127
00:06:41,246 --> 00:06:43,616 A:middle
Or, if you'd like to do
this programmatically,

128
00:06:44,086 --> 00:06:46,726 A:middle
you could simply go into
your initialization code

129
00:06:47,146 --> 00:06:52,306 A:middle
and in your button cells simply
set the accessibility label

130
00:06:52,306 --> 00:06:58,366 A:middle
property to be the localized
string that you want it to be.

131
00:06:58,496 --> 00:07:02,986 A:middle
And with just that alone, now
a VoiceOver user could be able

132

133
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

134
00:06:58,496 --> 00:07:02,986 A:middle
And with just that alone, now
a VoiceOver user could be able

135
00:07:02,986 --> 00:07:04,746 A:middle
to be perceived this
as a Play button.

136
00:07:05,286 --> 00:07:08,756 A:middle
What makes it so easy?

137
00:07:09,996 --> 00:07:13,516 A:middle
Well with the new API --
which is a method-based API --

138
00:07:13,606 --> 00:07:16,826 A:middle
we've converted all the
attributes into properties.

139
00:07:17,646 --> 00:07:23,686 A:middle
So just like any objective-C
property, you could now get

140
00:07:23,686 --> 00:07:27,526 A:middle
and set the property
directly on the object itself.

141
00:07:27,936 --> 00:07:29,526 A:middle
So you no longer
have to subclass.

142
00:07:34,356 --> 00:07:37,306 A:middle
So whenever possible,
use AppKit Control.

143
00:07:37,816 --> 00:07:41,146 A:middle
But for any reason you can't
use AppKit Control and you have

144
00:07:41,146 --> 00:07:44,076 A:middle
to do your own stuff, like
creating a custom view for each

145
00:07:44,076 --> 00:07:46,816 A:middle
of the UIs, well in this case,

146
00:07:47,416 --> 00:07:49,736 A:middle
obviously VoiceOver
will not be able

147
00:07:49,736 --> 00:07:51,116 A:middle
to see anything on the screen.

148
00:07:51,116 --> 00:07:53,276 A:middle
So now you're wondering, "Great,

149
00:07:53,836 --> 00:07:56,576 A:middle
is there a lot more
I have to do?"

150
00:07:56,816 --> 00:08:01,746 A:middle
Well the good thing
is: it's just as easy

151

152
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

153
00:07:56,816 --> 00:08:01,746 A:middle
Well the good thing
is: it's just as easy

154
00:08:01,746 --> 00:08:03,836 A:middle
if you use this brand new API.

155
00:08:04,146 --> 00:08:06,916 A:middle
You could continue to use
the accessibility property I

156
00:08:06,916 --> 00:08:07,596 A:middle
just mentioned.

157
00:08:07,596 --> 00:08:09,916 A:middle
I gave you an example
of tweaking one

158
00:08:09,916 --> 00:08:11,626 A:middle
of the properties --
the label property.

159
00:08:12,006 --> 00:08:13,926 A:middle
There's tons of properties
you could use.

160
00:08:13,926 --> 00:08:15,356 A:middle
But one of the challenges

161
00:08:15,356 --> 00:08:17,366 A:middle
for the developers
is knowing exactly

162
00:08:17,366 --> 00:08:19,066 A:middle
which property you
have to implement.

163
00:08:19,666 --> 00:08:23,606 A:middle
So now we've introduced an
accessibility protocol that's

164
00:08:23,606 --> 00:08:25,916 A:middle
designed to take that
guesswork out of the equation.

165
00:08:26,056 --> 00:08:29,116 A:middle
The protocols will guide you

166
00:08:29,116 --> 00:08:30,906 A:middle
through that whole
implementation process

167
00:08:30,906 --> 00:08:33,506 A:middle
so you know exactly which
property you have to implement,

168
00:08:34,046 --> 00:08:36,145 A:middle
and we have protocols
that should cover most

169
00:08:36,145 --> 00:08:39,216 A:middle
of the commonly used
types of UIs out there.

170
00:08:40,285 --> 00:08:42,586 A:middle
So how do you go about
implementing this?

171
00:08:42,666 --> 00:08:44,686 A:middle
Well first you have
to pick a protocol.

172
00:08:45,526 --> 00:08:48,156 A:middle
So, we have a list of
protocols you could choose from.

173
00:08:48,536 --> 00:08:54,596 A:middle
So you should pick one that
corresponds to the look and feel

174
00:08:54,596 --> 00:08:58,596 A:middle
of your UI; the way or
the function of that UI.

175
00:08:59,176 --> 00:09:02,066 A:middle
So in our case we have the
example I was showing you

176

177
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

178
00:08:59,176 --> 00:09:02,066 A:middle
So in our case we have the
example I was showing you

179
00:09:02,156 --> 00:09:03,366 A:middle
earlier with the Play button.

180
00:09:03,856 --> 00:09:05,496 A:middle
It looks and behaves
like a button.

181
00:09:05,626 --> 00:09:07,406 A:middle
So we're going to pick
the button protocol.

182
00:09:07,406 --> 00:09:11,326 A:middle
So, in your interface
file simply say,

183
00:09:11,326 --> 00:09:14,106 A:middle
adhere to the
NSAccessibilityButton.

184
00:09:14,966 --> 00:09:18,606 A:middle
So now you add that;
you compile.

185
00:09:19,336 --> 00:09:19,906 A:middle
The good thing is,

186
00:09:19,906 --> 00:09:22,246 A:middle
now accessibility compiler
[1]will tell you...

187
00:09:23,386 --> 00:09:24,366 A:middle
will give you some warning

188
00:09:24,366 --> 00:09:26,166 A:middle
and tell you what you
need to implement.

189
00:09:26,626 --> 00:09:28,126 A:middle
So in this case, you have

190
00:09:28,126 --> 00:09:31,156 A:middle
to implement the
accessibilityPerformPress

191
00:09:31,676 --> 00:09:34,146 A:middle
and accessibilityLabel methods.

192
00:09:34,416 --> 00:09:37,906 A:middle
So let's go ahead and do that.

193
00:09:38,086 --> 00:09:41,586 A:middle
So in your implementation
file, simply --

194
00:09:41,586 --> 00:09:44,266 A:middle
for the accessibilityLabel
method --

195
00:09:44,606 --> 00:09:47,546 A:middle
just return a localized
string of the word "play".

196
00:09:49,196 --> 00:09:51,686 A:middle
For the
accessibilityPerformPress,

197
00:09:51,816 --> 00:09:57,886 A:middle
we simply need to perform the
action of pressing that button.

198
00:09:58,496 --> 00:09:59,906 A:middle
So what's next?

199

200
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

201
00:10:00,516 --> 00:10:01,616 A:middle
There is no next step.

202
00:10:02,196 --> 00:10:03,086 A:middle
That's all.

203
00:10:03,086 --> 00:10:05,176 A:middle
That's just how easy it is

204
00:10:05,176 --> 00:10:08,316 A:middle
to implement accessibility
even for a custom view.

205
00:10:08,316 --> 00:10:13,216 A:middle
So what makes it so easy?

206
00:10:14,066 --> 00:10:17,066 A:middle
Well it's because AppKit's doing
a lot of work on your behalf.

207
00:10:17,856 --> 00:10:21,886 A:middle
By simply using this
protocol, AppKit will infer

208
00:10:21,886 --> 00:10:24,916 A:middle
that these elements are
accessibility elements.

209
00:10:25,196 --> 00:10:27,856 A:middle
And depending on which
protocol you use,

210
00:10:28,756 --> 00:10:31,716 A:middle
AppKit will auto-populate
information

211
00:10:31,716 --> 00:10:32,796 A:middle
like what the role is.

212
00:10:32,986 --> 00:10:36,846 A:middle
So if, for example, if I use the
NSAccessibility button protocol,

213
00:10:37,106 --> 00:10:38,616 A:middle
AppKit will automatically infer

214
00:10:38,616 --> 00:10:43,956 A:middle
that the role for
this is "button."

215
00:10:44,106 --> 00:10:47,556 A:middle
So as you can see how easy it
is to use, I also want to kind

216
00:10:47,556 --> 00:10:49,936 A:middle
of give you a little bit more
detail about these protocols.

217
00:10:50,166 --> 00:10:53,596 A:middle
First of all there's
the base protocol,

218
00:10:54,246 --> 00:10:57,386 A:middle
which is what we call the
NSAccessibilityElement protocol.

219
00:10:57,976 --> 00:11:00,776 A:middle
It has a few required
methods like the frame

220

221
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

222
00:10:57,976 --> 00:11:00,776 A:middle
It has a few required
methods like the frame

223
00:11:00,776 --> 00:11:02,176 A:middle
and the accessibility parent.

224
00:11:02,606 --> 00:11:04,086 A:middle
Those are basic information

225
00:11:04,086 --> 00:11:06,576 A:middle
that all accessibility
elements should have.

226
00:11:07,116 --> 00:11:09,806 A:middle
And then you build
on top of that.

227
00:11:09,806 --> 00:11:11,476 A:middle
We have all the other protocols,

228
00:11:12,076 --> 00:11:14,116 A:middle
like the button protocol
I just talked about,

229
00:11:14,576 --> 00:11:17,396 A:middle
which has two required
methods, the accessibilityLabel

230
00:11:17,446 --> 00:11:19,276 A:middle
and the
accessibilityPerformPress.

231
00:11:19,706 --> 00:11:21,456 A:middle
And as you saw earlier,

232
00:11:21,736 --> 00:11:25,356 A:middle
Xcode compiler already warned
us about those methods.

233
00:11:31,046 --> 00:11:34,396 A:middle
So that's just how easy it is
to implement a custom view.

234
00:11:35,216 --> 00:11:37,226 A:middle
By the way, the protocols
are optional.

235
00:11:37,426 --> 00:11:39,876 A:middle
So you don't have to
implement if you don't want to,

236
00:11:39,876 --> 00:11:41,946 A:middle
but it's really, really handy.

237
00:11:42,856 --> 00:11:46,536 A:middle
So let's go through another
example that's a little bit

238
00:11:46,536 --> 00:11:47,506 A:middle
more complicated.

239
00:11:48,716 --> 00:11:53,296 A:middle
On the screen you see six
different image shapes.

240
00:11:55,436 --> 00:11:58,986 A:middle
The way the developer may have
implemented is simply a custom

241
00:11:58,986 --> 00:12:01,466 A:middle
view where they're
doing their own drawing.

242

243
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

244
00:11:58,986 --> 00:12:01,466 A:middle
view where they're
doing their own drawing.

245
00:12:02,066 --> 00:12:07,976 A:middle
So if you have something
like this,

246
00:12:08,176 --> 00:12:11,116 A:middle
someone like a VoiceOver user
will still need to be able

247
00:12:11,116 --> 00:12:14,656 A:middle
to know that there's
six distinct UIs sitting

248
00:12:14,656 --> 00:12:15,186 A:middle
on the screen.

249
00:12:16,686 --> 00:12:21,396 A:middle
So you have to give an
accessibility representation

250
00:12:21,586 --> 00:12:24,766 A:middle
for each of the images that's
being displayed on the screen.

251
00:12:25,076 --> 00:12:30,336 A:middle
So how do you do that for UIs
that you're rendering yourself

252
00:12:30,666 --> 00:12:32,636 A:middle
and you don't have
an NSView backing?

253
00:12:33,976 --> 00:12:35,386 A:middle
Well, for those of
you who are familiar

254
00:12:35,386 --> 00:12:37,636 A:middle
with the old sample code,

255
00:12:37,636 --> 00:12:39,516 A:middle
we have something called
[inaudible] element[2].

256
00:12:40,246 --> 00:12:43,766 A:middle
And now with the new API we
have a formalized version

257
00:12:43,766 --> 00:12:46,356 A:middle
of that called
NSAccessibilityElement.

258
00:12:46,626 --> 00:12:50,596 A:middle
You can use this class
to support all those UIs

259
00:12:50,636 --> 00:12:54,006 A:middle
that do not have a
backing in NSView.

260
00:12:54,366 --> 00:12:56,656 A:middle
So let's see how you'd go
about implementing this.

261
00:12:57,326 --> 00:13:00,506 A:middle
So for the example
earlier with the image --

262

263
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

264
00:12:57,326 --> 00:13:00,506 A:middle
So for the example
earlier with the image --

265
00:13:01,086 --> 00:13:05,766 A:middle
the six shape images -- for
each of those images you want

266
00:13:05,876 --> 00:13:09,036 A:middle
to create an
NSAccessibilityElement instance

267
00:13:09,036 --> 00:13:11,446 A:middle
for that.

268
00:13:12,296 --> 00:13:15,166 A:middle
So you create one of those
instances, and then you set

269
00:13:15,166 --> 00:13:18,156 A:middle
up some of the accessibility
properties for that,

270
00:13:18,196 --> 00:13:20,946 A:middle
such as who the parent
is, what the role is...

271
00:13:21,076 --> 00:13:22,416 A:middle
Well, in this case
we're just going

272
00:13:22,416 --> 00:13:23,916 A:middle
to say these are image role.

273
00:13:23,916 --> 00:13:26,866 A:middle
And then give it a unique label,

274
00:13:27,256 --> 00:13:29,566 A:middle
and then set up what
the frame is.

275
00:13:30,596 --> 00:13:33,316 A:middle
So when that custom view --

276
00:13:33,546 --> 00:13:35,396 A:middle
containing custom
view is being asked

277
00:13:35,396 --> 00:13:38,206 A:middle
for the accessibilityChildren,
then this is

278
00:13:38,206 --> 00:13:42,246 A:middle
where you return your array
of NSAccessibilityElements.

279
00:13:44,746 --> 00:13:47,256 A:middle
And one thing I do
want to note is:

280
00:13:47,726 --> 00:13:51,126 A:middle
you should keep these
accessibility elements alive

281
00:13:51,416 --> 00:13:53,546 A:middle
as long as they are on-screen.

282
00:13:54,006 --> 00:13:56,046 A:middle
That's because assistive
software

283
00:13:56,046 --> 00:13:58,516 A:middle
like VoiceOver could be
asking for information

284
00:13:58,516 --> 00:14:01,506 A:middle
about these objects at any
time through IPC calls.

285

286
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

287
00:13:58,516 --> 00:14:01,506 A:middle
about these objects at any
time through IPC calls.

288
00:14:02,256 --> 00:14:05,976 A:middle
So as long as they're on the
screen, cache them around.

289
00:14:10,346 --> 00:14:14,156 A:middle
Okay so that was pretty simple,
even for something like that,

290
00:14:14,156 --> 00:14:16,026 A:middle
where you are rendering
your own UI.

291
00:14:16,846 --> 00:14:19,366 A:middle
So there might be a few
of you in the audience

292
00:14:19,466 --> 00:14:24,066 A:middle
who may have already implemented
accessibility with the old API

293
00:14:24,266 --> 00:14:26,656 A:middle
in your application
and you're wondering,

294
00:14:26,656 --> 00:14:28,716 A:middle
"well how does this
apply to me?"

295
00:14:29,166 --> 00:14:31,606 A:middle
Well, if you already
added accessibility

296
00:14:31,606 --> 00:14:35,196 A:middle
into your application, there
is no extra work for you.

297
00:14:35,896 --> 00:14:39,946 A:middle
Your old API code will
continue to work just fine

298
00:14:40,506 --> 00:14:44,466 A:middle
because the new API is
binary and source compatible,

299
00:14:44,976 --> 00:14:46,076 A:middle
so you don't have to worry.

300
00:14:46,456 --> 00:14:49,626 A:middle
But if you do like to
try out the new API,

301
00:14:49,726 --> 00:14:53,816 A:middle
and we do encourage you to do
so, you could continue to do so.

302
00:14:54,046 --> 00:14:58,166 A:middle
The old code will continue to
work alongside the new code.

303

304
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

305
00:15:00,396 --> 00:15:03,426 A:middle
So I just told you why you
should make your application

306
00:15:03,426 --> 00:15:07,096 A:middle
accessible, and I ran
through a few examples of how

307
00:15:07,096 --> 00:15:11,216 A:middle
to use this brand new API
to make some UIs accessible.

308
00:15:11,456 --> 00:15:15,946 A:middle
You saw how quickly
and easily we were able

309
00:15:15,946 --> 00:15:21,516 A:middle
to solve the three
examples I've shown you.

310
00:15:23,176 --> 00:15:27,686 A:middle
And it really is fast, and it
will shave some time for you

311
00:15:27,686 --> 00:15:30,826 A:middle
to develop in making sure
your app is accessible.

312
00:15:31,596 --> 00:15:35,096 A:middle
So with some extra time
you may have on your hands,

313
00:15:35,096 --> 00:15:36,646 A:middle
I really hope you
could take some

314
00:15:36,646 --> 00:15:39,046 A:middle
of that time to do some testing.

315
00:15:39,506 --> 00:15:43,536 A:middle
Because after all, you
know, the code you add?

316
00:15:43,536 --> 00:15:47,046 A:middle
You want to make sure that it
will be usable by everyone.

317
00:15:47,876 --> 00:15:52,446 A:middle
So how do you go about making
sure that your app is accessible

318
00:15:52,566 --> 00:15:53,876 A:middle
after you make those changes?

319
00:15:54,366 --> 00:15:56,166 A:middle
Well, we have two
tools you could use.

320
00:15:56,866 --> 00:15:59,676 A:middle
The first is Accessibility
Inspector.

321

322
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

323
00:16:00,556 --> 00:16:05,166 A:middle
This is a tool that displays all
of the accessibility information

324
00:16:05,166 --> 00:16:08,216 A:middle
for any piece of UI that's
currently under the mouse.

325
00:16:08,876 --> 00:16:11,886 A:middle
And with the newest
version of the Inspector,

326
00:16:12,016 --> 00:16:15,476 A:middle
we will now display the
accessibility properties

327
00:16:15,576 --> 00:16:16,656 A:middle
of that UI.

328
00:16:17,396 --> 00:16:19,446 A:middle
So, this is really
helpful, so you know exactly

329
00:16:19,446 --> 00:16:22,526 A:middle
which properties you
may need to tweak.

330
00:16:24,016 --> 00:16:28,526 A:middle
The second tool we have
is called VoiceOver.

331
00:16:29,106 --> 00:16:32,336 A:middle
VoiceOver is a screen
reader designed

332
00:16:32,576 --> 00:16:36,636 A:middle
for the visually challenged
users to be able to explore

333
00:16:36,816 --> 00:16:39,466 A:middle
and interact with the
content of the screen.

334
00:16:40,136 --> 00:16:45,206 A:middle
And the users will get feedback
through speech or braille.

335
00:16:45,866 --> 00:16:47,786 A:middle
So how do you go
about using this?

336
00:16:47,786 --> 00:16:49,406 A:middle
First you've got to turn it on.

337
00:16:49,406 --> 00:16:51,926 A:middle
If you just remember
the shortcut:

338
00:16:51,926 --> 00:16:54,036 A:middle
command F5, that
will turn it on.

339
00:16:54,886 --> 00:16:57,366 A:middle
Or you can go into the
Accessibility Pref Pane.

340
00:16:57,486 --> 00:17:00,116 A:middle
There's an Enable
VoiceOver checkbox.

341

342
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

343
00:16:57,486 --> 00:17:00,116 A:middle
There's an Enable
VoiceOver checkbox.

344
00:17:00,906 --> 00:17:03,576 A:middle
Simply check that and you
can turn VoiceOver on.

345
00:17:04,935 --> 00:17:07,415 A:middle
So the very first time
you turn VoiceOver on,

346
00:17:07,586 --> 00:17:09,616 A:middle
it's going to prompt
you to see if you want

347
00:17:09,616 --> 00:17:10,586 A:middle
to go through a tutorial.

348
00:17:10,586 --> 00:17:15,116 A:middle
So if you just click on
the Learn More button,

349
00:17:15,486 --> 00:17:17,185 A:middle
than it will run through
a tutorial with you.

350
00:17:18,106 --> 00:17:20,185 A:middle
So I really encourage
you to try that.

351
00:17:20,326 --> 00:17:21,455 A:middle
Run through the tutorial.

352
00:17:22,925 --> 00:17:25,986 A:middle
Now, VoiceOver is a
very powerful tool,

353
00:17:26,415 --> 00:17:28,286 A:middle
so it has hundreds of commands.

354
00:17:29,186 --> 00:17:33,336 A:middle
Well, today I'm going to show
you just five simple commands

355
00:17:33,426 --> 00:17:36,846 A:middle
you can use to be proficient
in testing with VoiceOver.

356
00:17:37,086 --> 00:17:41,816 A:middle
The first of that is how you
navigate from one piece of UI

357
00:17:41,816 --> 00:17:44,716 A:middle
to another: and that's
"control, option, right arrow."

358
00:17:45,566 --> 00:17:48,266 A:middle
So just remember that once
you have VoiceOver turned on,

359
00:17:48,816 --> 00:17:53,046 A:middle
any time you press control and
option, any other key you press

360
00:17:53,046 --> 00:17:55,446 A:middle
at the same time will
automatically turn

361
00:17:55,446 --> 00:17:56,556 A:middle
into a VoiceOver command.

362
00:17:57,106 --> 00:18:01,166 A:middle
So we have "control, option,
right arrow" to go to next,

363

364
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

365
00:17:57,106 --> 00:18:01,166 A:middle
So we have "control, option,
right arrow" to go to next,

366
00:18:01,166 --> 00:18:02,836 A:middle
and if you want to reverse,

367
00:18:03,266 --> 00:18:05,316 A:middle
you do "control,
option, left arrow."

368
00:18:05,926 --> 00:18:09,006 A:middle
And if you want to press a
button or activate something,

369
00:18:09,356 --> 00:18:11,436 A:middle
simply do "control,
option, space."

370
00:18:11,836 --> 00:18:16,696 A:middle
This is very similar to pressing
a space bar on something

371
00:18:16,696 --> 00:18:18,036 A:middle
that has a keyboard focus.

372
00:18:18,606 --> 00:18:21,106 A:middle
And then we have
two more commands.

373
00:18:21,586 --> 00:18:24,716 A:middle
One is Enter Group -- which
is "control, option, shift,

374
00:18:24,716 --> 00:18:27,326 A:middle
down arrow" -- and
Leave Group: "control,

375
00:18:27,326 --> 00:18:29,046 A:middle
option, shift, up arrow."

376
00:18:29,896 --> 00:18:30,986 A:middle
So what is "group?"

377
00:18:31,606 --> 00:18:35,356 A:middle
Well VoiceOver has this
concept of "group" and it goes

378
00:18:35,356 --> 00:18:37,426 A:middle
like this: If you
have, on the screen...

379
00:18:38,016 --> 00:18:41,456 A:middle
what I have on the
screen is just some window

380
00:18:41,456 --> 00:18:42,456 A:middle
with lots of UIs.

381
00:18:43,056 --> 00:18:47,706 A:middle
Well, to be able to navigate
quickly to a certain piece of UI

382
00:18:48,006 --> 00:18:51,196 A:middle
at any moment, VoiceOver has
this concept of grouping.

383
00:18:51,546 --> 00:18:53,346 A:middle
On the screen you see
three different groups:

384
00:18:53,346 --> 00:18:57,886 A:middle
one is the toolbar; the other
one is the table of folders;

385
00:18:58,416 --> 00:19:03,136 A:middle
and also the collection
view of images.

386

387
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

388
00:18:58,416 --> 00:19:03,136 A:middle
and also the collection
view of images.

389
00:19:03,256 --> 00:19:06,686 A:middle
To be able to interact...

390
00:19:06,836 --> 00:19:10,796 A:middle
or, you know, enter
and exit these groups,

391
00:19:11,516 --> 00:19:14,836 A:middle
like I said earlier you could
just press the Enter Group

392
00:19:15,076 --> 00:19:16,426 A:middle
or Leave Group command.

393
00:19:17,586 --> 00:19:21,236 A:middle
So with just these five
VoiceOver commands alone,

394
00:19:21,236 --> 00:19:23,596 A:middle
you should be pretty good
in testing with VoiceOver.

395
00:19:24,606 --> 00:19:29,466 A:middle
So now that I have shown
you the tools and run you

396
00:19:29,466 --> 00:19:34,546 A:middle
through some examples using
the API to implement some

397
00:19:35,146 --> 00:19:37,306 A:middle
of the UI examples
I've shown you earlier,

398
00:19:37,746 --> 00:19:40,356 A:middle
I would like to bring
up Chris Dolan to come

399
00:19:40,356 --> 00:19:42,386 A:middle
up to give you a live demo

400
00:19:42,386 --> 00:19:45,296 A:middle
of making the Tic Tac
Toe game accessible.

401
00:19:46,516 --> 00:19:48,666 A:middle
[ Applause ]

402
00:19:49,166 --> 00:19:49,976 A:middle
>> Thanks.

403
00:19:55,066 --> 00:19:55,526 A:middle
Thanks Patti.

404
00:19:56,416 --> 00:19:58,646 A:middle
Hi, my name is Chris, and
I'm a software engineer

405
00:19:58,646 --> 00:20:00,176 A:middle
on the OS X Accessibility Team.

406

407
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

408
00:19:58,646 --> 00:20:00,176 A:middle
on the OS X Accessibility Team.

409
00:20:00,586 --> 00:20:03,386 A:middle
And I'm really excited to
show you just how simple

410
00:20:03,676 --> 00:20:06,916 A:middle
and just how easy it is to
add accessibility to your app

411
00:20:06,916 --> 00:20:07,906 A:middle
with our brand new API.

412
00:20:08,836 --> 00:20:11,446 A:middle
So to do this, I've written
a little test app here,

413
00:20:11,716 --> 00:20:14,156 A:middle
and it's a very simple
game of Tic Tac Toe.

414
00:20:14,496 --> 00:20:17,146 A:middle
So in this case the board
is full, the game is over,

415
00:20:17,146 --> 00:20:19,066 A:middle
and it says the O
player has won.

416
00:20:19,216 --> 00:20:21,756 A:middle
I can come in and
restart the game,

417
00:20:22,156 --> 00:20:23,896 A:middle
place some pieces
on the board...

418
00:20:23,896 --> 00:20:27,816 A:middle
I can even turn on the AI
opponent and play against that.

419
00:20:27,896 --> 00:20:30,736 A:middle
This is a very simple
application,

420
00:20:30,736 --> 00:20:33,006 A:middle
and I want to use this kind
of as our launching point

421
00:20:33,006 --> 00:20:35,256 A:middle
to show you how you would
implement all the different

422
00:20:35,256 --> 00:20:37,956 A:middle
techniques, that Patti just
told you, in this application.

423
00:20:38,696 --> 00:20:41,346 A:middle
But before I do that, I
want to give you an idea

424
00:20:41,346 --> 00:20:42,756 A:middle
of what this application looks

425
00:20:42,756 --> 00:20:45,156 A:middle
like to someone who's
using VoiceOver.

426
00:20:45,616 --> 00:20:47,566 A:middle
So, they may have just
heard from social media

427
00:20:47,566 --> 00:20:50,486 A:middle
that this is the great new app
to have, or that you wrote it

428
00:20:50,486 --> 00:20:51,416 A:middle
and they want to check it out,

429
00:20:51,746 --> 00:20:53,246 A:middle
and this is their first
experience with it.

430
00:20:53,576 --> 00:20:54,546 A:middle
I want you to keep that in mind.

431
00:20:55,476 --> 00:20:59,046 A:middle
So I'm going to use the keyboard
command to turn on VoiceOver.

432
00:20:59,816 --> 00:21:01,406 A:middle
So here, two things
have happened

433

434
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

435
00:20:59,816 --> 00:21:01,406 A:middle
So here, two things
have happened

436
00:21:01,406 --> 00:21:02,576 A:middle
when I turn VoiceOver on.

437
00:21:03,056 --> 00:21:04,536 A:middle
>> You are currently
on a text element.

438
00:21:05,816 --> 00:21:08,506 A:middle
>> The first is that the
caption panel has shown

439
00:21:08,506 --> 00:21:10,476 A:middle
up in the bottom corner.

440
00:21:10,836 --> 00:21:12,286 A:middle
And all this does is it has all

441
00:21:12,286 --> 00:21:14,346 A:middle
of the text that's
currently being spoken.

442
00:21:14,926 --> 00:21:17,806 A:middle
So this is really, really
helpful if I'm collaborating

443
00:21:18,046 --> 00:21:19,616 A:middle
with someone who's
using VoiceOver,

444
00:21:19,906 --> 00:21:22,106 A:middle
and they often have their speech
cranked up really, really fast.

445
00:21:22,786 --> 00:21:25,636 A:middle
So here I can read all of
the text that's being spoken,

446
00:21:25,636 --> 00:21:27,406 A:middle
and it helps me when
I'm collaborating.

447
00:21:28,016 --> 00:21:32,276 A:middle
The second thing you'll see is
that there's a black box drawn

448
00:21:32,276 --> 00:21:34,686 A:middle
around the X wins label.

449
00:21:35,126 --> 00:21:36,886 A:middle
And we call this the
VoiceOver cursor.

450
00:21:37,236 --> 00:21:39,906 A:middle
You can kind of think of it as
an alternate keyboard focus.

451
00:21:40,286 --> 00:21:43,506 A:middle
So just like I can press space
on a keyboard-focused element

452
00:21:43,506 --> 00:21:45,986 A:middle
to do something with that
element, when I press one

453
00:21:45,986 --> 00:21:49,736 A:middle
of the many VoiceOver commands
(keyboard commands) it normally

454
00:21:49,736 --> 00:21:52,486 A:middle
acts on the currently
VoiceOver-focused element.

455
00:21:53,436 --> 00:21:57,936 A:middle
So now what I'd like
to do is turn on a mode

456
00:21:58,226 --> 00:22:00,226 A:middle
in VoiceOver called
Trackpad Commander.

457

458
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

459
00:21:58,226 --> 00:22:00,226 A:middle
in VoiceOver called
Trackpad Commander.

460
00:22:00,436 --> 00:22:02,946 A:middle
And all it allows me to
do is just explore the UI

461
00:22:02,946 --> 00:22:03,866 A:middle
with my finger.

462
00:22:03,946 --> 00:22:07,926 A:middle
Just like VoiceOver on iOS, I
can move around the interface

463
00:22:07,926 --> 00:22:10,196 A:middle
and VoiceOver will
speak the descriptions

464
00:22:10,196 --> 00:22:12,386 A:middle
of all the items
underneath my finger.

465
00:22:12,386 --> 00:22:13,686 A:middle
I'm going to turn that on.

466
00:22:15,096 --> 00:22:16,506 A:middle
>> Trackpad Commander on.

467
00:22:17,386 --> 00:22:19,656 A:middle
>> And now I'm just gonna
explore around the interface,

468
00:22:19,656 --> 00:22:22,376 A:middle
and you'll see a blue circle
wherever my finger is.

469
00:22:23,476 --> 00:22:24,216 A:middle
>> Close button.

470
00:22:25,046 --> 00:22:26,266 A:middle
Minimize button.

471
00:22:26,536 --> 00:22:27,586 A:middle
Dimmed, zoom button.

472
00:22:27,786 --> 00:22:29,926 A:middle
>> Great. So the
toolbar is looking good.

473
00:22:30,376 --> 00:22:32,816 A:middle
But you'll notice anywhere

474
00:22:32,816 --> 00:22:34,906 A:middle
where there's no elements
there's this sound being

475
00:22:34,906 --> 00:22:35,096 A:middle
played [beeping].

476
00:22:35,096 --> 00:22:36,616 A:middle
It says this is empty
space [beeping].

477
00:22:37,376 --> 00:22:39,256 A:middle
>> Tic Tac Toe.

478
00:22:39,886 --> 00:22:42,236 A:middle
>> Okay. Title is good.

479
00:22:42,476 --> 00:22:43,456 A:middle
[Beeping] empty space here.

480
00:22:43,656 --> 00:22:44,326 A:middle
>> X wins.

481
00:22:44,636 --> 00:22:46,216 A:middle
>> Okay the label shows up fine.

482
00:22:47,216 --> 00:22:48,856 A:middle
[Beeping] more empty space.

483
00:22:49,776 --> 00:22:51,796 A:middle
Ah, we've hit our first
problem [beeping].

484
00:22:52,926 --> 00:22:55,346 A:middle
There's nothing being
reported here

485
00:22:55,346 --> 00:22:57,166 A:middle
for accessibility
for this checkbox.

486
00:22:57,396 --> 00:22:59,616 A:middle
So this is one of the
problems we'll have to fix.

487
00:22:59,776 --> 00:23:00,436 A:middle
>> Difficulty.

488

489
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

490
00:22:59,776 --> 00:23:00,436 A:middle
>> Difficulty.

491
00:23:00,926 --> 00:23:02,086 A:middle
>> Difficulty's fine.

492
00:23:02,086 --> 00:23:02,326 A:middle
>> 2.

493
00:23:02,656 --> 00:23:03,436 A:middle
>> As well as the level.

494
00:23:03,716 --> 00:23:04,636 A:middle
>> Button, button.

495
00:23:05,116 --> 00:23:05,576 A:middle
>> Hm.

496
00:23:05,666 --> 00:23:07,186 A:middle
>> 2. Button, button.

497
00:23:07,436 --> 00:23:09,816 A:middle
Delete. 1.41%.

498
00:23:10,586 --> 00:23:12,596 A:middle
>> So we saw there's a
problem with the buttons.

499
00:23:12,596 --> 00:23:13,406 A:middle
It just says "button."

500
00:23:13,706 --> 00:23:17,096 A:middle
So if I'm not a sighted user,
I don't understand what's going

501
00:23:17,146 --> 00:23:21,616 A:middle
on with this button; what
does it do when I click it?

502
00:23:21,696 --> 00:23:22,576 A:middle
[Beeping] More empty space.

503
00:23:22,986 --> 00:23:25,726 A:middle
And again, the Restart
Game button's the same way;

504
00:23:25,726 --> 00:23:27,426 A:middle
there's absolutely
no information

505
00:23:27,426 --> 00:23:28,966 A:middle
for accessibility there.

506
00:23:29,036 --> 00:23:30,996 A:middle
What about the grid?

507
00:23:31,236 --> 00:23:32,606 A:middle
Well I had the same
problem here.

508
00:23:32,886 --> 00:23:35,676 A:middle
The grid isn't even being
reported to accessibility.

509
00:23:35,676 --> 00:23:36,246 A:middle
>> VoiceOver off.

510
00:23:37,516 --> 00:23:39,376 A:middle
>> So as you can see,
the user experience

511
00:23:39,376 --> 00:23:42,086 A:middle
for this application is quite
poor when using VoiceOver.

512
00:23:42,086 --> 00:23:44,056 A:middle
A lot of the major functionality

513
00:23:44,056 --> 00:23:45,626 A:middle
for this app just
doesn't show up.

514
00:23:45,626 --> 00:23:46,666 A:middle
I can't play a piece.

515
00:23:46,666 --> 00:23:48,136 A:middle
I can't restart the game.

516
00:23:48,816 --> 00:23:50,336 A:middle
I can't play against the AI

517
00:23:50,336 --> 00:23:52,186 A:middle
because I can't click
that checkbox.

518
00:23:52,776 --> 00:23:55,056 A:middle
So what I'd like to do
is take you through each

519
00:23:55,056 --> 00:23:57,966 A:middle
of these individual
elements and show you how

520
00:23:57,966 --> 00:23:58,886 A:middle
to make them accessible.

521

522
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

523
00:24:03,056 --> 00:24:04,696 A:middle
So here's my Xcode project.

524
00:24:05,016 --> 00:24:06,676 A:middle
And before we even
talk about the code,

525
00:24:07,196 --> 00:24:09,306 A:middle
I just want to orient
you to, kind of,

526
00:24:09,306 --> 00:24:10,496 A:middle
the layout of this project.

527
00:24:11,286 --> 00:24:11,976 A:middle
So over here...

528
00:24:12,256 --> 00:24:14,716 A:middle
this is a classic MVC style app.

529
00:24:14,716 --> 00:24:16,656 A:middle
I have all of my models,
and these are the files

530
00:24:17,186 --> 00:24:19,746 A:middle
that encapsulate, you know,
the Tic Tac Toe board...

531
00:24:19,746 --> 00:24:20,806 A:middle
and the game rules...

532
00:24:20,806 --> 00:24:22,686 A:middle
and what it means
to win the game.

533
00:24:23,216 --> 00:24:25,096 A:middle
We're not going to touch
any of the model files here.

534
00:24:25,096 --> 00:24:25,996 A:middle
This is the game state.

535
00:24:25,996 --> 00:24:27,656 A:middle
We don't need that.

536
00:24:28,086 --> 00:24:30,156 A:middle
The next folder is
all of the views.

537
00:24:30,726 --> 00:24:33,036 A:middle
So we have a lot of custom
UI in this application

538
00:24:33,656 --> 00:24:36,046 A:middle
and we need views to back them.

539
00:24:36,136 --> 00:24:38,256 A:middle
These are all of the files
that we use to do that.

540
00:24:39,306 --> 00:24:41,186 A:middle
This is where we're going
to be spending a majority

541
00:24:41,186 --> 00:24:42,696 A:middle
of our time in the code.

542
00:24:43,086 --> 00:24:45,226 A:middle
We also have the
controller section.

543
00:24:45,346 --> 00:24:46,846 A:middle
The AppDelegate is
currently empty.

544
00:24:47,306 --> 00:24:50,136 A:middle
And the Tic Tac Toe view
controller is the thing

545
00:24:50,136 --> 00:24:51,896 A:middle
that hooks up all
the UI interactions

546
00:24:51,896 --> 00:24:52,956 A:middle
with the monologue jacks.

547
00:24:53,896 --> 00:24:57,306 A:middle
The last thing I want to point
out is the main menu nib.

548
00:24:57,446 --> 00:25:00,306 A:middle
This is the one and only
nib for this entire project.

549

550
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

551
00:24:57,446 --> 00:25:00,306 A:middle
This is the one and only
nib for this entire project.

552
00:25:00,756 --> 00:25:03,426 A:middle
And this is actually where
we're going to start.

553
00:25:03,896 --> 00:25:07,126 A:middle
So the first elements we're
going to work on are the plus

554
00:25:07,126 --> 00:25:08,966 A:middle
and minus buttons here
for the difficulty.

555
00:25:09,626 --> 00:25:11,916 A:middle
If you remember, this is one of
the items that we could land on,

556
00:25:11,916 --> 00:25:13,686 A:middle
but there was no
contextual information

557
00:25:13,686 --> 00:25:15,516 A:middle
about what these buttons did.

558
00:25:16,276 --> 00:25:18,156 A:middle
So I'd like to show you how
to add accessibility to that

559
00:25:18,156 --> 00:25:18,966 A:middle
in two different ways.

560
00:25:20,266 --> 00:25:21,626 A:middle
The first is actually
quite simple.

561
00:25:21,656 --> 00:25:25,766 A:middle
I'm just going to select that
element in Interface Builder.

562
00:25:26,436 --> 00:25:29,386 A:middle
And then up in the top right
I can open up the panel.

563
00:25:29,776 --> 00:25:35,566 A:middle
And the third icon from the
left is the Identity Inspector.

564
00:25:36,376 --> 00:25:39,736 A:middle
And in here is the Accessibility
Identity information.

565
00:25:39,736 --> 00:25:40,636 A:middle
So this is where I'm going

566
00:25:40,636 --> 00:25:42,046 A:middle
to add the description
for this button.

567
00:25:43,126 --> 00:25:44,126 A:middle
So what does this button do?

568
00:25:44,126 --> 00:25:47,216 A:middle
Well, when I click it, it
decreases the difficulty.

569
00:25:47,496 --> 00:25:51,736 A:middle
So I'm just going to
type that in here.

570
00:25:52,126 --> 00:25:53,596 A:middle
Great. And that's
all I had to do.

571
00:25:53,886 --> 00:25:54,336 A:middle
Very simple.

572
00:25:55,696 --> 00:25:58,766 A:middle
So what about if I
decide that I want

573
00:25:58,766 --> 00:26:00,866 A:middle
to do the same thing,
but in code?

574

575
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

576
00:25:58,766 --> 00:26:00,866 A:middle
to do the same thing,
but in code?

577
00:26:01,286 --> 00:26:02,846 A:middle
Well it turns out
that's really simple too.

578
00:26:02,846 --> 00:26:04,986 A:middle
So I can go over to
my view controller.

579
00:26:05,706 --> 00:26:10,056 A:middle
And in my awakeFromNib, here I
can pull out the button cell.

580
00:26:16,126 --> 00:26:21,186 A:middle
And I have an outlet
to that button.

581
00:26:21,736 --> 00:26:24,176 A:middle
And then I can use one of the
new accessibility properties

582
00:26:24,176 --> 00:26:25,866 A:middle
to just set the accessibility
label.

583
00:26:28,186 --> 00:26:31,776 A:middle
And remember, you always want
to localize these strings.

584
00:26:37,106 --> 00:26:40,026 A:middle
Okay. And this is the
increase difficulty button.

585
00:26:40,176 --> 00:26:43,136 A:middle
So I'm just going
to add that in.

586
00:26:45,256 --> 00:26:46,986 A:middle
Okay. Just like that.

587
00:26:46,986 --> 00:26:47,716 A:middle
That's all I need to do.

588
00:26:48,196 --> 00:26:51,876 A:middle
And with that, now when
a VoiceOver user lands

589
00:26:51,876 --> 00:26:53,836 A:middle
on these plus and minus
buttons, they'll be read

590
00:26:53,836 --> 00:26:56,856 A:middle
as the increase difficulty or
the decrease difficulty buttons.

591
00:26:57,146 --> 00:27:00,576 A:middle
So why did we get that
accessibility for free?

592

593
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

594
00:26:57,146 --> 00:27:00,576 A:middle
So why did we get that
accessibility for free?

595
00:27:00,576 --> 00:27:02,176 A:middle
Why did they even show
up in the first place?

596
00:27:03,026 --> 00:27:06,716 A:middle
Well, this custom class is
actually a subclass of NSButton.

597
00:27:07,176 --> 00:27:09,146 A:middle
So we've done a lot of
work behind the scenes

598
00:27:09,146 --> 00:27:12,496 A:middle
to bake accessibility in to all
of the standard AppKit controls.

599
00:27:12,856 --> 00:27:15,256 A:middle
So whenever possible, try to
use those because we've done

600
00:27:15,256 --> 00:27:16,536 A:middle
as much work as possible
for you.

601
00:27:16,886 --> 00:27:19,346 A:middle
The one thing we needed to
do is just add a description

602
00:27:19,346 --> 00:27:20,106 A:middle
which is quite simple.

603
00:27:22,366 --> 00:27:24,256 A:middle
So now that we've worked on
the "plus" and "minus" buttons,

604
00:27:24,256 --> 00:27:27,006 A:middle
let's move on to the
Restart Game button.

605
00:27:27,006 --> 00:27:30,236 A:middle
You might recall that this
was one of the items that...

606
00:27:30,236 --> 00:27:32,156 A:middle
nothing was reported
there for accessibility.

607
00:27:32,616 --> 00:27:33,676 A:middle
Let's take a look at why.

608
00:27:35,236 --> 00:27:37,316 A:middle
So I have a class
for this button.

609
00:27:38,556 --> 00:27:41,566 A:middle
And the first thing I
immediately notice is

610
00:27:41,566 --> 00:27:43,056 A:middle
that it's an NSView subclass.

611
00:27:43,886 --> 00:27:46,636 A:middle
I'm doing a lot of extra
work behind the scenes

612
00:27:46,936 --> 00:27:49,586 A:middle
to make this view act
and look like a button.

613
00:27:49,806 --> 00:27:51,326 A:middle
This includes all
of my own keyboard

614
00:27:51,326 --> 00:27:54,566 A:middle
and mouse event handling, as
well as all of my own drawing.

615
00:27:54,776 --> 00:27:56,256 A:middle
I'm doing a ton of
extra work here.

616
00:27:57,276 --> 00:28:00,586 A:middle
Well, how do I add
accessibility to this element?

617

618
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

619
00:27:57,276 --> 00:28:00,586 A:middle
Well, how do I add
accessibility to this element?

620
00:28:01,046 --> 00:28:02,926 A:middle
It turns out it's
also quite simple.

621
00:28:02,926 --> 00:28:05,856 A:middle
All I need to do is pick
the accessibility protocol

622
00:28:06,256 --> 00:28:08,186 A:middle
that best represents
this object.

623
00:28:09,246 --> 00:28:13,756 A:middle
The protocol for this is the
NSAccessibilityButton protocol.

624
00:28:15,036 --> 00:28:16,916 A:middle
Now that I've conformed
to that protocol,

625
00:28:17,336 --> 00:28:19,616 A:middle
I can move into my
implemenntation file.

626
00:28:21,136 --> 00:28:24,526 A:middle
And the first thing I see
is I get two new warnings.

627
00:28:24,896 --> 00:28:27,046 A:middle
So this is really,
really helpful for me,

628
00:28:27,046 --> 00:28:29,576 A:middle
because now I know exactly
what I need to implement

629
00:28:29,776 --> 00:28:32,676 A:middle
to add accessibility
to this custom control.

630
00:28:33,676 --> 00:28:35,886 A:middle
The two methods here
are accessibilityLabel

631
00:28:35,886 --> 00:28:37,636 A:middle
and accessibilityPerformPress.

632
00:28:37,956 --> 00:28:39,166 A:middle
So let's take those
one at a time.

633
00:28:40,616 --> 00:28:42,626 A:middle
I have a section here
for Accessibility.

634
00:28:43,506 --> 00:28:45,446 A:middle
The first one is
accessibilityLabel.

635
00:28:48,806 --> 00:28:52,966 A:middle
Great. Now what do I
want to be returned here?

636
00:28:53,736 --> 00:28:56,926 A:middle
I happen to know that this
button is only ever used

637
00:28:56,926 --> 00:28:58,776 A:middle
to draw the Restart Game button.

638
00:28:59,326 --> 00:29:01,946 A:middle
So the label for this is just
going to be "restart game."

639

640
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

641
00:28:59,326 --> 00:29:01,946 A:middle
So the label for this is just
going to be "restart game."

642
00:29:11,166 --> 00:29:11,576 A:middle
That's it.

643
00:29:12,156 --> 00:29:14,496 A:middle
So now I can go back up
to the top of my file.

644
00:29:14,606 --> 00:29:16,376 A:middle
I notice that warning
has gone away.

645
00:29:16,546 --> 00:29:18,326 A:middle
So I only have one more
method to implement.

646
00:29:18,826 --> 00:29:20,386 A:middle
And that's
accessibilityPerformPress.

647
00:29:21,706 --> 00:29:22,176 A:middle
Let's do that.

648
00:29:27,046 --> 00:29:27,716 A:middle
"performPress."

649
00:29:28,906 --> 00:29:30,696 A:middle
So what should happen here?

650
00:29:31,476 --> 00:29:34,976 A:middle
Well, when I use the mouse to
interact with this button --

651
00:29:35,476 --> 00:29:36,986 A:middle
when I click it something
happens, right?

652
00:29:37,386 --> 00:29:39,066 A:middle
That same something
should happen

653
00:29:39,156 --> 00:29:41,126 A:middle
when an accessibility
client says, "hey,

654
00:29:41,196 --> 00:29:42,596 A:middle
I want to activate this item."

655
00:29:43,366 --> 00:29:47,976 A:middle
So in my case, I happen to have
a method called pressDown...

656
00:29:49,676 --> 00:29:50,766 A:middle
or performPress rather.

657
00:29:51,286 --> 00:29:53,286 A:middle
And performPress
is what gets called

658
00:29:53,286 --> 00:29:55,486 A:middle
when the mouse handling
logic says "yes,

659
00:29:55,486 --> 00:29:56,576 A:middle
this button has been pressed."

660
00:29:57,086 --> 00:29:59,116 A:middle
So I want to call that
same, exact method.

661

662
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

663
00:30:06,046 --> 00:30:06,466 A:middle
And now you notice

664
00:30:06,466 --> 00:30:09,316 A:middle
that accessibilityPerformPress
return is a Boolean.

665
00:30:09,816 --> 00:30:11,906 A:middle
This is a yes-or-no,
"did I handle this?"

666
00:30:11,906 --> 00:30:15,796 A:middle
event. And I'm always handling
it, so yes, I return "YES."

667
00:30:17,036 --> 00:30:20,086 A:middle
And with that I can go back
up to the top of my file

668
00:30:20,426 --> 00:30:22,886 A:middle
and I see all of my
warnings have gone away.

669
00:30:23,546 --> 00:30:24,156 A:middle
So that's it.

670
00:30:24,606 --> 00:30:26,286 A:middle
The protocol has guided
me through what I needed

671
00:30:26,286 --> 00:30:27,486 A:middle
to do to add accessibility.

672
00:30:27,756 --> 00:30:29,346 A:middle
I implemented that
and I'm finished.

673
00:30:32,276 --> 00:30:34,626 A:middle
So now that this lower
right section's finished,

674
00:30:34,776 --> 00:30:37,846 A:middle
I want to work on the Artificial
Intelligence checkbox.

675
00:30:38,526 --> 00:30:40,266 A:middle
If you recall again,
this was another element

676
00:30:40,266 --> 00:30:42,056 A:middle
that wasn't visible to
accessibility at all.

677
00:30:43,116 --> 00:30:47,006 A:middle
So I have my header file
here for the checkbox.

678
00:30:47,626 --> 00:30:50,256 A:middle
And again I see the same
situation I had with the button.

679
00:30:50,936 --> 00:30:52,086 A:middle
It's an NSView subclass.

680
00:30:52,396 --> 00:30:55,686 A:middle
So I do a lot of work to make
it look and act like a checkbox.

681
00:30:56,646 --> 00:31:00,356 A:middle
So in this case, I need
to pick a protocol.

682

683
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

684
00:30:56,646 --> 00:31:00,356 A:middle
So in this case, I need
to pick a protocol.

685
00:31:00,606 --> 00:31:04,686 A:middle
And the protocol for this is
the NSAccessibilityCheckBox

686
00:31:04,686 --> 00:31:05,126 A:middle
protocol.

687
00:31:07,976 --> 00:31:12,426 A:middle
And now when I go into my
implementation file I get a few

688
00:31:12,426 --> 00:31:13,016 A:middle
new warnings.

689
00:31:13,016 --> 00:31:14,566 A:middle
So this tells me
what I need to do

690
00:31:14,566 --> 00:31:15,866 A:middle
to make the checkbox accessible.

691
00:31:16,526 --> 00:31:20,866 A:middle
So the three warnings I have
here are accessibilityValue.

692
00:31:21,436 --> 00:31:22,496 A:middle
accessibilityLabel.

693
00:31:22,666 --> 00:31:24,256 A:middle
And accessibilityPerformPress.

694
00:31:25,006 --> 00:31:28,976 A:middle
So I'm going to take
those one at a time.

695
00:31:29,216 --> 00:31:31,946 A:middle
So the first one, we've
seen this one before,

696
00:31:31,946 --> 00:31:38,376 A:middle
is accessibilityLabel, so
I'm going to do that first.

697
00:31:38,586 --> 00:31:40,736 A:middle
So what should be the
label for this checkbox?

698
00:31:41,366 --> 00:31:43,146 A:middle
Well this is a control
that I designed

699
00:31:43,146 --> 00:31:45,886 A:middle
and I thought I might
reuse in other places.

700
00:31:45,946 --> 00:31:47,346 A:middle
So I actually have an iVar

701
00:31:47,346 --> 00:31:49,106 A:middle
around that keeps
the checkbox text.

702
00:31:49,276 --> 00:31:52,176 A:middle
This is the string that actually
gets rendered in and drawn

703
00:31:52,356 --> 00:31:53,526 A:middle
in the drawInRect method.

704
00:31:54,546 --> 00:31:58,276 A:middle
So I can just return
the checkbox text here.

705
00:31:59,886 --> 00:32:01,916 A:middle
Great. So one of my
warnings has gone away.

706

707
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

708
00:31:59,886 --> 00:32:01,916 A:middle
Great. So one of my
warnings has gone away.

709
00:32:02,256 --> 00:32:06,136 A:middle
The next one I want to work on
is accessibilityPerformPress.

710
00:32:06,726 --> 00:32:08,326 A:middle
So just like the
button, when I interact

711
00:32:08,326 --> 00:32:11,126 A:middle
with this control using the
mouse, something happens

712
00:32:11,456 --> 00:32:13,416 A:middle
that changes the checked state.

713
00:32:13,656 --> 00:32:15,406 A:middle
I need that same
something to happen

714
00:32:15,836 --> 00:32:17,676 A:middle
when the accessibility
clients say "hey,

715
00:32:17,856 --> 00:32:19,416 A:middle
I want to interact
with this element."

716
00:32:20,526 --> 00:32:23,226 A:middle
So that's the
accessibilityPerformPress.

717
00:32:29,196 --> 00:32:32,056 A:middle
And I have a method
called toggleCheckedState.

718
00:32:32,056 --> 00:32:35,366 A:middle
And this is what gets called
from the mouse handling logic.

719
00:32:36,156 --> 00:32:38,416 A:middle
And just like with the
button, I return "YES,"

720
00:32:38,526 --> 00:32:41,306 A:middle
I did in fact handle
this action.

721
00:32:41,306 --> 00:32:45,576 A:middle
So now if I go back
up to the top I see

722
00:32:45,576 --> 00:32:48,206 A:middle
that I still have one more
method I need to implement.

723
00:32:48,776 --> 00:32:50,256 A:middle
And this is accessibilityValue.

724
00:32:51,116 --> 00:32:52,486 A:middle
And at this point
I ask myself, well,

725
00:32:52,796 --> 00:32:54,396 A:middle
"what is the value
for a checkbox?

726
00:32:54,396 --> 00:32:55,356 A:middle
What am I supposed to return?"

727
00:32:56,606 --> 00:32:59,266 A:middle
We've worked really, really
hard to try to answer all

728
00:32:59,266 --> 00:33:00,706 A:middle
of these questions in one place.

729

730
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

731
00:32:59,266 --> 00:33:00,706 A:middle
of these questions in one place.

732
00:33:01,186 --> 00:33:04,246 A:middle
We tried to make
NSAccessibilityProtocol file the

733
00:33:04,246 --> 00:33:05,566 A:middle
one-stop-shop for this.

734
00:33:05,996 --> 00:33:08,926 A:middle
This is where all the protocols
are implemented or defined.

735
00:33:10,076 --> 00:33:12,586 A:middle
So in another tab I have
this protocol's file.

736
00:33:13,366 --> 00:33:16,746 A:middle
And there is the
NSAccessibilityCheckbox protocol

737
00:33:16,746 --> 00:33:17,156 A:middle
right here.

738
00:33:17,966 --> 00:33:21,606 A:middle
And I see under the required
methods the AccessibilityValue

739
00:33:21,706 --> 00:33:22,776 A:middle
returns an NSNumber.

740
00:33:23,086 --> 00:33:24,716 A:middle
Okay, so that answers
my first question.

741
00:33:24,746 --> 00:33:28,556 A:middle
And it says I return "yes" if
checked, or "no" if unchecked.

742
00:33:29,906 --> 00:33:31,656 A:middle
Great. So now that I
have this information,

743
00:33:32,236 --> 00:33:36,556 A:middle
I can come down here and
implement that method.

744
00:33:37,116 --> 00:33:39,576 A:middle
So here I have another
iVar around,

745
00:33:40,166 --> 00:33:41,536 A:middle
which is "am I checked or not.?"

746
00:33:41,536 --> 00:33:44,926 A:middle
I can use that to
return "yes" or "no."

747
00:33:54,046 --> 00:33:54,436 A:middle
Oh return.

748
00:33:55,646 --> 00:33:56,646 A:middle
All right.

749
00:33:57,026 --> 00:33:59,466 A:middle
Okay. So now I can go back
up to the top of my file.

750
00:33:59,816 --> 00:34:01,206 A:middle
I see all the warnings
have gone away.

751

752
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

753
00:33:59,816 --> 00:34:01,206 A:middle
I see all the warnings
have gone away.

754
00:34:01,946 --> 00:34:02,906 A:middle
So this is all I need to do

755
00:34:02,906 --> 00:34:04,846 A:middle
to implement an accessible
CheckBox.

756
00:34:07,746 --> 00:34:09,565 A:middle
So now the entire
right-hand side

757
00:34:09,565 --> 00:34:13,166 A:middle
of our application has added
some basic accessibility to it.

758
00:34:14,056 --> 00:34:15,896 A:middle
So let's work on the next
part, which is the grid,

759
00:34:15,896 --> 00:34:19,606 A:middle
and this is perhaps the
most difficult part.

760
00:34:20,616 --> 00:34:22,706 A:middle
Again, I'm going to
back into my project,

761
00:34:22,706 --> 00:34:26,025 A:middle
and I have a view
representing the board --

762
00:34:26,136 --> 00:34:26,936 A:middle
it's the board view.

763
00:34:27,505 --> 00:34:30,176 A:middle
And here I notice:
it's, again, an NSView.

764
00:34:30,366 --> 00:34:31,876 A:middle
I'm doing all of my
own drawing here.

765
00:34:32,536 --> 00:34:36,196 A:middle
And in fact this class draws
the board and all of the pieces.

766
00:34:38,136 --> 00:34:39,906 A:middle
So I need to make
this accessible.

767
00:34:40,376 --> 00:34:41,726 A:middle
And I need to pick
a protocol now.

768
00:34:41,786 --> 00:34:44,056 A:middle
So what protocol do I need?

769
00:34:45,036 --> 00:34:46,246 A:middle
Well the way that
I like to think

770
00:34:46,246 --> 00:34:49,466 A:middle
about the Tic Tac Toe board
is it's really a collection

771
00:34:49,496 --> 00:34:50,946 A:middle
of squares, right?

772
00:34:51,315 --> 00:34:52,876 A:middle
Every time I interact
with the board,

773
00:34:52,876 --> 00:34:55,856 A:middle
it's not so much a board --
I want to play this square;

774
00:34:55,856 --> 00:34:58,496 A:middle
I want to put my piece there;
I want to get three in a row

775
00:34:58,496 --> 00:34:59,976 A:middle
to win; I want to
block my opponent

776
00:34:59,976 --> 00:35:00,896 A:middle
from getting three in a row.

777

778
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

779
00:34:59,976 --> 00:35:00,896 A:middle
from getting three in a row.

780
00:35:01,546 --> 00:35:04,546 A:middle
And so this board is
really a collection to me.

781
00:35:05,176 --> 00:35:06,036 A:middle
And the way that that's...

782
00:35:06,036 --> 00:35:08,716 A:middle
the protocol that you
can use to represent

783
00:35:08,716 --> 00:35:11,406 A:middle
that is the NSAccessibilityGroup
protocol.

784
00:35:11,456 --> 00:35:12,836 A:middle
It's a collection of things.

785
00:35:14,776 --> 00:35:19,886 A:middle
Great. So now I go to
my implementation file.

786
00:35:20,786 --> 00:35:25,276 A:middle
And I notice I have no
warnings showing up.

787
00:35:32,446 --> 00:35:33,436 A:middle
Okay. I have no warnings.

788
00:35:33,436 --> 00:35:34,556 A:middle
So what does this mean?

789
00:35:34,976 --> 00:35:38,016 A:middle
Well I have no required
methods that I need to implement

790
00:35:38,016 --> 00:35:39,726 A:middle
for the accessibilityGroup
protocol.

791
00:35:40,576 --> 00:35:43,606 A:middle
But just like with what we
saw with the other elements,

792
00:35:43,996 --> 00:35:45,926 A:middle
I can still add accessibility
to it.

793
00:35:46,836 --> 00:35:48,476 A:middle
So what's the first
thing I want to do?

794
00:35:49,026 --> 00:35:52,116 A:middle
Well, the board view
-- when I land on it --

795
00:35:52,116 --> 00:35:54,926 A:middle
it's a group and I want
some label to describe it.

796
00:35:55,436 --> 00:35:58,526 A:middle
So just like with all the
other controls I'm going

797
00:35:58,526 --> 00:36:00,316 A:middle
to add a label here.

798

799
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

800
00:35:58,526 --> 00:36:00,316 A:middle
to add a label here.

801
00:36:00,606 --> 00:36:02,306 A:middle
An accessibilityLabel
is very simple.

802
00:36:03,816 --> 00:36:04,906 A:middle
So what am I going
to return here?

803
00:36:04,966 --> 00:36:06,886 A:middle
Well just, it's the
Tic Tac Toe board.

804
00:36:07,166 --> 00:36:09,536 A:middle
So when the VoiceOver
cursor lands on this,

805
00:36:09,536 --> 00:36:11,476 A:middle
it says this is the "Tic
Tac Toe board" group.

806
00:36:13,236 --> 00:36:15,716 A:middle
Okay, so I have a group
that contains things.

807
00:36:15,796 --> 00:36:17,216 A:middle
Well what are these things?

808
00:36:17,866 --> 00:36:19,716 A:middle
They're individual squares.

809
00:36:20,196 --> 00:36:22,786 A:middle
But each of those squares
doesn't have a backing view

810
00:36:22,786 --> 00:36:23,176 A:middle
to them.

811
00:36:23,566 --> 00:36:24,996 A:middle
So I need to create some object

812
00:36:24,996 --> 00:36:26,616 A:middle
to represent it to
accessibility.

813
00:36:26,756 --> 00:36:28,386 A:middle
And the way that
we've done this is

814
00:36:28,386 --> 00:36:30,476 A:middle
with the NSAccessibilityElement.

815
00:36:31,836 --> 00:36:34,116 A:middle
Patti showed you in the slides
how you'd create an instance

816
00:36:34,116 --> 00:36:34,966 A:middle
of this inline.

817
00:36:35,316 --> 00:36:38,236 A:middle
And what I've chosen to do
here is just create a subclass

818
00:36:38,236 --> 00:36:39,326 A:middle
of it in another file.

819
00:36:40,576 --> 00:36:45,536 A:middle
So I have a subclass here
called the TicTacToeSquare

820
00:36:45,846 --> 00:36:46,956 A:middle
AccessibilityElement.

821
00:36:47,556 --> 00:36:50,466 A:middle
And it's a subclass of
NSAccessibilityElement.

822
00:36:50,816 --> 00:36:53,466 A:middle
It has one initializer,
which takes a row,

823
00:36:53,466 --> 00:36:54,346 A:middle
a column, and a delegate.

824
00:36:54,346 --> 00:36:57,756 A:middle
And it has three properties: a
row, a column, and a delegate.

825
00:36:57,786 --> 00:37:00,786 A:middle
So the delegate method
-- or the delegate --

826

827
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

828
00:36:57,786 --> 00:37:00,786 A:middle
So the delegate method
-- or the delegate --

829
00:37:00,786 --> 00:37:03,716 A:middle
is just a class that can
answer questions about "hey,

830
00:37:03,716 --> 00:37:06,166 A:middle
what pieces are at this
location on the board?

831
00:37:06,166 --> 00:37:07,246 A:middle
Is the game over?

832
00:37:07,246 --> 00:37:08,256 A:middle
Is it still in progress?"

833
00:37:08,256 --> 00:37:10,166 A:middle
So it can answer a
lot of the questions

834
00:37:10,166 --> 00:37:12,396 A:middle
that this piece is
going to need to ask.

835
00:37:13,726 --> 00:37:17,296 A:middle
So I have this element
representing it.

836
00:37:17,936 --> 00:37:19,876 A:middle
Well, I'm going to
pick a protocol now

837
00:37:19,876 --> 00:37:21,106 A:middle
to use to implement it.

838
00:37:21,876 --> 00:37:24,636 A:middle
So what best encapsulates
what a square does?

839
00:37:25,506 --> 00:37:27,656 A:middle
Well when I click on
it, something happens.

840
00:37:27,656 --> 00:37:29,006 A:middle
I place my piece there.

841
00:37:29,006 --> 00:37:30,136 A:middle
I put my piece there.

842
00:37:30,136 --> 00:37:32,876 A:middle
I play it, right?

843
00:37:32,876 --> 00:37:35,336 A:middle
And elements where you click
them to interact with them

844
00:37:35,336 --> 00:37:36,396 A:middle
and they do something
are buttons.

845
00:37:37,236 --> 00:37:37,996 A:middle
So I can conform

846
00:37:37,996 --> 00:37:39,396 A:middle
to the
accessibilityButtonProtocol

847
00:37:39,396 --> 00:37:39,666 A:middle
here.

848
00:37:41,596 --> 00:37:43,576 A:middle
And now when I move into
my implementation file,

849
00:37:46,376 --> 00:37:48,156 A:middle
I'll get a bunch of
warnings for the items

850
00:37:48,156 --> 00:37:48,966 A:middle
that I need to implement.

851
00:37:50,386 --> 00:37:54,386 A:middle
So the four warnings I get here
are accessibilityParent, Label,

852
00:37:54,626 --> 00:37:57,106 A:middle
PerformPress, and Frame
need to be implemented.

853
00:37:57,106 --> 00:37:59,036 A:middle
So I'm going to take
these one at a time.

854

855
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

856
00:38:00,066 --> 00:38:04,606 A:middle
For the frame and for the
parent, I'm just going

857
00:38:04,606 --> 00:38:07,166 A:middle
to return whatever my
superclass' implementation is.

858
00:38:07,576 --> 00:38:10,156 A:middle
So at some point these will need
to be set, so keep that in mind.

859
00:38:11,176 --> 00:38:13,716 A:middle
The accessibilityLabel is a
little bit more interesting.

860
00:38:14,526 --> 00:38:17,666 A:middle
And this is the description
for a particular square.

861
00:38:18,236 --> 00:38:22,096 A:middle
So what I'm going to do is
ask my delegate for "hey,

862
00:38:22,096 --> 00:38:24,016 A:middle
what's this square at
my row and column?"

863
00:38:24,786 --> 00:38:26,636 A:middle
And this is actually an instance

864
00:38:26,636 --> 00:38:29,056 A:middle
of the model object representing
a square on the board.

865
00:38:30,526 --> 00:38:34,406 A:middle
And then I can ask the board,
using one of its class methods,

866
00:38:34,966 --> 00:38:36,436 A:middle
"what's the description
for this square?"

867
00:38:36,766 --> 00:38:38,386 A:middle
So this is going to
return something like,

868
00:38:38,746 --> 00:38:41,366 A:middle
"this is an X square
at the top right."

869
00:38:41,476 --> 00:38:42,926 A:middle
Or an "O square in the center."

870
00:38:43,336 --> 00:38:44,946 A:middle
Or an "empty square
at the bottom left."

871
00:38:45,876 --> 00:38:47,936 A:middle
And so when I land
on this element,

872
00:38:47,936 --> 00:38:49,396 A:middle
that's what I want
to be spoken out.

873
00:38:50,756 --> 00:38:52,646 A:middle
And then the last method I need

874
00:38:52,646 --> 00:38:55,056 A:middle
to implement is
accessibilityPerformPress.

875
00:38:55,746 --> 00:38:57,756 A:middle
So when this item is
pressed, what should it do?

876
00:38:57,836 --> 00:38:59,696 A:middle
Well, I want to play my
piece there; I want to play

877
00:38:59,696 --> 00:39:01,416 A:middle
that square; I want
to make my mark there.

878

879
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

880
00:38:59,696 --> 00:39:01,416 A:middle
that square; I want
to make my mark there.

881
00:39:02,236 --> 00:39:03,276 A:middle
And my delegate knows how

882
00:39:03,276 --> 00:39:05,106 A:middle
to play a square at
a row and column.

883
00:39:05,106 --> 00:39:08,076 A:middle
So I'm just going to ask it to
do that and again, return "yes,

884
00:39:08,076 --> 00:39:08,926 A:middle
I handled this event."

885
00:39:11,326 --> 00:39:14,466 A:middle
So with that I can go back up
to the top of my file and I see

886
00:39:14,466 --> 00:39:15,686 A:middle
that all the warnings
have gone away.

887
00:39:15,766 --> 00:39:16,726 A:middle
So that's great.

888
00:39:16,726 --> 00:39:20,106 A:middle
I have, now, a class that
represents an individual square

889
00:39:20,386 --> 00:39:22,846 A:middle
for accessibility that
doesn't have a backing view.

890
00:39:24,336 --> 00:39:25,976 A:middle
So now I need to go
back to my group.

891
00:39:26,846 --> 00:39:29,166 A:middle
I need to create
instances of this class

892
00:39:29,166 --> 00:39:30,306 A:middle
to represent each square.

893
00:39:31,316 --> 00:39:32,666 A:middle
So I'm back in my board view.

894
00:39:32,666 --> 00:39:37,606 A:middle
And I want to say, "this group
has children of these elements."

895
00:39:37,906 --> 00:39:41,586 A:middle
And the way to do
that with our API is

896
00:39:41,586 --> 00:39:44,216 A:middle
to override the
accessibilityChildren method.

897
00:39:44,846 --> 00:39:48,686 A:middle
So I'm going to walk through
-- it looks like a lot of code;

898
00:39:48,686 --> 00:39:50,626 A:middle
I promise it's not -- I'm
going to walk through,

899
00:39:50,626 --> 00:39:51,786 A:middle
line-by-line, what this does.

900
00:39:53,606 --> 00:39:54,976 A:middle
The first thing is,

901
00:39:54,976 --> 00:39:58,126 A:middle
I'm overriding the
accessibilityChildren array.

902
00:39:58,166 --> 00:40:00,386 A:middle
So, I'm the accessibility
ChildrenGetter

903

904
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

905
00:39:58,166 --> 00:40:00,386 A:middle
So, I'm the accessibility
ChildrenGetter

906
00:40:00,386 --> 00:40:02,946 A:middle
and returning an array from it.

907
00:40:02,946 --> 00:40:03,866 A:middle
I have iVar around.

908
00:40:04,246 --> 00:40:05,816 A:middle
So if I've already
created my children,

909
00:40:05,816 --> 00:40:07,026 A:middle
I don't need to create
them again.

910
00:40:07,906 --> 00:40:10,596 A:middle
And if I haven't, I
create an array to hold all

911
00:40:10,756 --> 00:40:12,096 A:middle
of the accessibility Children.

912
00:40:12,266 --> 00:40:14,276 A:middle
And then I set up two
variables that I'm going

913
00:40:14,276 --> 00:40:16,256 A:middle
to be using during
my computations.

914
00:40:17,706 --> 00:40:19,726 A:middle
Now what I need to do
is create an instance

915
00:40:19,726 --> 00:40:22,916 A:middle
of that accessibility element
for every square on the board.

916
00:40:22,916 --> 00:40:27,186 A:middle
So I'm going to iterate over all
the rows and all the columns...

917
00:40:27,296 --> 00:40:29,756 A:middle
and then instantiate one

918
00:40:29,756 --> 00:40:32,236 A:middle
of those accessibility
elements for the square.

919
00:40:33,976 --> 00:40:37,196 A:middle
Now remember that the parent
and the frame were just returned

920
00:40:37,196 --> 00:40:39,136 A:middle
as whatever the super-classes'
implementation was.

921
00:40:39,776 --> 00:40:41,356 A:middle
So I need to make sure
that they're set somewhere,

922
00:40:41,426 --> 00:40:42,766 A:middle
and that's what I'm
going to do it here.

923
00:40:43,786 --> 00:40:46,156 A:middle
So I can set the accessibility
parent using a property.

924
00:40:46,546 --> 00:40:48,736 A:middle
And I just set it to
myself because the parent

925
00:40:49,046 --> 00:40:51,396 A:middle
of a square is the board.

926
00:40:51,886 --> 00:40:53,726 A:middle
And then I need to
set the frame.

927
00:40:55,126 --> 00:40:57,636 A:middle
Typically the accessibility
frame has always been given

928
00:40:57,636 --> 00:40:58,826 A:middle
in screen coordinates.

929
00:40:58,906 --> 00:41:01,116 A:middle
And It's important for us
because that's what we use

930

931
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

932
00:40:58,906 --> 00:41:01,116 A:middle
And It's important for us
because that's what we use

933
00:41:01,116 --> 00:41:04,116 A:middle
to draw the VoiceOver cursor
around a particular element.

934
00:41:05,096 --> 00:41:07,816 A:middle
And we were thinking about this
with the new API and saying,

935
00:41:08,126 --> 00:41:09,896 A:middle
you know, it'd be really
cool if we could just say,

936
00:41:09,896 --> 00:41:12,486 A:middle
here's my frame relative
to my parent.

937
00:41:12,936 --> 00:41:15,656 A:middle
And then I don't have to do
any work, when the window moves

938
00:41:15,656 --> 00:41:16,766 A:middle
or my parent moves around,

939
00:41:16,766 --> 00:41:19,136 A:middle
to recalculate my
frame in screen space.

940
00:41:20,016 --> 00:41:21,896 A:middle
So we've added this nice
convenience property

941
00:41:21,896 --> 00:41:23,766 A:middle
to NSAccessibilityElement

942
00:41:24,476 --> 00:41:26,506 A:middle
and it's called
accessibiltyFrame InParentSpace.

943
00:41:26,506 --> 00:41:27,686 A:middle
It does exactly that.

944
00:41:28,496 --> 00:41:30,716 A:middle
I can calculate the actual rect

945
00:41:31,076 --> 00:41:33,216 A:middle
that I'm using during
the -- for drawing.

946
00:41:34,206 --> 00:41:36,516 A:middle
That's given in my parent space.

947
00:41:37,206 --> 00:41:39,376 A:middle
And I can set that as
the accessibilityFrame

948
00:41:39,376 --> 00:41:39,966 A:middle
InParentSpace.

949
00:41:39,966 --> 00:41:41,846 A:middle
And now whenever
something moves,

950
00:41:41,896 --> 00:41:45,166 A:middle
we have enough information
on our end to recalculate

951
00:41:45,246 --> 00:41:46,726 A:middle
where the frame is,
and you don't have

952
00:41:46,726 --> 00:41:47,906 A:middle
to do any of that bookkeeping.

953
00:41:49,926 --> 00:41:52,196 A:middle
So now that we've created
this accessibility element

954
00:41:52,196 --> 00:41:54,346 A:middle
for each square, we
want to make sure

955
00:41:54,346 --> 00:41:55,616 A:middle
that we add them
all to the array.

956
00:41:56,356 --> 00:41:58,936 A:middle
And then as Patti said,
you want to make sure

957
00:41:58,936 --> 00:42:00,396 A:middle
that you cache these elements.

958

959
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

960
00:41:58,936 --> 00:42:00,396 A:middle
that you cache these elements.

961
00:42:00,916 --> 00:42:04,426 A:middle
So at any point in your
applications lifetime

962
00:42:04,636 --> 00:42:06,366 A:middle
where this item is
being drawn onscreen,

963
00:42:06,926 --> 00:42:10,696 A:middle
the accessibility element
representing it has to be there

964
00:42:10,696 --> 00:42:12,236 A:middle
for accessibility
to be able to query.

965
00:42:13,456 --> 00:42:17,536 A:middle
And then lastly, remember
we overrode the getter here

966
00:42:17,606 --> 00:42:19,796 A:middle
so we need to make sure we
actually return these children.

967
00:42:22,166 --> 00:42:24,316 A:middle
So with that I can go back
up to the top of my file...

968
00:42:24,726 --> 00:42:28,176 A:middle
and I finally just made this
really complicated UI accessible

969
00:42:28,426 --> 00:42:30,356 A:middle
with not too much extra work.

970
00:42:30,986 --> 00:42:33,446 A:middle
I see that all of my warnings
have gone away (well we didn't

971
00:42:33,446 --> 00:42:35,006 A:middle
have any warnings
here, for example).

972
00:42:35,976 --> 00:42:39,596 A:middle
But this has now added a basic
level accessibility to my app.

973
00:42:40,346 --> 00:42:42,756 A:middle
And so let's take a look at
what that looks like now.

974
00:42:48,356 --> 00:42:51,226 A:middle
And the way I'm going to
verify that my changes worked,

975
00:42:51,756 --> 00:42:53,376 A:middle
is by using one of the
tools Patti mentioned.

976
00:42:53,376 --> 00:42:54,896 A:middle
It's called Accessibility
Inspector.

977
00:42:55,036 --> 00:42:57,286 A:middle
And you can launch it
from the Xcode menu

978
00:42:58,076 --> 00:43:01,316 A:middle
under Open Developer Tool
and Accessibility Inspector.

979

980
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

981
00:42:58,076 --> 00:43:01,316 A:middle
under Open Developer Tool
and Accessibility Inspector.

982
00:43:03,256 --> 00:43:05,676 A:middle
Again, what this does is it
shows you the accessibility

983
00:43:05,676 --> 00:43:08,116 A:middle
information for the
item under the mouse.

984
00:43:08,976 --> 00:43:12,086 A:middle
So here, there's three
sections that are showing up.

985
00:43:12,706 --> 00:43:15,386 A:middle
The very top is the
accessibility Hierarchy.

986
00:43:16,286 --> 00:43:17,576 A:middle
So if this is analogous to...

987
00:43:17,576 --> 00:43:18,926 A:middle
it's kind of like
the view Hierarchy.

988
00:43:19,366 --> 00:43:20,946 A:middle
If your accessibility
elements aren't

989
00:43:20,946 --> 00:43:22,856 A:middle
in the accessibility
Hierarchy, they're not going

990
00:43:22,856 --> 00:43:24,616 A:middle
to be available to
accessibility clients.

991
00:43:24,866 --> 00:43:25,866 A:middle
Much like a view that's not

992
00:43:25,866 --> 00:43:27,246 A:middle
in the view Hierarchy
won't be shown.

993
00:43:28,646 --> 00:43:30,346 A:middle
The next section
is the Attributes.

994
00:43:30,456 --> 00:43:32,506 A:middle
So these are all the properties
that we have now added

995
00:43:32,796 --> 00:43:34,216 A:middle
onto accessibility elements,

996
00:43:34,476 --> 00:43:36,356 A:middle
and you can see each
of their values.

997
00:43:37,166 --> 00:43:40,056 A:middle
And there's also some
more complicated ones

998
00:43:40,056 --> 00:43:41,526 A:middle
like Parameterized Attributes.

999
00:43:42,726 --> 00:43:44,346 A:middle
So the very first
thing that we worked

1000
00:43:44,346 --> 00:43:45,866 A:middle
on was the "plus and minus" one.

1001
00:43:45,936 --> 00:43:47,246 A:middle
And remember this
was to increase

1002
00:43:47,246 --> 00:43:48,356 A:middle
and decrease the difficulty.

1003
00:43:48,356 --> 00:43:50,106 A:middle
And we needed to just
add a label there.

1004
00:43:50,106 --> 00:43:51,486 A:middle
It was a standard
AppKit control.

1005
00:43:51,906 --> 00:43:57,536 A:middle
And what I can see
is that the access...

1006
00:43:58,016 --> 00:44:01,096 A:middle
down here is showing up
as decreased difficulty.

1007

1008
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1009
00:43:58,016 --> 00:44:01,096 A:middle
down here is showing up
as decreased difficulty.

1010
00:44:01,096 --> 00:44:01,636 A:middle
So this is good.

1011
00:44:01,636 --> 00:44:03,206 A:middle
And we know that this
element is now labeled.

1012
00:44:03,206 --> 00:44:05,896 A:middle
It's going to be spoken when
it's navigated with VoiceOver.

1013
00:44:07,186 --> 00:44:12,696 A:middle
Same thing with the
Increase difficulty button.

1014
00:44:13,146 --> 00:44:15,366 A:middle
The label is there,
which is good.

1015
00:44:16,316 --> 00:44:19,296 A:middle
What about the Restart
Game button?

1016
00:44:19,476 --> 00:44:22,006 A:middle
Well remember this wasn't even
available to accessibility,

1017
00:44:22,386 --> 00:44:24,276 A:middle
and now we see that
it's in the Hierarchy

1018
00:44:24,276 --> 00:44:25,696 A:middle
as an accessibility button.

1019
00:44:26,626 --> 00:44:28,676 A:middle
And it also has a label
of "Restart Game."

1020
00:44:28,906 --> 00:44:29,456 A:middle
So this is great.

1021
00:44:29,456 --> 00:44:31,356 A:middle
it's going to be read out
as a Restart Game button.

1022
00:44:32,626 --> 00:44:34,666 A:middle
Similarly with a checkbox,

1023
00:44:35,746 --> 00:44:38,096 A:middle
it's now in the view
Hierarchy (which is awesome)

1024
00:44:38,096 --> 00:44:40,736 A:middle
so it will show up to
accessibility clients.

1025
00:44:41,276 --> 00:44:42,466 A:middle
It says it's a checkbox.

1026
00:44:42,466 --> 00:44:44,576 A:middle
It has a label of AI opponent.

1027
00:44:45,876 --> 00:44:47,336 A:middle
And now the grid.

1028
00:44:49,196 --> 00:44:50,776 A:middle
So the grid shows up as a group.

1029
00:44:51,296 --> 00:44:53,346 A:middle
And one of the accessibility
properties is the

1030
00:44:53,346 --> 00:44:54,346 A:middle
accessibility Children.

1031
00:44:54,666 --> 00:44:57,336 A:middle
And we see that it has nine
items and they're all buttons.

1032
00:44:57,336 --> 00:45:02,146 A:middle
So if you take a look at
just one button, it says it's

1033

1034
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1035
00:44:57,336 --> 00:45:02,146 A:middle
So if you take a look at
just one button, it says it's

1036
00:45:02,146 --> 00:45:04,436 A:middle
in the Hierarchy, as well
as it has a label for

1037
00:45:04,436 --> 00:45:05,746 A:middle
"it's the empty top left."

1038
00:45:06,676 --> 00:45:08,516 A:middle
The next one says "empty top."

1039
00:45:09,246 --> 00:45:10,026 A:middle
"Empty top right."

1040
00:45:10,196 --> 00:45:13,366 A:middle
And you'll notice here also
there's an action section

1041
00:45:13,366 --> 00:45:14,646 A:middle
on the bottom saying
PerformPress.

1042
00:45:14,646 --> 00:45:17,776 A:middle
And it says, this is what this
element supports for actions.

1043
00:45:17,936 --> 00:45:21,206 A:middle
So that's actually really great.

1044
00:45:21,566 --> 00:45:23,656 A:middle
Okay so now that
I've audited my app

1045
00:45:23,836 --> 00:45:26,786 A:middle
with Accessibility
Inspector, I'm fairly certain

1046
00:45:26,786 --> 00:45:29,456 A:middle
that the accessibility I've
implemented is correct.

1047
00:45:30,266 --> 00:45:33,446 A:middle
So now I'm going to
turn on VoiceOver;

1048
00:45:33,446 --> 00:45:37,626 A:middle
I'm going to audit
it using VoiceOver.

1049
00:45:37,626 --> 00:45:38,066 A:middle
>> VoiceOver on.

1050
00:45:38,066 --> 00:45:38,806 A:middle
Tic Tac Toe.

1051
00:45:39,196 --> 00:45:39,896 A:middle
Tic Tac Toe.

1052
00:45:39,966 --> 00:45:41,586 A:middle
Window. AI Opponent.

1053
00:45:41,876 --> 00:45:42,336 A:middle
Unchecked.

1054
00:45:42,416 --> 00:45:44,006 A:middle
Checkbox has keyboard focus.

1055
00:45:44,926 --> 00:45:46,706 A:middle
>> Great. So we can now
land on this element.

1056
00:45:47,236 --> 00:45:48,416 A:middle
>> Check. AI Opponent.

1057
00:45:48,486 --> 00:45:49,106 A:middle
Checkbox.

1058
00:45:49,266 --> 00:45:50,576 A:middle
>> I can activate it.

1059
00:45:50,696 --> 00:45:51,326 A:middle
>> Difficult.

1060
00:45:51,386 --> 00:45:52,926 A:middle
Decrease difficulty, button.

1061
00:45:53,256 --> 00:45:54,486 A:middle
Press. Press.

1062
00:45:54,586 --> 00:45:56,606 A:middle
Press. Decrease difficulty,
button.

1063
00:45:56,856 --> 00:45:59,146 A:middle
>> The buttons are labeled,
and they support the actions.

1064
00:45:59,186 --> 00:46:00,046 A:middle
>>2. Increase difficulty.

1065

1066
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1067
00:45:59,186 --> 00:46:00,046 A:middle
>>2. Increase difficulty.

1068
00:46:00,046 --> 00:46:01,316 A:middle
Restart Game, button.

1069
00:46:01,696 --> 00:46:03,746 A:middle
Press. Restart Game, button.

1070
00:46:03,746 --> 00:46:05,006 A:middle
>> I can press to
restart the game

1071
00:46:05,006 --> 00:46:06,136 A:middle
if I had the game in progress.

1072
00:46:06,136 --> 00:46:08,896 A:middle
>> Tic Tac Toe board ,group.

1073
00:46:09,266 --> 00:46:10,816 A:middle
>> I also land on
the board group.

1074
00:46:11,156 --> 00:46:13,406 A:middle
>> Interact with Tic
Tac Toe board group.

1075
00:46:14,006 --> 00:46:16,326 A:middle
9 items. Empty top left, button.

1076
00:46:16,686 --> 00:46:17,976 A:middle
>> And I can move
into this group

1077
00:46:17,976 --> 00:46:19,586 A:middle
to see the different pieces.

1078
00:46:19,586 --> 00:46:20,726 A:middle
>> Empty top, button.

1079
00:46:21,176 --> 00:46:23,766 A:middle
>> Now if I place a piece there
using the Activate option.

1080
00:46:23,906 --> 00:46:25,456 A:middle
>> Press X top, button.

1081
00:46:25,886 --> 00:46:27,306 A:middle
Empty top left, button.

1082
00:46:27,506 --> 00:46:29,316 A:middle
Press X top left, button.

1083
00:46:30,046 --> 00:46:30,876 A:middle
VoiceOver off.

1084
00:46:31,016 --> 00:46:32,756 A:middle
>> I can play a full
game of Tic Tac Toe now.

1085
00:46:33,096 --> 00:46:35,716 A:middle
So this is really exciting,
and I hope you've seen

1086
00:46:35,716 --> 00:46:38,876 A:middle
that with just a few lines of
code we can really walk you

1087
00:46:38,876 --> 00:46:41,286 A:middle
through what you need to
do to add accessibility

1088
00:46:41,366 --> 00:46:42,946 A:middle
to something like this.

1089
00:46:43,116 --> 00:46:45,396 A:middle
And I hope you really
see that the level

1090
00:46:45,396 --> 00:46:46,876 A:middle
of accessibility
is quite drastic.

1091
00:46:47,306 --> 00:46:48,826 A:middle
Before, there was hardly any,

1092
00:46:48,826 --> 00:46:50,526 A:middle
and now there's almost
full support.

1093
00:46:51,506 --> 00:46:55,216 A:middle
So there's a couple more
things that you can do here

1094
00:46:55,416 --> 00:46:57,466 A:middle
to make this app
even more accessible.

1095
00:46:57,546 --> 00:46:58,856 A:middle
I'm just going to point out one.

1096
00:46:59,736 --> 00:47:02,136 A:middle
Suppose for example that
I'm playing this game

1097

1098
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1099
00:46:59,736 --> 00:47:02,136 A:middle
Suppose for example that
I'm playing this game

1100
00:47:02,386 --> 00:47:04,896 A:middle
with a user who's
using VoiceOver

1101
00:47:05,656 --> 00:47:06,966 A:middle
and they're on the checkbox.

1102
00:47:07,156 --> 00:47:08,346 A:middle
And focus is on the checkbox.

1103
00:47:09,246 --> 00:47:12,766 A:middle
They can activate the item
using "command, option, space."

1104
00:47:13,556 --> 00:47:16,576 A:middle
But I can also go in and click
that checkbox with my mouse.

1105
00:47:17,206 --> 00:47:20,416 A:middle
So how does a VoiceOver user
know if I've changed the state

1106
00:47:20,416 --> 00:47:22,536 A:middle
of something out
from underneath them?

1107
00:47:23,456 --> 00:47:25,056 A:middle
Well we've solved
this problem using

1108
00:47:25,056 --> 00:47:26,686 A:middle
Accessibility Notifications.

1109
00:47:26,766 --> 00:47:28,196 A:middle
And there's always been
some questions about,

1110
00:47:28,626 --> 00:47:29,996 A:middle
"which ones do I use?

1111
00:47:29,996 --> 00:47:31,056 A:middle
When do I use them?"

1112
00:47:31,576 --> 00:47:32,676 A:middle
And we really tried to answer

1113
00:47:32,676 --> 00:47:34,956 A:middle
that with the new
protocols file.

1114
00:47:35,386 --> 00:47:37,216 A:middle
So again, this is
your one-stop-shop,

1115
00:47:37,216 --> 00:47:38,586 A:middle
and you can really
go back there.

1116
00:47:39,396 --> 00:47:43,036 A:middle
Here in the checkbox protocol
declaration, there's a comment

1117
00:47:43,106 --> 00:47:45,486 A:middle
which tells me about the
notifications I need to post.

1118
00:47:46,106 --> 00:47:47,176 A:middle
So in this case it says,

1119
00:47:47,636 --> 00:47:50,546 A:middle
"the AccessibilityValueChanged
Notification needs

1120
00:47:50,546 --> 00:47:53,046 A:middle
to be posted whenever
accessibilityValue changes."

1121
00:47:53,446 --> 00:47:56,056 A:middle
Recall that's the checked
or unchecked state.

1122
00:47:56,706 --> 00:47:58,666 A:middle
So if at any point it
changes for any reason,

1123
00:47:59,106 --> 00:48:01,006 A:middle
I need to send this
notification.

1124

1125
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1126
00:47:59,106 --> 00:48:01,006 A:middle
I need to send this
notification.

1127
00:48:01,346 --> 00:48:02,466 A:middle
And it's really easy to do.

1128
00:48:02,466 --> 00:48:04,566 A:middle
So I'm going to go back
to my checkbox view.

1129
00:48:05,346 --> 00:48:07,996 A:middle
And if you recall, we had
the toggleCheckedState

1130
00:48:07,996 --> 00:48:09,576 A:middle
and this is what got activated

1131
00:48:09,576 --> 00:48:12,256 A:middle
when you used the
AccessibilityActivate action.

1132
00:48:12,966 --> 00:48:14,876 A:middle
And here's where I need
to post that notification.

1133
00:48:15,396 --> 00:48:19,186 A:middle
So I can do that with
NSAccessibility PostNotificaton.

1134
00:48:19,916 --> 00:48:22,186 A:middle
The element this notification
should be associated

1135
00:48:22,186 --> 00:48:23,696 A:middle
with is the checkbox itself.

1136
00:48:24,256 --> 00:48:27,346 A:middle
And then the notification
type is an NSAccessibility

1137
00:48:27,766 --> 00:48:29,646 A:middle
ValueChangedNotification.

1138
00:48:30,626 --> 00:48:30,876 A:middle
That's it.

1139
00:48:32,366 --> 00:48:35,726 A:middle
So again, some of the more
advanced accessibility items now

1140
00:48:36,036 --> 00:48:38,056 A:middle
don't actually take that
much more code either.

1141
00:48:38,916 --> 00:48:41,236 A:middle
And so now if you were
to run this app again,

1142
00:48:41,516 --> 00:48:43,186 A:middle
and you were collaborating
with the VoiceOver user,

1143
00:48:43,186 --> 00:48:45,066 A:middle
and you clicked that button
they would now be announced --

1144
00:48:45,066 --> 00:48:46,826 A:middle
ah, the new state would
now be announced to them.

1145
00:48:47,986 --> 00:48:49,566 A:middle
So that's the end of the demo.

1146
00:48:50,316 --> 00:48:52,716 A:middle
And I hope what you've seen
is that we've tried to make it

1147
00:48:52,916 --> 00:48:55,176 A:middle
as easy as possible for you

1148
00:48:56,236 --> 00:48:58,886 A:middle
to add accessibility
with our new API.

1149

1150
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1151
00:49:00,016 --> 00:49:05,016 A:middle
I should also mention that
we have a sample app --

1152
00:49:05,016 --> 00:49:06,106 A:middle
you may have seen
this in the past --

1153
00:49:06,106 --> 00:49:08,496 A:middle
we call it Accessibility
UIExamples.

1154
00:49:08,956 --> 00:49:10,996 A:middle
And what it is, is a collection

1155
00:49:10,996 --> 00:49:12,736 A:middle
of all different
types of elements.

1156
00:49:12,886 --> 00:49:16,326 A:middle
So here there's a
button, text, images.

1157
00:49:16,526 --> 00:49:19,636 A:middle
We also have more complicated
UI like layout areas,

1158
00:49:19,846 --> 00:49:22,196 A:middle
collapsible outline
views, table views.

1159
00:49:22,706 --> 00:49:25,056 A:middle
And what we've done
is implemented each

1160
00:49:25,056 --> 00:49:26,456 A:middle
of these using different
methods.

1161
00:49:26,606 --> 00:49:30,226 A:middle
So for example, subclassing
from standard AppKit controls,

1162
00:49:30,476 --> 00:49:35,046 A:middle
making it a subclass of NSView,
but also OpenGL CALayers --

1163
00:49:35,046 --> 00:49:36,366 A:middle
we have examples
for all of those.

1164
00:49:37,056 --> 00:49:39,556 A:middle
And for this release we've
gone through, we've ripped

1165
00:49:39,556 --> 00:49:40,966 A:middle
out the accessibility
that we had,

1166
00:49:41,306 --> 00:49:43,366 A:middle
and added it right back
in with the new API.

1167
00:49:43,366 --> 00:49:47,556 A:middle
And what we found was a
drastic code savings: many,

1168
00:49:47,596 --> 00:49:48,626 A:middle
many fewer lines of code.

1169
00:49:48,626 --> 00:49:52,156 A:middle
And what we hope to do
is have this available

1170
00:49:52,496 --> 00:49:53,346 A:middle
as a reference for you.

1171
00:49:53,346 --> 00:49:55,486 A:middle
Say "hey, I want to learn
how to use this protocol,"

1172
00:49:55,826 --> 00:49:56,676 A:middle
you have an example

1173
00:49:56,676 --> 00:49:58,406 A:middle
in a concrete implementation
that we've done.

1174
00:49:58,956 --> 00:50:01,556 A:middle
This is available, along
with the Tic Tac Toe app,

1175

1176
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1177
00:49:58,956 --> 00:50:01,556 A:middle
This is available, along
with the Tic Tac Toe app,

1178
00:50:01,556 --> 00:50:03,686 A:middle
on developer.apple.com today.

1179
00:50:04,246 --> 00:50:05,136 A:middle
Please go check it out.

1180
00:50:05,256 --> 00:50:05,926 A:middle
Download it.

1181
00:50:06,076 --> 00:50:09,856 A:middle
We also have, in this particular
example, a nice readme file

1182
00:50:09,856 --> 00:50:11,776 A:middle
that has kind of a
developer quickstart

1183
00:50:11,776 --> 00:50:12,826 A:middle
on how to use our API.

1184
00:50:16,276 --> 00:50:19,816 A:middle
So with that, in summary,
we really took this release

1185
00:50:19,816 --> 00:50:22,426 A:middle
to think about "how
could we make it easier

1186
00:50:22,936 --> 00:50:24,766 A:middle
to add accessibility
to your application?"

1187
00:50:25,386 --> 00:50:27,986 A:middle
What we came away
with was a brand new,

1188
00:50:28,356 --> 00:50:30,016 A:middle
really easy-to-use API.

1189
00:50:31,086 --> 00:50:33,086 A:middle
And it's really easy
to use because all

1190
00:50:33,086 --> 00:50:35,656 A:middle
of the accessibility
attributes are now properties

1191
00:50:35,656 --> 00:50:36,386 A:middle
on the objects.

1192
00:50:36,466 --> 00:50:37,766 A:middle
So they're really easy to set.

1193
00:50:37,996 --> 00:50:41,086 A:middle
We also have the accessibility
protocols, which guide you

1194
00:50:41,086 --> 00:50:44,516 A:middle
through the items that you
need to implement in order

1195
00:50:44,516 --> 00:50:46,606 A:middle
to make your custom
UI accessible.

1196
00:50:47,216 --> 00:50:50,296 A:middle
And then lastly we formalize
the faux UI element class

1197
00:50:50,636 --> 00:50:52,216 A:middle
into NSAccessibility Element.

1198
00:50:52,456 --> 00:50:55,646 A:middle
And it's there for you to be
an accessibility backing object

1199
00:50:55,946 --> 00:50:59,586 A:middle
when there's no UI view for
it, or NSView backing it.

1200

1201
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1202
00:51:00,206 --> 00:51:02,216 A:middle
We'd like to encourage you
to test with VoiceOver.

1203
00:51:02,216 --> 00:51:05,356 A:middle
It ships with every Mac and
it's a great way for you

1204
00:51:05,356 --> 00:51:08,296 A:middle
to see what our customers
are going to experience using

1205
00:51:08,296 --> 00:51:10,756 A:middle
that assistive technology
with your application.

1206
00:51:11,396 --> 00:51:14,256 A:middle
If you'd like to just kind
of debug a little bit more,

1207
00:51:14,546 --> 00:51:16,796 A:middle
we have Accessibility
Inspector there to really get

1208
00:51:16,796 --> 00:51:20,106 A:middle
in at what exactly is going on
with your accessibility element.

1209
00:51:21,156 --> 00:51:23,296 A:middle
And lastly, we wanted
to support you

1210
00:51:23,296 --> 00:51:24,716 A:middle
in this transition
to the new API.

1211
00:51:24,716 --> 00:51:27,406 A:middle
And we really want to
encourage you to use it.

1212
00:51:27,976 --> 00:51:30,456 A:middle
And so we've built up these
really great developer examples

1213
00:51:30,456 --> 00:51:33,936 A:middle
that we've now released, and we
hope you can use as a reference

1214
00:51:34,176 --> 00:51:35,756 A:middle
for your implementation.

1215
00:51:36,356 --> 00:51:40,336 A:middle
If you'd like more
information about our team,

1216
00:51:40,336 --> 00:51:43,796 A:middle
or accessibility, or frameworks
in general, please feel free

1217
00:51:43,796 --> 00:51:45,916 A:middle
to reach out to our App
Frameworks Evangelist,

1218
00:51:45,916 --> 00:51:46,546 A:middle
Jake Behrens.

1219
00:51:46,676 --> 00:51:49,326 A:middle
His email is behrens@apple.com.

1220
00:51:49,806 --> 00:51:52,416 A:middle
And if you have more technical
questions, you can take a look

1221
00:51:52,416 --> 00:51:54,936 A:middle
at the documentation
on developer.apple.com,

1222
00:51:55,236 --> 00:51:57,086 A:middle
as well as ask questions
on the dev forums.

1223
00:51:59,116 --> 00:52:01,586 A:middle
If you liked this session, and
you're interested in finding

1224

1225
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1226
00:51:59,116 --> 00:52:01,586 A:middle
If you liked this session, and
you're interested in finding

1227
00:52:01,586 --> 00:52:04,236 A:middle
out how accessibility works
on our other platforms,

1228
00:52:04,676 --> 00:52:07,806 A:middle
there's an "Accessibility on
iOS" session in this room,

1229
00:52:07,856 --> 00:52:09,156 A:middle
right after this presentation.

1230
00:52:09,776 --> 00:52:12,736 A:middle
And then a Web Accessibility
presentation

1231
00:52:13,016 --> 00:52:14,486 A:middle
on Friday at 9:00 am.

1232
00:52:15,196 --> 00:52:16,806 A:middle
Thank you so much for
coming to our session.

1233
00:52:16,806 --> 00:52:18,186 A:middle
We really appreciate
you being here.

1234
00:52:18,556 --> 00:52:19,756 A:middle
And from all of us at Apple,

1235
00:52:19,906 --> 00:52:21,176 A:middle
we hope you have a
fantastic rest of WWDC.

1236
00:52:21,176 --> 00:52:21,646 A:middle
Thank you very much.

1237
00:52:21,646 --> 00:52:22,686 A:middle
[1]Cannot tell if
speaker is saying

1238
00:52:22,936 --> 00:52:23,986 A:middle
"accessibility compiler"
or "-Xcompiler".

1239
00:52:24,016 --> 00:52:24,856 A:middle
[2]I think she's
saying "forUIElement".

1240
