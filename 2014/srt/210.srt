X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1
00:00:12,156 --> 00:00:12,736 A:middle
>> Hi everyone.

2
00:00:13,156 --> 00:00:16,146 A:middle
I'm Clare and I'm on the
iOS Accessibility Team here

3
00:00:16,146 --> 00:00:16,486 A:middle
at Apple.

4
00:00:16,776 --> 00:00:20,136 A:middle
Today, I'll be sharing with
you about accessibility on iOS,

5
00:00:20,816 --> 00:00:25,376 A:middle
and how you can develop your
apps to be used by everyone.

6
00:00:25,706 --> 00:00:28,886 A:middle
Our talk today is going
to be in two parts.

7
00:00:30,116 --> 00:00:32,716 A:middle
First, I'll give an
introduction to accessibility.

8
00:00:33,576 --> 00:00:35,606 A:middle
I'll talk about some of
the features we offer

9
00:00:35,606 --> 00:00:39,796 A:middle
on iOS currently, as well as
some new things coming in iOS 8.

10
00:00:40,426 --> 00:00:43,426 A:middle
In the second part of this talk,

11
00:00:44,256 --> 00:00:46,476 A:middle
I'll be showing you how you
can make your apps accessible,

12
00:00:47,246 --> 00:00:49,236 A:middle
both by adding visual
accommodations,

13
00:00:50,476 --> 00:00:52,726 A:middle
and by implementing
Semantic Accessibility.

14
00:00:58,276 --> 00:01:01,036 A:middle
So first, what is accessibility?

15

16
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

17
00:00:58,276 --> 00:01:01,036 A:middle
So first, what is accessibility?

18
00:01:02,156 --> 00:01:03,736 A:middle
Accessibility is all

19
00:01:03,736 --> 00:01:05,836 A:middle
about making things
usable for everyone.

20
00:01:06,606 --> 00:01:09,946 A:middle
On iOS, we look at four
broad areas of user needs.

21
00:01:10,616 --> 00:01:13,906 A:middle
We want users with physical
and motor challenges,

22
00:01:15,346 --> 00:01:19,156 A:middle
users with learning needs,
users with hearing loss,

23
00:01:20,106 --> 00:01:21,846 A:middle
and users with different
vision needs,

24
00:01:22,176 --> 00:01:24,236 A:middle
to be able to experience
iOS fully.

25
00:01:24,816 --> 00:01:27,366 A:middle
Our goal is equal
access for everyone.

26
00:01:27,876 --> 00:01:33,576 A:middle
So let's look at some examples
of how we accomplish this.

27
00:01:33,956 --> 00:01:36,836 A:middle
Some users may have a physical
impairment that prevents them

28
00:01:36,836 --> 00:01:38,186 A:middle
from using the touch screen.

29
00:01:38,336 --> 00:01:42,066 A:middle
In fact, their only [inaudible]
device may be a switch.

30
00:01:42,816 --> 00:01:45,156 A:middle
A switch could be something
like a button mounted

31
00:01:45,156 --> 00:01:46,186 A:middle
on a wheelchair headrest.

32
00:01:47,286 --> 00:01:51,276 A:middle
So how do we make the rich
touch interface of iOS usable

33
00:01:51,276 --> 00:01:53,026 A:middle
by someone who can
only use a switch?

34
00:01:53,576 --> 00:01:57,636 A:middle
Our answer is Switch Control.

35
00:01:57,876 --> 00:02:02,356 A:middle
When Switch Control is enabled,
a cursor appears on the screen,

36

37
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

38
00:01:57,876 --> 00:02:02,356 A:middle
When Switch Control is enabled,
a cursor appears on the screen,

39
00:02:02,746 --> 00:02:07,066 A:middle
and it moves from item to
item with a specific timing.

40
00:02:07,426 --> 00:02:12,086 A:middle
When the user activates their
switch, that lets them interact

41
00:02:12,256 --> 00:02:13,266 A:middle
with a highlighted element,

42
00:02:13,806 --> 00:02:16,646 A:middle
so they can do things
like tap or scroll.

43
00:02:17,036 --> 00:02:21,566 A:middle
Next, let's look at learning.

44
00:02:21,766 --> 00:02:24,846 A:middle
iOS devices have been incredibly
powerful in the classroom,

45
00:02:24,846 --> 00:02:27,576 A:middle
because of their
easy to use interface

46
00:02:28,136 --> 00:02:29,136 A:middle
and their engaging apps.

47
00:02:30,096 --> 00:02:32,086 A:middle
For the same reasons,
they've been great

48
00:02:32,086 --> 00:02:33,626 A:middle
for children with autism.

49
00:02:34,166 --> 00:02:37,196 A:middle
But for these users, we faced
some unique challenges at first.

50
00:02:38,056 --> 00:02:41,236 A:middle
For one, when a child with
autism is learning in an app,

51
00:02:41,816 --> 00:02:43,616 A:middle
they might decide to
press the Home button.

52
00:02:44,026 --> 00:02:46,336 A:middle
And now the device is
full of distractions.

53
00:02:46,896 --> 00:02:50,896 A:middle
So to address this issue,
we created Guided Access,

54
00:02:51,096 --> 00:02:53,326 A:middle
which is a way for
parents or educators

55
00:02:53,636 --> 00:02:56,286 A:middle
to keep the device
in a specific app.

56
00:02:56,916 --> 00:03:00,426 A:middle
When Guided Access is enabled,
pressing the Home button

57

58
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

59
00:02:56,916 --> 00:03:00,426 A:middle
When Guided Access is enabled,
pressing the Home button

60
00:03:00,596 --> 00:03:02,036 A:middle
or the Lock button
have no effect,

61
00:03:02,836 --> 00:03:05,846 A:middle
and so the child can have
an uninterrupted learning

62
00:03:05,846 --> 00:03:07,716 A:middle
experience, free
from distractions.

63
00:03:08,076 --> 00:03:12,116 A:middle
Next, let's look at hearing.

64
00:03:13,056 --> 00:03:15,846 A:middle
Many users with hearing
loss use hearing aids

65
00:03:15,976 --> 00:03:17,806 A:middle
to help amplify the
sound around them,

66
00:03:18,316 --> 00:03:21,136 A:middle
but traditional hearing aids
come with a couple of issues.

67
00:03:22,056 --> 00:03:25,876 A:middle
First, they require that
you carry a remote with you

68
00:03:25,876 --> 00:03:27,326 A:middle
so that you can adjust
the volume,

69
00:03:27,606 --> 00:03:28,946 A:middle
and that can be cumbersome.

70
00:03:30,176 --> 00:03:33,346 A:middle
And second, call quality
can be less than optimal

71
00:03:33,656 --> 00:03:34,696 A:middle
when using a hearing aid.

72
00:03:34,866 --> 00:03:37,096 A:middle
When you have a phone
next to a hearing aid,

73
00:03:37,266 --> 00:03:40,036 A:middle
either the hearing aid
amplifies all the sound,

74
00:03:40,036 --> 00:03:43,826 A:middle
including background noise,
or it picks up the signal

75
00:03:44,006 --> 00:03:45,656 A:middle
from the phone's
electromagnetic field,

76
00:03:46,096 --> 00:03:49,286 A:middle
but that signal can also
be noisy, creating static.

77
00:03:49,906 --> 00:03:54,326 A:middle
So to address these two
issues, we partnered

78
00:03:54,326 --> 00:03:56,516 A:middle
with hearing aid
manufacturers around the globe

79
00:03:56,956 --> 00:03:58,566 A:middle
to create made-for-iPhone
hearing aids.

80
00:03:59,236 --> 00:04:01,866 A:middle
These hearing aids connect
directly to your iPhone,

81

82
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

83
00:03:59,236 --> 00:04:01,866 A:middle
These hearing aids connect
directly to your iPhone,

84
00:04:02,196 --> 00:04:04,516 A:middle
and you can do things
like adjust the volume

85
00:04:04,516 --> 00:04:07,246 A:middle
of your hearing aids, without
the need for a separate remote.

86
00:04:07,776 --> 00:04:10,866 A:middle
In addition, audio streams
directly from your iPhone

87
00:04:11,036 --> 00:04:11,806 A:middle
to your hearing aid,

88
00:04:12,036 --> 00:04:14,116 A:middle
so it becomes effectively
a Bluetooth headset.

89
00:04:14,306 --> 00:04:17,245 A:middle
And that improves call
quality dramatically.

90
00:04:17,666 --> 00:04:23,656 A:middle
Finally, let's look at
the broad area of vision.

91
00:04:24,146 --> 00:04:26,266 A:middle
When the iPhone was
first introduced,

92
00:04:26,876 --> 00:04:29,916 A:middle
many people were concerned that
blind users would not be able

93
00:04:29,916 --> 00:04:31,286 A:middle
to take advantage
of its features.

94
00:04:31,476 --> 00:04:35,096 A:middle
Because if you think about it,
how do you use a touch screen

95
00:04:35,546 --> 00:04:36,856 A:middle
if you don't see the screen.

96
00:04:37,636 --> 00:04:38,776 A:middle
It's going to be difficult

97
00:04:38,776 --> 00:04:41,046 A:middle
because you won't necessarily
know what you're touching,

98
00:04:41,436 --> 00:04:43,116 A:middle
and you might accidentally
tap a button

99
00:04:43,116 --> 00:04:46,206 A:middle
that you didn't mean to tap.

100
00:04:46,206 --> 00:04:48,756 A:middle
So to address this,
we created VoiceOver.

101
00:04:49,646 --> 00:04:53,126 A:middle
When VoiceOver is enabled,
a user can touch anywhere

102
00:04:53,126 --> 00:04:55,636 A:middle
on screen to hear what
they just touched,

103
00:04:56,066 --> 00:05:02,976 A:middle
before they take an action
like tapping a button.

104

105
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

106
00:04:56,066 --> 00:05:02,976 A:middle
before they take an action
like tapping a button.

107
00:05:03,326 --> 00:05:06,236 A:middle
We also have accommodations
in our settings for users

108
00:05:06,236 --> 00:05:09,516 A:middle
with low vision who may not
necessarily need the full power

109
00:05:09,516 --> 00:05:10,226 A:middle
of VoiceOver.

110
00:05:10,526 --> 00:05:13,986 A:middle
For example, some users
prefer bolder fonts,

111
00:05:14,266 --> 00:05:18,746 A:middle
in which case they can enable
bold text to get thicker text.

112
00:05:19,176 --> 00:05:22,396 A:middle
Some users may need
higher contrast, and if so,

113
00:05:22,396 --> 00:05:24,786 A:middle
we offer several options,
including the ability

114
00:05:24,786 --> 00:05:27,136 A:middle
to reduce transparency
on the system.

115
00:05:29,476 --> 00:05:32,716 A:middle
And finally, for users who
are more sensitive to motion,

116
00:05:32,926 --> 00:05:34,356 A:middle
we offer a Reduce
Motion setting,

117
00:05:34,356 --> 00:05:36,526 A:middle
which provides more
subtle transitions.

118
00:05:36,896 --> 00:05:40,076 A:middle
For example, when you launch an
app with Reduce Motion enabled,

119
00:05:40,606 --> 00:05:43,516 A:middle
it cross-fades into view.

120
00:05:46,716 --> 00:05:49,356 A:middle
So that's some of what
we offer on iOS currently

121
00:05:49,356 --> 00:05:50,636 A:middle
to support equal access.

122
00:05:51,076 --> 00:05:54,026 A:middle
But we've been working hard, and
I'd like to highlight just some

123
00:05:54,026 --> 00:05:56,026 A:middle
of the new features
we're offering in iOS 8.

124
00:05:56,616 --> 00:06:01,426 A:middle
First, Guided Access
Time Limits.

125

126
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

127
00:05:56,616 --> 00:06:01,426 A:middle
First, Guided Access
Time Limits.

128
00:06:02,166 --> 00:06:03,966 A:middle
Time limits are all
about transitions.

129
00:06:04,286 --> 00:06:08,496 A:middle
When a child is immersed in an
app, and then it's time to move

130
00:06:08,496 --> 00:06:09,506 A:middle
on to the next activity,

131
00:06:09,776 --> 00:06:12,186 A:middle
that transition can
cause some anxiety.

132
00:06:13,036 --> 00:06:16,886 A:middle
With time limits, a caretaker
can assign a specific amount

133
00:06:16,996 --> 00:06:18,696 A:middle
of time that a child
should use an app.

134
00:06:19,066 --> 00:06:21,386 A:middle
When the time limit
is almost reached,

135
00:06:21,756 --> 00:06:24,756 A:middle
the child receives a warning,
helping them to prepare to move

136
00:06:24,756 --> 00:06:25,836 A:middle
on to the next activity.

137
00:06:26,116 --> 00:06:29,886 A:middle
And when the time limit
is over, the device locks.

138
00:06:30,366 --> 00:06:32,676 A:middle
Next, we're bringing
Alex to iOS.

139
00:06:32,786 --> 00:06:35,456 A:middle
Some of you may have
already met Alex.

140
00:06:35,806 --> 00:06:37,986 A:middle
But for those who haven't,
I'll let him introduce himself.

141
00:06:39,316 --> 00:06:40,686 A:middle
>> Hi everyone.

142
00:06:41,316 --> 00:06:44,066 A:middle
I'm Alex. And I'm
the US English voice.

143
00:06:44,836 --> 00:06:48,746 A:middle
I've been living on Macs for
years, and now I'm excited

144
00:06:48,746 --> 00:06:51,036 A:middle
to make myself at home on iOS.

145
00:06:51,036 --> 00:06:54,046 A:middle
>> So Alex will be
available in all

146
00:06:54,046 --> 00:06:56,276 A:middle
of our assistive
technologies that use speech,

147
00:06:56,626 --> 00:06:58,926 A:middle
including VoiceOver,
Speak Selection,

148

149
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

150
00:07:00,216 --> 00:07:01,866 A:middle
and a new feature
we're introducing

151
00:07:01,866 --> 00:07:03,656 A:middle
in iOS 8, called Speak Screen.

152
00:07:04,136 --> 00:07:06,086 A:middle
Speak Screen is great for anyone

153
00:07:06,156 --> 00:07:07,546 A:middle
who might have trouble
reading the screen.

154
00:07:07,696 --> 00:07:12,336 A:middle
When it's enabled, you can do
a simple gesture or ask Siri

155
00:07:12,336 --> 00:07:13,336 A:middle
to speak the screen to you,

156
00:07:13,336 --> 00:07:16,776 A:middle
and the device will start
reading whatever's on screen.

157
00:07:17,326 --> 00:07:20,666 A:middle
You also get options, like
the ability to pause, rewind,

158
00:07:21,086 --> 00:07:22,436 A:middle
or again slow down the speech.

159
00:07:22,726 --> 00:07:27,476 A:middle
And finally, I'd like
to highlight Zoom.

160
00:07:27,946 --> 00:07:30,836 A:middle
Some of you may have been
using Zoom for years on iOS,

161
00:07:31,296 --> 00:07:35,486 A:middle
but we've re-imagined it in
iOS 8, and have a whole new way

162
00:07:35,486 --> 00:07:37,616 A:middle
for you to interact with it.

163
00:07:38,206 --> 00:07:40,616 A:middle
But before I introduce
that, let's first talk

164
00:07:40,616 --> 00:07:42,056 A:middle
about what Zoom does currently.

165
00:07:42,556 --> 00:07:46,496 A:middle
Zoom magnifies the
entire screen,

166
00:07:46,916 --> 00:07:49,586 A:middle
and then you use three-finger
gestures to navigate.

167
00:07:50,796 --> 00:07:52,966 A:middle
This approach comes
with a few issues.

168
00:07:53,816 --> 00:07:56,496 A:middle
First, if you're using
three-finger gestures,

169
00:07:57,026 --> 00:08:00,286 A:middle
that means you're covering up a
significant part of the screen,

170

171
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

172
00:07:57,026 --> 00:08:00,286 A:middle
that means you're covering up a
significant part of the screen,

173
00:08:00,286 --> 00:08:03,406 A:middle
especially on iPhones.

174
00:08:04,436 --> 00:08:06,856 A:middle
Also using three-finger
gestures means it's hard

175
00:08:06,856 --> 00:08:08,196 A:middle
to use a phone on the go.

176
00:08:08,726 --> 00:08:11,406 A:middle
You can't use the phone in a
single hand, you always need

177
00:08:11,406 --> 00:08:13,926 A:middle
to have one hand to hold
it, and the other hand

178
00:08:13,926 --> 00:08:15,036 A:middle
to do the three-finger gestures.

179
00:08:16,096 --> 00:08:20,996 A:middle
And finally, typing can be
tricky with Zoom enabled.

180
00:08:21,396 --> 00:08:23,196 A:middle
You have the choice
between zooming

181
00:08:23,196 --> 00:08:25,266 A:middle
in on the content
you're creating,

182
00:08:26,166 --> 00:08:27,976 A:middle
or having access to
the full keyboard.

183
00:08:28,536 --> 00:08:30,726 A:middle
But you can't have
both at the same time.

184
00:08:31,296 --> 00:08:35,126 A:middle
So to address all
of these issues,

185
00:08:35,126 --> 00:08:37,706 A:middle
we're introducing a new
windowed mode for Zoom.

186
00:08:37,836 --> 00:08:39,265 A:middle
And I'd like to demo
that to you now.

187
00:08:40,645 --> 00:08:42,525 A:middle
This is windowed Zoom.

188
00:08:42,726 --> 00:08:45,346 A:middle
Notice how only part of
the screen is magnified?

189
00:08:45,696 --> 00:08:49,366 A:middle
I can change what part is
magnified by dragging the edge

190
00:08:49,526 --> 00:08:51,046 A:middle
of the window with
a single finger.

191
00:08:52,056 --> 00:08:56,456 A:middle
I can also tap the edge of the
window to get resize handles,

192
00:08:56,586 --> 00:08:58,806 A:middle
so I can change how much
of the screen is magnified.

193
00:08:59,366 --> 00:09:04,156 A:middle
If I tap on the arrow at the
edge of the window, I get a menu

194

195
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

196
00:08:59,366 --> 00:09:04,156 A:middle
If I tap on the arrow at the
edge of the window, I get a menu

197
00:09:04,156 --> 00:09:06,176 A:middle
with several options,
including the ability

198
00:09:06,176 --> 00:09:07,306 A:middle
to adjust my Zoom level.

199
00:09:07,606 --> 00:09:11,456 A:middle
Now, let's go into notes.

200
00:09:11,456 --> 00:09:16,266 A:middle
I'm going to create a new
note, and watch what happens

201
00:09:16,266 --> 00:09:17,666 A:middle
when the keyboard comes up.

202
00:09:18,536 --> 00:09:21,046 A:middle
The Zoom window automatically
got out of the way

203
00:09:21,046 --> 00:09:23,516 A:middle
of the keyboard, so I have
full access of the keyboard,

204
00:09:23,806 --> 00:09:25,236 A:middle
but my content is zoomed.

205
00:09:25,536 --> 00:09:31,996 A:middle
And as I type, notice how the
Zoom window follows my cursor.

206
00:09:31,996 --> 00:09:33,916 A:middle
So I can always see
what I just typed.

207
00:09:35,196 --> 00:09:37,436 A:middle
So that's some of what we've
been doing here at Apple

208
00:09:37,846 --> 00:09:39,746 A:middle
to promote equal
access for everyone.

209
00:09:40,636 --> 00:09:43,626 A:middle
But for the second part of
the story, we need your help.

210
00:09:44,266 --> 00:09:48,036 A:middle
IOS is a great platform because
of all the apps you guys create,

211
00:09:48,186 --> 00:09:50,106 A:middle
and it's up to you to make sure

212
00:09:50,106 --> 00:09:52,266 A:middle
that your apps can
be used by everyone.

213
00:09:52,876 --> 00:09:56,906 A:middle
To that end, I'll be showing
you now how you can do

214
00:09:56,906 --> 00:09:57,706 A:middle
that with our API.

215

216
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

217
00:10:00,296 --> 00:10:02,506 A:middle
Our tutorial is going
to be in two parts.

218
00:10:02,906 --> 00:10:06,516 A:middle
First, I'll show you how to add
visual accommodations for users

219
00:10:06,516 --> 00:10:07,506 A:middle
with different vision needs.

220
00:10:07,826 --> 00:10:09,846 A:middle
And second, I'll
be showing you how

221
00:10:09,846 --> 00:10:11,616 A:middle
to implement some
magic accessibility.

222
00:10:12,026 --> 00:10:16,356 A:middle
So an assistive technology like
VoiceOver can navigate your app.

223
00:10:16,356 --> 00:10:17,906 A:middle
Earlier in this talk,
I showed some

224
00:10:17,906 --> 00:10:20,996 A:middle
of the visual accommodations
we offer on iOS for users

225
00:10:20,996 --> 00:10:21,946 A:middle
with different vision needs.

226
00:10:22,636 --> 00:10:24,306 A:middle
Now, we're providing API,

227
00:10:24,876 --> 00:10:26,346 A:middle
so you can make those
accommodations

228
00:10:26,346 --> 00:10:27,456 A:middle
in your apps as well.

229
00:10:28,296 --> 00:10:31,826 A:middle
We have a way for you to detect
whether the user has bold text,

230
00:10:32,226 --> 00:10:34,536 A:middle
reduced transparency,
darkened colors,

231
00:10:34,636 --> 00:10:36,106 A:middle
or Reduce Motion enabled.

232
00:10:36,136 --> 00:10:37,986 A:middle
And that makes it
really easy for you

233
00:10:38,176 --> 00:10:41,116 A:middle
to make specific adjustments
in your app for those users.

234
00:10:41,646 --> 00:10:44,776 A:middle
So I'd like to show you
how you can do that now,

235
00:10:45,476 --> 00:10:47,636 A:middle
using a sample app we've
created for this presentation.

236
00:10:48,216 --> 00:10:51,636 A:middle
Okay, so first we're going to
identify some areas of our app

237
00:10:51,786 --> 00:10:53,206 A:middle
that need visual accommodations.

238
00:10:53,416 --> 00:10:55,816 A:middle
To do that, I've
gone to my simulator,

239
00:10:55,886 --> 00:10:58,606 A:middle
and I've enabled several of
the accessibility settings.

240
00:10:58,766 --> 00:11:02,476 A:middle
In this case, I've got
Bold Text, Reduce Motion,

241

242
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

243
00:10:58,766 --> 00:11:02,476 A:middle
In this case, I've got
Bold Text, Reduce Motion,

244
00:11:03,096 --> 00:11:04,626 A:middle
and underneath Increase
Contrast,

245
00:11:04,626 --> 00:11:06,706 A:middle
I've also got Reduced
Transparency

246
00:11:06,996 --> 00:11:07,906 A:middle
and Darkened Colors.

247
00:11:08,166 --> 00:11:11,376 A:middle
So that way, when we build
and run our app from Xcode,

248
00:11:11,376 --> 00:11:13,986 A:middle
we'll see what a user with
those settings will see.

249
00:11:14,596 --> 00:11:16,196 A:middle
So now, I'm going to Xcode.

250
00:11:16,196 --> 00:11:20,236 A:middle
I'm going to click
on build and run.

251
00:11:20,366 --> 00:11:22,966 A:middle
So this is a simple dating app.

252
00:11:23,056 --> 00:11:24,786 A:middle
At the top, you have
the title of the app,

253
00:11:24,786 --> 00:11:25,766 A:middle
which is HelloGoodbye.

254
00:11:26,166 --> 00:11:28,536 A:middle
Notice how the title
is very bold,

255
00:11:28,726 --> 00:11:30,786 A:middle
and the background
is fully opaque.

256
00:11:31,086 --> 00:11:34,506 A:middle
That's because we're using a
standard navigation controller.

257
00:11:34,646 --> 00:11:36,056 A:middle
So we get the bold text

258
00:11:36,286 --> 00:11:38,786 A:middle
and reduced transparency
behaviors for free.

259
00:11:39,306 --> 00:11:42,456 A:middle
But because we're doing
some custom UI in our app,

260
00:11:42,696 --> 00:11:44,346 A:middle
there's still some
work we need to do.

261
00:11:44,776 --> 00:11:48,526 A:middle
You probably already noticed
how we have transparent overlays

262
00:11:48,636 --> 00:11:49,846 A:middle
over a photo background.

263
00:11:50,646 --> 00:11:52,566 A:middle
When reduced transparency is on,

264
00:11:52,566 --> 00:11:54,256 A:middle
we should really be
making those opaque.

265
00:11:55,216 --> 00:11:59,126 A:middle
In addition, the text in the
buttons should be thicker

266
00:11:59,126 --> 00:12:00,876 A:middle
because we have bold
text enabled.

267

268
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

269
00:11:59,126 --> 00:12:00,876 A:middle
because we have bold
text enabled.

270
00:12:01,616 --> 00:12:04,896 A:middle
Now I'm going to click
on the Profile button.

271
00:12:06,126 --> 00:12:08,906 A:middle
So here's where as a user
I can adjust my settings.

272
00:12:09,506 --> 00:12:12,826 A:middle
Again, we have the transparent
overlay, and the text

273
00:12:12,826 --> 00:12:13,726 A:middle
that should be bolder.

274
00:12:14,516 --> 00:12:18,026 A:middle
At the bottom of this view,
we have a preview tab,

275
00:12:18,026 --> 00:12:21,066 A:middle
which I can slide up
to see how other users

276
00:12:21,066 --> 00:12:22,686 A:middle
in this app will see my profile.

277
00:12:23,786 --> 00:12:27,046 A:middle
Notice how my info is in gray
text under each of the headings.

278
00:12:27,936 --> 00:12:30,096 A:middle
When the user has
darkened colors enabled,

279
00:12:30,406 --> 00:12:32,306 A:middle
it would be better if
that text were darker

280
00:12:32,776 --> 00:12:35,266 A:middle
to provide higher contrast
against the white background.

281
00:12:36,556 --> 00:12:39,646 A:middle
Now, I'm going to click on
Back and I'm going to go

282
00:12:39,646 --> 00:12:40,976 A:middle
into the Matches page.

283
00:12:41,286 --> 00:12:44,136 A:middle
So here's where I
can see matches

284
00:12:44,136 --> 00:12:45,736 A:middle
that the app is suggesting
for me.

285
00:12:46,006 --> 00:12:48,176 A:middle
And I can say hello or
goodbye to each one.

286
00:12:48,456 --> 00:12:52,156 A:middle
I like this guy's
elevator pitch,

287
00:12:52,156 --> 00:12:53,886 A:middle
so I'm going to say hello.

288
00:12:54,126 --> 00:12:58,346 A:middle
And watch what happens
when I swipe up.

289
00:12:58,606 --> 00:13:01,696 A:middle
Notice how the next
match animates on screen

290

291
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

292
00:12:58,606 --> 00:13:01,696 A:middle
Notice how the next
match animates on screen

293
00:13:02,016 --> 00:13:03,466 A:middle
as though it's coming
from far away.

294
00:13:03,946 --> 00:13:06,776 A:middle
So that's an example
of an animation

295
00:13:06,776 --> 00:13:09,396 A:middle
where we should provide
an alternate to users

296
00:13:09,396 --> 00:13:13,836 A:middle
who are more sensitive
to motion.

297
00:13:14,076 --> 00:13:17,786 A:middle
And now, let's do all this,
using the API in Xcode.

298
00:13:18,696 --> 00:13:20,796 A:middle
So the first thing we're
going to address is the text.

299
00:13:21,436 --> 00:13:23,726 A:middle
Let's make sure that it's
thicker when bold text is on.

300
00:13:24,036 --> 00:13:26,996 A:middle
To do that, I'm going to click
on the Style Utilities file

301
00:13:26,996 --> 00:13:29,066 A:middle
on the left, which is
where all of our colors

302
00:13:29,066 --> 00:13:30,026 A:middle
and fonts are defined.

303
00:13:30,306 --> 00:13:32,346 A:middle
I'm going to click on
the drop-down at the top,

304
00:13:33,246 --> 00:13:34,716 A:middle
to find our font methods.

305
00:13:35,366 --> 00:13:40,116 A:middle
Notice how both of these methods
are returning Avenir-Light

306
00:13:40,116 --> 00:13:41,746 A:middle
as a custom font.

307
00:13:41,936 --> 00:13:45,356 A:middle
Now, if we were using the system
font, or the preferred font

308
00:13:45,356 --> 00:13:48,936 A:middle
for text style API, we would
be getting bold text for free.

309
00:13:49,566 --> 00:13:52,516 A:middle
But because we've picked
a specific font to use,

310
00:13:52,986 --> 00:13:55,816 A:middle
we also need to pick a font to
use when bold text is enabled.

311
00:13:55,816 --> 00:14:01,306 A:middle
So to do that, I'd like
to create a helper method,

312

313
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

314
00:13:55,816 --> 00:14:01,306 A:middle
So to do that, I'd like
to create a helper method,

315
00:14:01,776 --> 00:14:03,806 A:middle
that returns a font name.

316
00:14:04,166 --> 00:14:07,126 A:middle
All we're doing here is first
checking whether bold text

317
00:14:07,126 --> 00:14:07,736 A:middle
is enabled.

318
00:14:07,776 --> 00:14:12,506 A:middle
If it is, we can return a
thicker version of our font.

319
00:14:12,856 --> 00:14:15,206 A:middle
Otherwise, we can return the
same font we've been using.

320
00:14:15,876 --> 00:14:21,666 A:middle
And now, we just need to use our
helper in our 2-font methods.

321
00:14:24,876 --> 00:14:26,676 A:middle
So that takes care of bold text.

322
00:14:27,096 --> 00:14:29,306 A:middle
Now, let's look at those
transparent overlays.

323
00:14:29,636 --> 00:14:32,936 A:middle
I'm going to click on the
drop-down at the top and find

324
00:14:32,936 --> 00:14:35,536 A:middle
where that transparent
overlay color is defined.

325
00:14:37,136 --> 00:14:39,976 A:middle
Notice how right now we're
returning an 80 percent white.

326
00:14:40,946 --> 00:14:42,556 A:middle
When reduced transparency
is enabled,

327
00:14:42,556 --> 00:14:48,416 A:middle
we should return a 100 percent
white, so we do that here.

328
00:14:48,926 --> 00:14:51,586 A:middle
Okay. Now, let's make
sure that the gray text

329
00:14:51,806 --> 00:14:55,046 A:middle
in the profile preview is
darker when Darken Colors is on.

330
00:14:55,866 --> 00:14:58,436 A:middle
To do that, I'm going to
click on the drop-down again,

331
00:14:58,726 --> 00:15:00,586 A:middle
and find where that
color is defined.

332

333
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

334
00:14:58,726 --> 00:15:00,586 A:middle
and find where that
color is defined.

335
00:15:01,256 --> 00:15:02,946 A:middle
So here, we're just
returning gray.

336
00:15:04,176 --> 00:15:07,246 A:middle
Let's first check whether the
user has Darken Colors enabled,

337
00:15:07,496 --> 00:15:12,716 A:middle
and if so, we can
return black instead.

338
00:15:13,026 --> 00:15:15,816 A:middle
Finally, let's look at that
zooming animation that we saw

339
00:15:15,816 --> 00:15:18,066 A:middle
on the Matches page, where
the new match appears

340
00:15:18,066 --> 00:15:19,576 A:middle
as though it's coming
from far away.

341
00:15:19,846 --> 00:15:22,326 A:middle
To address that,
I'm going to click

342
00:15:22,326 --> 00:15:25,156 A:middle
on the Matches View
Controller on the left.

343
00:15:25,156 --> 00:15:26,526 A:middle
Now I'm going to
open the drop down,

344
00:15:26,836 --> 00:15:31,936 A:middle
and find where we
animate the cards.

345
00:15:32,076 --> 00:15:34,966 A:middle
So notice how here we're
zooming the new card into view.

346
00:15:35,626 --> 00:15:37,746 A:middle
Now, for users who have
Reduce Motion enabled,

347
00:15:37,976 --> 00:15:41,596 A:middle
a better experience would be
to fade the card into view,

348
00:15:41,596 --> 00:15:45,756 A:middle
because that animation does
not utilize a motion effect.

349
00:15:46,116 --> 00:15:48,376 A:middle
So I'm going to create
a helper method

350
00:15:48,776 --> 00:15:50,096 A:middle
that fades the card into view.

351
00:15:50,516 --> 00:15:52,426 A:middle
All we're doing is
setting the alpha

352
00:15:52,426 --> 00:15:53,956 A:middle
of the card with animation.

353
00:15:54,866 --> 00:15:57,496 A:middle
And then at the point where
normally we would Zoom the card,

354
00:15:58,086 --> 00:16:01,336 A:middle
let's first check whether
Reduce Motion is enabled.

355

356
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

357
00:15:58,086 --> 00:16:01,336 A:middle
let's first check whether
Reduce Motion is enabled.

358
00:16:01,936 --> 00:16:04,656 A:middle
If it is, we use our
fading method instead.

359
00:16:05,106 --> 00:16:08,236 A:middle
We can use the Zooming
method for other users.

360
00:16:09,396 --> 00:16:11,766 A:middle
Okay, now let's build and run
our app with these changes.

361
00:16:11,766 --> 00:16:16,616 A:middle
Here's our app again.

362
00:16:16,996 --> 00:16:19,076 A:middle
Notice how the transparent
overlays are gone,

363
00:16:19,126 --> 00:16:21,036 A:middle
and have been replaced
by opaque white,

364
00:16:21,446 --> 00:16:22,966 A:middle
because reduced transparency
is enabled.

365
00:16:23,656 --> 00:16:26,206 A:middle
In addition, the text on
the buttons is much thicker.

366
00:16:26,666 --> 00:16:29,756 A:middle
When I click on Profile, again,

367
00:16:30,496 --> 00:16:32,776 A:middle
the same issues have
been resolved here.

368
00:16:33,486 --> 00:16:35,246 A:middle
I can slide up on the View tab,

369
00:16:35,796 --> 00:16:38,836 A:middle
and now notice how my
information is darker

370
00:16:38,976 --> 00:16:40,916 A:middle
and higher contrast against
the white background.

371
00:16:41,696 --> 00:16:45,836 A:middle
Now I'm going to click on Back
and click on the Matches button.

372
00:16:47,746 --> 00:16:49,986 A:middle
Again, I'm going to say
hello to my favorite match,

373
00:16:50,326 --> 00:16:52,306 A:middle
and watch what happens
when I do that.

374
00:16:53,776 --> 00:16:55,886 A:middle
The next match fades onto view,

375
00:16:55,976 --> 00:16:57,716 A:middle
because we have Reduce
Motion enabled.

376
00:16:58,196 --> 00:17:03,016 A:middle
So that's how easy it is for you
to make visual accommodations

377

378
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

379
00:16:58,196 --> 00:17:03,016 A:middle
So that's how easy it is for you
to make visual accommodations

380
00:17:03,016 --> 00:17:06,146 A:middle
in your app for users with
different vision needs.

381
00:17:07,695 --> 00:17:10,876 A:middle
Next, let's look at implementing
Semantic Accessibility,

382
00:17:11,586 --> 00:17:12,846 A:middle
so that VoiceOver users

383
00:17:13,506 --> 00:17:16,566 A:middle
and Switch Control users
can also use your app.

384
00:17:18,896 --> 00:17:22,675 A:middle
Semantic Accessibility is what
allows an assistive technology

385
00:17:22,675 --> 00:17:26,685 A:middle
like VoiceOver to get
information from an app,

386
00:17:26,685 --> 00:17:28,566 A:middle
and to control the
app doing things

387
00:17:28,566 --> 00:17:30,796 A:middle
like tapping buttons
or adjusting sliders.

388
00:17:31,336 --> 00:17:36,926 A:middle
Here's an example of Semantic
Accessibility at work.

389
00:17:37,886 --> 00:17:40,056 A:middle
Let's say I've got the
calculator app open

390
00:17:40,136 --> 00:17:41,266 A:middle
and VoiceOver is enabled.

391
00:17:41,446 --> 00:17:46,236 A:middle
When I touch on top of the 5
button, VoiceOver intercepts

392
00:17:46,236 --> 00:17:51,666 A:middle
that touch, and then it asks the
app what it has at that point.

393
00:17:52,776 --> 00:17:56,136 A:middle
The app responds with an element
that represents the 5 button.

394
00:17:56,316 --> 00:17:59,756 A:middle
And that allows VoiceOver to
draw a cursor around the 5,

395

396
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

397
00:18:00,296 --> 00:18:04,706 A:middle
and to speak 5, so that I
know what I've just touched.

398
00:18:04,806 --> 00:18:07,136 A:middle
If I then decide to
tap the 5 button,

399
00:18:07,246 --> 00:18:09,476 A:middle
I can do a double tap
anywhere on screen,

400
00:18:09,606 --> 00:18:12,826 A:middle
and that tells VoiceOver to
activate the selected item.

401
00:18:13,416 --> 00:18:18,286 A:middle
So that's how VoiceOver users
can use the calculator app.

402
00:18:21,436 --> 00:18:25,556 A:middle
So how do you make sure
that your app works

403
00:18:25,556 --> 00:18:27,396 A:middle
with VoiceOver in
this way as well?

404
00:18:28,026 --> 00:18:32,256 A:middle
Well, the good news is that
most Semantic Accessibility is

405
00:18:32,256 --> 00:18:35,616 A:middle
already built into iOS, so you
get a lot of stuff for free.

406
00:18:36,216 --> 00:18:38,256 A:middle
But you should still
audit your app

407
00:18:38,306 --> 00:18:39,666 A:middle
with VoiceOver on the device.

408
00:18:40,126 --> 00:18:42,376 A:middle
And there are a couple questions
you should ask yourself.

409
00:18:42,836 --> 00:18:46,446 A:middle
First, can VoiceOver
speak everything

410
00:18:46,446 --> 00:18:47,286 A:middle
that needs to be seen?

411
00:18:48,546 --> 00:18:51,066 A:middle
And second, can VoiceOver
do everything

412
00:18:51,236 --> 00:18:53,576 A:middle
that a user would want to do?

413
00:18:53,886 --> 00:18:56,466 A:middle
Now, I'm going to be referring
a lot to VoiceOver in this talk,

414
00:18:56,796 --> 00:18:59,426 A:middle
but all of the work we're going
to do in our app also applies

415
00:18:59,426 --> 00:19:01,926 A:middle
to Switch Control, so
just keep that in mind.

416

417
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

418
00:18:59,426 --> 00:19:01,926 A:middle
to Switch Control, so
just keep that in mind.

419
00:19:04,076 --> 00:19:07,736 A:middle
To set up an audit of your app
for Semantic Accessibility,

420
00:19:07,916 --> 00:19:10,696 A:middle
I recommend that you go to
your Accessibility settings

421
00:19:10,696 --> 00:19:13,446 A:middle
on the device, and set
your accessibility shortcut

422
00:19:13,786 --> 00:19:14,416 A:middle
to VoiceOver.

423
00:19:15,156 --> 00:19:18,186 A:middle
That will allow you to
triple click the Home button

424
00:19:18,506 --> 00:19:20,306 A:middle
to quickly enable or
disable VoiceOver.

425
00:19:20,836 --> 00:19:24,346 A:middle
If you've never used
VoiceOver before,

426
00:19:25,066 --> 00:19:26,566 A:middle
here are some tips
to get you started.

427
00:19:28,106 --> 00:19:31,286 A:middle
When you tap something,
that selects and speaks.

428
00:19:31,966 --> 00:19:33,456 A:middle
So, for example, in this screen,

429
00:19:33,456 --> 00:19:35,836 A:middle
if I tap on the accessibility
table cell,

430
00:19:36,826 --> 00:19:40,906 A:middle
the cursor moves there, and the
device speaks accessibility.

431
00:19:42,596 --> 00:19:46,276 A:middle
If I double tap anywhere on
screen, that tells VoiceOver

432
00:19:46,276 --> 00:19:48,166 A:middle
to activate the selected item.

433
00:19:48,716 --> 00:19:50,016 A:middle
So, in this case, if I did that,

434
00:19:50,736 --> 00:19:52,716 A:middle
the accessibility table
cell would get pressed,

435
00:19:53,716 --> 00:19:55,346 A:middle
and we would move to
the accessibility page.

436
00:19:55,446 --> 00:20:01,406 A:middle
When I swipe to the
right, that selects

437

438
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

439
00:19:55,446 --> 00:20:01,406 A:middle
When I swipe to the
right, that selects

440
00:20:01,406 --> 00:20:02,906 A:middle
and speaks the next element.

441
00:20:03,906 --> 00:20:06,486 A:middle
Right now, the Back button
is selected, so if I swipe

442
00:20:06,486 --> 00:20:09,486 A:middle
to the right, the Navigation
title becomes selected.

443
00:20:09,486 --> 00:20:13,866 A:middle
And finally, when you
have a scroll view,

444
00:20:13,866 --> 00:20:16,346 A:middle
you can use three-finger
swipes to scroll.

445
00:20:17,096 --> 00:20:19,356 A:middle
So if I want to see more of
the accessibility settings,

446
00:20:19,616 --> 00:20:23,266 A:middle
I can three-finger swipe
up to scroll down by page.

447
00:20:23,606 --> 00:20:28,906 A:middle
So that's all you need
to know to do an audit

448
00:20:28,906 --> 00:20:30,256 A:middle
of your own app with VoiceOver.

449
00:20:30,436 --> 00:20:32,286 A:middle
And now I'd like to show
you how you can do that,

450
00:20:32,576 --> 00:20:33,396 A:middle
with our sample app.

451
00:20:33,466 --> 00:20:36,416 A:middle
So here's our dating app
running on the device.

452
00:20:37,216 --> 00:20:38,526 A:middle
When I triple click
the home button --

453
00:20:39,966 --> 00:20:40,676 A:middle
>> VoiceOver on.

454
00:20:41,276 --> 00:20:43,236 A:middle
>> VoiceOver becomes enabled.

455
00:20:43,566 --> 00:20:45,796 A:middle
The first thing we'll do is
ask ourselves that question.

456
00:20:45,966 --> 00:20:48,396 A:middle
Can VoiceOver speak everything
that needs to be seen?

457
00:20:49,096 --> 00:20:51,716 A:middle
So first, I'm going to tap
on the title at the top.

458
00:20:52,456 --> 00:20:53,266 A:middle
>> HelloGoodbye.

459
00:20:53,486 --> 00:20:54,306 A:middle
Heading.

460
00:20:54,306 --> 00:20:55,716 A:middle
>> Okay, so VoiceOver
can see that.

461
00:20:56,206 --> 00:20:57,966 A:middle
Now, let's touch on the
logo [beeping sound].

462
00:20:59,156 --> 00:21:04,486 A:middle
It's kind of quiet, but that
sound we just heard means

463

464
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

465
00:20:59,156 --> 00:21:04,486 A:middle
It's kind of quiet, but that
sound we just heard means

466
00:21:04,486 --> 00:21:06,036 A:middle
that VoiceOver doesn't
think there's anything

467
00:21:06,036 --> 00:21:06,776 A:middle
under my finger.

468
00:21:07,606 --> 00:21:10,766 A:middle
So it looks like VoiceOver users
won't be able to read this logo.

469
00:21:11,866 --> 00:21:13,996 A:middle
Now, I'm going to tap
on the profile button.

470
00:21:14,596 --> 00:21:15,906 A:middle
>> Profile button.

471
00:21:15,906 --> 00:21:17,256 A:middle
>> And VoiceOver sees that.

472
00:21:17,736 --> 00:21:19,956 A:middle
When I swipe to the right,
that selects the next element.

473
00:21:19,956 --> 00:21:20,646 A:middle
So when I do that.

474
00:21:21,006 --> 00:21:21,466 A:middle
>> Matches.

475
00:21:21,786 --> 00:21:22,136 A:middle
Button.

476
00:21:22,376 --> 00:21:24,586 A:middle
>> VoiceOver finds
the Matches button.

477
00:21:24,836 --> 00:21:28,936 A:middle
If I swipe to the right one
more time we hear that sound,

478
00:21:28,936 --> 00:21:30,786 A:middle
which means there's nothing
else after this element.

479
00:21:30,956 --> 00:21:32,216 A:middle
Which is correct in this case.

480
00:21:32,886 --> 00:21:34,916 A:middle
So it looks like this view
is in pretty good shape,

481
00:21:34,996 --> 00:21:36,276 A:middle
except for the missing logo.

482
00:21:37,386 --> 00:21:39,306 A:middle
Now, I'm going to
tap on profile.

483
00:21:40,176 --> 00:21:41,396 A:middle
>> Profile button.

484
00:21:41,396 --> 00:21:43,646 A:middle
>> And I'm going to
double tap to activate it.

485
00:21:43,696 --> 00:21:46,896 A:middle
>> Profile, Profile,
Back, Back button.

486
00:21:47,206 --> 00:21:48,616 A:middle
>> Let's swipe to
the right a few times

487
00:21:48,776 --> 00:21:50,066 A:middle
to see what VoiceOver sees.

488
00:21:51,276 --> 00:21:51,916 A:middle
>> Profile.

489
00:21:52,186 --> 00:21:53,846 A:middle
Heading. Your age.

490
00:21:54,586 --> 00:21:55,476 A:middle
19 percent.

491
00:21:55,756 --> 00:21:56,276 A:middle
Adjustable.

492
00:21:57,446 --> 00:21:59,446 A:middle
Swipe up or down with one
finger to adjust the value.

493
00:21:59,446 --> 00:22:01,806 A:middle
>> So that was a little strange.

494

495
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

496
00:21:59,446 --> 00:22:01,806 A:middle
>> So that was a little strange.

497
00:22:02,186 --> 00:22:06,076 A:middle
We just heard "your age,"
followed by "19 percent,"

498
00:22:06,366 --> 00:22:07,886 A:middle
it would make a lot more sense

499
00:22:08,046 --> 00:22:11,086 A:middle
if VoiceOver said the age
here, which is actually 37.

500
00:22:11,576 --> 00:22:13,356 A:middle
And the instructions
said to swipe up

501
00:22:13,356 --> 00:22:14,676 A:middle
or down to adjust the value.

502
00:22:14,856 --> 00:22:16,496 A:middle
So if I swipe up,
watch what happens.

503
00:22:17,226 --> 00:22:17,996 A:middle
>> 28 percent.

504
00:22:19,146 --> 00:22:20,766 A:middle
>> My age is jumping
up by 10 years.

505
00:22:21,266 --> 00:22:23,786 A:middle
So it doesn't look like
VoiceOver users will be able

506
00:22:23,786 --> 00:22:27,276 A:middle
to set their age accurately
right now in our app.

507
00:22:27,346 --> 00:22:29,326 A:middle
Now, I'm going to swipe to
the right a few more times

508
00:22:29,616 --> 00:22:30,836 A:middle
to see what else VoiceOver sees.

509
00:22:31,766 --> 00:22:33,896 A:middle
>> 47. Hobbies.

510
00:22:34,596 --> 00:22:35,816 A:middle
Music. Swing dance.

511
00:22:36,096 --> 00:22:37,286 A:middle
Wine. Text field.

512
00:22:38,416 --> 00:22:39,166 A:middle
Double tap to edit.

513
00:22:39,726 --> 00:22:40,316 A:middle
>> Let's make sure

514
00:22:40,316 --> 00:22:42,226 A:middle
that VoiceOver users
can edit their hobbies.

515
00:22:42,366 --> 00:22:44,546 A:middle
So I'm going to double tap.

516
00:22:44,756 --> 00:22:46,186 A:middle
>> Text field is editing.

517
00:22:46,466 --> 00:22:47,566 A:middle
Music. Swing dance.

518
00:22:47,846 --> 00:22:48,196 A:middle
Wine.

519
00:22:49,116 --> 00:22:50,026 A:middle
>> And the keyboard came up.

520
00:22:50,186 --> 00:22:52,996 A:middle
So that looks like VoiceOver
users will be able to do that.

521
00:22:53,616 --> 00:22:55,916 A:middle
Let's just make sure that the
Done button, which appeared

522
00:22:55,916 --> 00:22:58,266 A:middle
in the top right, is also
visible to VoiceOver.

523
00:22:58,466 --> 00:22:59,926 A:middle
So I'll tap on that.

524
00:22:59,926 --> 00:23:00,776 A:middle
>> Done button.

525

526
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

527
00:22:59,926 --> 00:23:00,776 A:middle
>> Done button.

528
00:23:00,866 --> 00:23:01,296 A:middle
>> And it is.

529
00:23:01,296 --> 00:23:03,686 A:middle
When I double tap.

530
00:23:04,036 --> 00:23:06,146 A:middle
That takes us out of editing.

531
00:23:06,916 --> 00:23:09,006 A:middle
So it looks like the
hobbies are in good shape.

532
00:23:09,386 --> 00:23:12,106 A:middle
And the elevator pitch field
is very similar to hobbies,

533
00:23:12,206 --> 00:23:13,586 A:middle
so we'll skip that for now.

534
00:23:13,806 --> 00:23:16,806 A:middle
Now I'm going to touch on the
Preview tab at the bottom.

535
00:23:17,406 --> 00:23:18,016 A:middle
>> Preview.

536
00:23:18,456 --> 00:23:21,596 A:middle
>> So it's just saying
"preview,"

537
00:23:22,296 --> 00:23:25,826 A:middle
and if I couldn't see the screen
with that visual indication

538
00:23:25,826 --> 00:23:29,226 A:middle
of a tab, it might not be
clear to me what this does.

539
00:23:29,326 --> 00:23:32,366 A:middle
I mean, I might try to double
tap it, and so when I do that --

540
00:23:33,026 --> 00:23:33,656 A:middle
>> Preview.

541
00:23:34,176 --> 00:23:37,276 A:middle
>> Nothing happens, because this
tab doesn't respond to a tap.

542
00:23:37,616 --> 00:23:39,646 A:middle
It needs to have a
slide gesture up.

543
00:23:40,626 --> 00:23:43,396 A:middle
So right now, VoiceOver users
cannot preview their profile.

544
00:23:43,396 --> 00:23:46,186 A:middle
Now, I'm going to touch
on the back button.

545
00:23:46,376 --> 00:23:48,076 A:middle
>> Back. Back button.

546
00:23:48,076 --> 00:23:49,826 A:middle
>> And double tap.

547
00:23:50,416 --> 00:23:51,096 A:middle
>> [Beeping sound]
HelloGoodbye, heading.

548
00:23:51,096 --> 00:23:53,566 A:middle
>> I'm going to tap
on Matches now.

549
00:23:54,006 --> 00:23:55,166 A:middle
>> Matches button.

550
00:23:55,196 --> 00:23:56,756 A:middle
>> And double tap.

551
00:23:56,756 --> 00:23:59,306 A:middle
>> Matches, Matches,
Back, Back button.

552
00:23:59,726 --> 00:24:02,086 A:middle
>> Okay. Again we're going to
swipe to the right a few times

553

554
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

555
00:23:59,726 --> 00:24:02,086 A:middle
>> Okay. Again we're going to
swipe to the right a few times

556
00:24:02,366 --> 00:24:03,566 A:middle
to see what VoiceOver sees.

557
00:24:04,306 --> 00:24:04,846 A:middle
>> Matches.

558
00:24:05,176 --> 00:24:07,936 A:middle
Heading. Swipe up
arrow to say hello,

559
00:24:07,986 --> 00:24:09,206 A:middle
swipe down arrow to say goodbye.

560
00:24:09,466 --> 00:24:09,876 A:middle
Ellipses.

561
00:24:11,366 --> 00:24:12,896 A:middle
>> Okay, that's also
a little strange.

562
00:24:13,256 --> 00:24:16,926 A:middle
Visually when you look at
this logo, or this label,

563
00:24:16,926 --> 00:24:19,296 A:middle
you see swipe up to say hello.

564
00:24:19,786 --> 00:24:22,806 A:middle
But VoiceOver is saying
swipe up arrow to say hello.

565
00:24:22,866 --> 00:24:24,726 A:middle
And that's because
VoiceOver is reading each

566
00:24:24,726 --> 00:24:26,046 A:middle
of those characters literally.

567
00:24:26,046 --> 00:24:29,236 A:middle
So it would be better if
VoiceOver described this

568
00:24:29,236 --> 00:24:30,216 A:middle
in a more natural way.

569
00:24:31,436 --> 00:24:34,546 A:middle
Now, let's swipe to the
right to get to the photo.

570
00:24:34,546 --> 00:24:34,806 A:middle
>> Age.

571
00:24:35,486 --> 00:24:36,866 A:middle
>> Except we didn't
get to the photo.

572
00:24:37,096 --> 00:24:40,956 A:middle
So now let's try touching it
directly [beeping sounds].

573
00:24:41,356 --> 00:24:43,646 A:middle
And again, I get that sound,

574
00:24:43,646 --> 00:24:45,636 A:middle
which means VoiceOver doesn't
think there's a photo there.

575
00:24:46,466 --> 00:24:50,556 A:middle
Now, some of you might be
wondering whether that's

576
00:24:50,556 --> 00:24:51,256 A:middle
even important.

577
00:24:51,636 --> 00:24:55,376 A:middle
Because after all, a VoiceOver
user doesn't see the photo,

578
00:24:55,376 --> 00:24:55,626 A:middle
right?

579
00:24:56,146 --> 00:24:58,686 A:middle
But it turns out
it is important,

580
00:24:59,126 --> 00:25:00,536 A:middle
so for a couple of reasons.

581

582
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

583
00:24:59,126 --> 00:25:00,536 A:middle
so for a couple of reasons.

584
00:25:01,346 --> 00:25:05,396 A:middle
First, if I'm a VoiceOver user,
using this app, I need to know

585
00:25:05,816 --> 00:25:08,716 A:middle
that other people in this
app can see my photo.

586
00:25:09,026 --> 00:25:11,146 A:middle
Even if I don't take full
advantage of the photo,

587
00:25:11,486 --> 00:25:13,676 A:middle
it's important to
know that it's there.

588
00:25:13,796 --> 00:25:14,976 A:middle
And second, remember

589
00:25:14,976 --> 00:25:17,586 A:middle
that Semantic Accessibility
is not just about VoiceOver.

590
00:25:17,836 --> 00:25:18,876 A:middle
So it's always a good idea

591
00:25:18,876 --> 00:25:22,146 A:middle
to expose any meaningful
info from your app.

592
00:25:23,326 --> 00:25:25,406 A:middle
Okay, now I'm going
to touch on age again.

593
00:25:25,816 --> 00:25:25,906 A:middle
>> Age.

594
00:25:26,056 --> 00:25:30,926 A:middle
>> And I'm going to swipe
to the right a few times.

595
00:25:30,926 --> 00:25:31,276 A:middle
>> Hobbies.

596
00:25:31,986 --> 00:25:33,646 A:middle
32. Cooking.

597
00:25:33,856 --> 00:25:34,676 A:middle
Bubble tea with friends.

598
00:25:34,936 --> 00:25:35,266 A:middle
Travel.

599
00:25:36,246 --> 00:25:38,226 A:middle
>> If you're paying
close attention,

600
00:25:38,226 --> 00:25:41,346 A:middle
you may have noticed how
VoiceOver went from age

601
00:25:41,586 --> 00:25:43,786 A:middle
to hobbies, and then back to 32.

602
00:25:44,716 --> 00:25:46,796 A:middle
So when you're looking
at the visual layout

603
00:25:47,006 --> 00:25:49,336 A:middle
of this profile card, it's
clear what this means,

604
00:25:49,856 --> 00:25:53,066 A:middle
but VoiceOver users
are often swiping

605
00:25:53,196 --> 00:25:55,636 A:middle
to visit different elements,
because that can be easier

606
00:25:55,636 --> 00:25:57,956 A:middle
than touching exactly
where an element is.

607
00:25:58,636 --> 00:26:01,316 A:middle
And so it's important
to have a logical order

608

609
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

610
00:25:58,636 --> 00:26:01,316 A:middle
And so it's important
to have a logical order

611
00:26:01,666 --> 00:26:03,276 A:middle
for how these elements
are visited.

612
00:26:03,716 --> 00:26:06,316 A:middle
It's also important for
Switch Control users.

613
00:26:06,776 --> 00:26:10,036 A:middle
The Switch Control cursor
will move from element

614
00:26:10,036 --> 00:26:11,576 A:middle
to element in the same order.

615
00:26:12,376 --> 00:26:14,846 A:middle
And it's important for that
order to be predictable,

616
00:26:14,846 --> 00:26:17,236 A:middle
so that a Switch Control user
can activate their switch

617
00:26:17,236 --> 00:26:18,126 A:middle
at the right time.

618
00:26:18,756 --> 00:26:24,416 A:middle
Okay. So last thing, remember
that our second question was

619
00:26:24,736 --> 00:26:26,416 A:middle
"Can VoiceOver do
everything that needs

620
00:26:26,416 --> 00:26:29,076 A:middle
to be done in this app?"

621
00:26:29,596 --> 00:26:33,016 A:middle
The point of the Matches page
is to allow users to say hello

622
00:26:33,176 --> 00:26:34,506 A:middle
or goodbye to their matches.

623
00:26:35,586 --> 00:26:38,716 A:middle
But VoiceOver users won't be
able to do this right now,

624
00:26:39,326 --> 00:26:43,026 A:middle
because swipe gestures get
intercepted by VoiceOver,

625
00:26:43,206 --> 00:26:44,766 A:middle
and we'll need to
provide a different way

626
00:26:44,996 --> 00:26:47,036 A:middle
for VoiceOver users to
do the same actions.

627
00:26:47,036 --> 00:26:50,026 A:middle
So that's the kind of process
you can take with your own app

628
00:26:50,176 --> 00:26:53,516 A:middle
to see whether it is
semantically accessible.

629
00:26:53,926 --> 00:26:56,326 A:middle
Now, let's look at resolving
those issues we encountered.

630
00:26:57,646 --> 00:26:59,486 A:middle
First, I'm going to
introduce the most basic

631
00:26:59,486 --> 00:27:00,336 A:middle
accessibility API.

632

633
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

634
00:26:59,486 --> 00:27:00,336 A:middle
accessibility API.

635
00:27:01,046 --> 00:27:02,696 A:middle
There are only 2
properties here,

636
00:27:03,036 --> 00:27:04,896 A:middle
and if you remember
nothing else from this talk,

637
00:27:05,156 --> 00:27:06,476 A:middle
please remember these 2.

638
00:27:07,116 --> 00:27:09,816 A:middle
Just by using these 2
properties, you can solve a lot

639
00:27:09,816 --> 00:27:11,046 A:middle
of accessibility issues.

640
00:27:11,506 --> 00:27:14,476 A:middle
The most important
property you need

641
00:27:14,476 --> 00:27:17,606 A:middle
to know is the
isAccessibilityElement property.

642
00:27:17,996 --> 00:27:19,366 A:middle
This is a Boolean

643
00:27:19,366 --> 00:27:22,286 A:middle
that determines whether a
view is visible to VoiceOver.

644
00:27:23,306 --> 00:27:26,876 A:middle
By default, it returns yes
for standard UIKit controls

645
00:27:26,876 --> 00:27:29,376 A:middle
and labels, which is why even
though we haven't done any

646
00:27:29,376 --> 00:27:31,566 A:middle
Semantic Accessibility
work in our app yet,

647
00:27:32,336 --> 00:27:34,396 A:middle
a lot of the text is
already visible to VoiceOver.

648
00:27:35,016 --> 00:27:38,626 A:middle
And the second-most
important property you need

649
00:27:38,626 --> 00:27:41,376 A:middle
to know is the
accessibilityLabel property.

650
00:27:41,956 --> 00:27:45,066 A:middle
This describes a view, and
VoiceOver will speak this

651
00:27:45,496 --> 00:27:47,616 A:middle
when a VoiceOver user
touches on a view.

652
00:27:48,196 --> 00:27:53,146 A:middle
If you're creating your
views in Interface Builder,

653
00:27:53,516 --> 00:27:55,616 A:middle
you can set these properties
directly from Xcode's UI.

654
00:27:56,146 --> 00:27:58,026 A:middle
On the right-hand side of Xcode,

655
00:27:58,726 --> 00:28:00,306 A:middle
you'll find an identity
inspector.

656

657
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

658
00:27:58,726 --> 00:28:00,306 A:middle
you'll find an identity
inspector.

659
00:28:00,736 --> 00:28:02,666 A:middle
And there's an accessibility
section there.

660
00:28:02,946 --> 00:28:06,706 A:middle
The Accessibility enable
check box corresponds

661
00:28:06,746 --> 00:28:11,636 A:middle
to isAccessibilityElement and
the label field corresponds

662
00:28:11,636 --> 00:28:12,706 A:middle
to accessibilityLabel.

663
00:28:12,706 --> 00:28:18,506 A:middle
If you're creating your views
in code, it's still really easy

664
00:28:18,506 --> 00:28:20,846 A:middle
to set these properties
as shown here.

665
00:28:23,276 --> 00:28:26,616 A:middle
So now let's look at
using these two properties

666
00:28:26,796 --> 00:28:30,556 A:middle
and see how much more
accessible we can make our app.

667
00:28:30,556 --> 00:28:32,916 A:middle
So the first thing we're
going to do is make sure

668
00:28:32,916 --> 00:28:35,746 A:middle
that VoiceOver users can read
the logo on the first page.

669
00:28:36,536 --> 00:28:41,836 A:middle
To do that, I'm going to go
click on the StartViewController

670
00:28:41,836 --> 00:28:44,766 A:middle
on the left, which is
where we create that logo.

671
00:28:45,106 --> 00:28:46,906 A:middle
So I'm going to click
on the drop-down

672
00:28:47,426 --> 00:28:49,016 A:middle
and find our viewDidLoad method.

673
00:28:49,556 --> 00:28:51,336 A:middle
So here's the logo.

674
00:28:51,696 --> 00:28:52,916 A:middle
It's just an image
view right now.

675
00:28:54,076 --> 00:28:56,976 A:middle
And first we're going to set
isAccessibilityElement to yes,

676
00:28:57,516 --> 00:28:58,676 A:middle
so that VoiceOver can see it.

677
00:28:59,666 --> 00:29:02,136 A:middle
And then we also need to make
sure VoiceOver describes it

678

679
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

680
00:28:59,666 --> 00:29:02,136 A:middle
And then we also need to make
sure VoiceOver describes it

681
00:29:02,236 --> 00:29:04,996 A:middle
correctly, so we give it
an accessibilityLabel.

682
00:29:05,226 --> 00:29:06,896 A:middle
In this case, we're just going

683
00:29:06,896 --> 00:29:08,996 A:middle
to give it the text
that's inside the logo.

684
00:29:10,276 --> 00:29:12,176 A:middle
Notice also that we're
localizing the string,

685
00:29:12,636 --> 00:29:14,956 A:middle
because VoiceOver
speaks in many languages.

686
00:29:15,196 --> 00:29:20,646 A:middle
Next, let's make sure
that the photo that's

687
00:29:20,706 --> 00:29:23,426 A:middle
in the profile card can
also be seen by VoiceOver.

688
00:29:23,866 --> 00:29:26,016 A:middle
To do that, I'm going to click

689
00:29:26,016 --> 00:29:27,476 A:middle
on the card view
clef on the left.

690
00:29:28,406 --> 00:29:30,396 A:middle
And I'm going to open
the drop-down to find

691
00:29:30,456 --> 00:29:32,136 A:middle
where we add our ProfileViews.

692
00:29:32,526 --> 00:29:34,936 A:middle
So here's where we're
adding the photo.

693
00:29:35,656 --> 00:29:37,886 A:middle
Again, we set
isAccessibilityElement to yes,

694
00:29:39,266 --> 00:29:41,426 A:middle
and we give it an
appropriate accessibilityLabel.

695
00:29:41,806 --> 00:29:45,136 A:middle
In this case, we're just going
to call it profile photo.

696
00:29:46,776 --> 00:29:50,046 A:middle
Finally, let's look
at the instructions

697
00:29:50,046 --> 00:29:51,166 A:middle
for saying hello or goodbye.

698
00:29:51,826 --> 00:29:55,366 A:middle
Right now, VoiceOver is saying
swipe up arrow to say hello.

699
00:29:55,776 --> 00:29:57,426 A:middle
Let's fix that.

700
00:29:57,426 --> 00:29:59,016 A:middle
So to do that, I'm
going to click

701
00:29:59,076 --> 00:30:02,076 A:middle
on the Matches View Controller
on the left, and we're going

702

703
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

704
00:29:59,076 --> 00:30:02,076 A:middle
on the Matches View Controller
on the left, and we're going

705
00:30:02,076 --> 00:30:04,716 A:middle
to open the drop-down
at the top to find

706
00:30:04,716 --> 00:30:06,916 A:middle
where we add those
swiping instructions.

707
00:30:08,226 --> 00:30:10,866 A:middle
So here's a label that
says those instructions.

708
00:30:11,976 --> 00:30:14,476 A:middle
It's already in
accessibilityElement by default,

709
00:30:14,786 --> 00:30:17,286 A:middle
so all we need to do is change
the accessibility label.

710
00:30:17,566 --> 00:30:20,596 A:middle
We're going to give it one
that is just like the text

711
00:30:20,596 --> 00:30:23,776 A:middle
on the label, except we're
replacing those unicode arrows

712
00:30:24,306 --> 00:30:25,106 A:middle
with words.

713
00:30:25,786 --> 00:30:34,246 A:middle
Now I'm going to build and run
the app with these changes.

714
00:30:34,756 --> 00:30:35,496 A:middle
>> [Beeping sound]
Extras folder.

715
00:30:35,776 --> 00:30:39,896 A:middle
Two apps. Double tap to
open [beeping sound].

716
00:30:40,026 --> 00:30:40,746 A:middle
>> HelloGoodbye.

717
00:30:41,566 --> 00:30:42,276 A:middle
Extras folder.

718
00:30:42,526 --> 00:30:49,686 A:middle
Two apps. Double tap to open.

719
00:30:49,686 --> 00:30:50,346 A:middle
Hello goodbye [beeping sound].

720
00:30:50,536 --> 00:30:54,216 A:middle
>> So here's our app
again with these changes.

721
00:30:54,916 --> 00:30:57,296 A:middle
The first thing I'm going
to do is touch the logo.

722
00:30:57,916 --> 00:30:58,826 A:middle
>> HelloGoodbye.

723
00:30:58,886 --> 00:30:59,506 A:middle
Meet your match.

724
00:30:59,816 --> 00:31:00,146 A:middle
Image.

725

726
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

727
00:30:59,816 --> 00:31:00,146 A:middle
Image.

728
00:31:00,956 --> 00:31:02,586 A:middle
>> So now VoiceOver
users can read this.

729
00:31:02,766 --> 00:31:06,026 A:middle
Next, I'm going to touch
on the Matches button.

730
00:31:06,446 --> 00:31:07,586 A:middle
>> Matches button.

731
00:31:07,666 --> 00:31:09,546 A:middle
>> And double tap.

732
00:31:10,276 --> 00:31:12,036 A:middle
>> [Beeping sound]
Matches, Back, Back button.

733
00:31:12,726 --> 00:31:15,236 A:middle
>> Let's first look at what
the instructions say right now.

734
00:31:16,216 --> 00:31:17,356 A:middle
>> Swipe up to say hello.

735
00:31:17,556 --> 00:31:18,616 A:middle
Swipe down to say goodbye.

736
00:31:19,206 --> 00:31:21,076 A:middle
>> Okay, so that's much
easier to understand.

737
00:31:21,926 --> 00:31:23,356 A:middle
And now when I swipe
to the right.

738
00:31:24,026 --> 00:31:25,536 A:middle
>> Profile photo, image.

739
00:31:26,386 --> 00:31:28,686 A:middle
>> VoiceOver is able to see
the photo in the profile.

740
00:31:29,276 --> 00:31:32,786 A:middle
So that's how, even with
just these two properties,

741
00:31:33,016 --> 00:31:35,356 A:middle
you've already made other
parts of our app accessible.

742
00:31:35,846 --> 00:31:40,386 A:middle
But because we've got some
more custom UI in our app,

743
00:31:40,386 --> 00:31:42,446 A:middle
there's some additional
API we'll need to use

744
00:31:42,616 --> 00:31:44,896 A:middle
to give VoiceOver users a
really great experience.

745
00:31:45,476 --> 00:31:51,076 A:middle
First, I'd like to introduce the
concept of Accessibility Traits.

746
00:31:51,666 --> 00:31:53,736 A:middle
Traits describe the
function of a view.

747
00:31:54,986 --> 00:31:58,726 A:middle
For example, in the familiar
timer app, each of the wheels

748
00:31:58,726 --> 00:32:01,846 A:middle
of time has a trait
of adjustable.

749

750
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

751
00:31:58,726 --> 00:32:01,846 A:middle
of time has a trait
of adjustable.

752
00:32:02,016 --> 00:32:05,656 A:middle
And that means that its value
can be changed up or down.

753
00:32:06,496 --> 00:32:09,296 A:middle
The Start button has
a trait of button.

754
00:32:09,646 --> 00:32:12,286 A:middle
And that gives the user a
hint that this is something

755
00:32:12,286 --> 00:32:13,226 A:middle
that can be activated.

756
00:32:13,666 --> 00:32:19,236 A:middle
Again, if you're creating your
views in Interface Builder,

757
00:32:19,336 --> 00:32:22,316 A:middle
it's really easy to set these
traits directly from Xcode's UI.

758
00:32:23,216 --> 00:32:24,846 A:middle
In the same section we
talked about earlier,

759
00:32:25,176 --> 00:32:27,456 A:middle
you'll see a bunch of
check boxes for traits.

760
00:32:28,246 --> 00:32:30,066 A:middle
Some of these check boxes
may already be checked,

761
00:32:30,446 --> 00:32:33,316 A:middle
in which case I would generally
recommend leaving those alone,

762
00:32:33,526 --> 00:32:35,776 A:middle
but add check boxes
next to traits

763
00:32:35,776 --> 00:32:37,516 A:middle
that you think are
important for your view.

764
00:32:38,086 --> 00:32:42,496 A:middle
In code, it's also
straightforward

765
00:32:42,766 --> 00:32:44,136 A:middle
to set the Accessibility Traits.

766
00:32:44,526 --> 00:32:47,476 A:middle
But just remember that it is
a bit mask, so if you want

767
00:32:47,576 --> 00:32:50,766 A:middle
to add a trait in addition
to others, use a bitwise

768
00:32:50,826 --> 00:32:54,716 A:middle
or operator, as shown
here, to combine them.

769
00:32:57,396 --> 00:33:00,326 A:middle
Next, let's talk about
Accessibility Value.

770

771
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

772
00:32:57,396 --> 00:33:00,326 A:middle
Next, let's talk about
Accessibility Value.

773
00:33:00,816 --> 00:33:04,316 A:middle
Accessibility Value is a string
on properties, so in that way,

774
00:33:04,316 --> 00:33:06,116 A:middle
it's similar to accessibility
label.

775
00:33:06,706 --> 00:33:08,506 A:middle
Except you use Accessibility
Value

776
00:33:08,506 --> 00:33:09,726 A:middle
for things that are dynamic.

777
00:33:10,766 --> 00:33:12,846 A:middle
For example, you
use this on views

778
00:33:12,846 --> 00:33:16,056 A:middle
that have the adjustable trait
to describe the numerical value.

779
00:33:17,246 --> 00:33:21,006 A:middle
Right now, in our app, the age
slider has an Accessibility

780
00:33:21,006 --> 00:33:22,706 A:middle
Value of 19 percent.

781
00:33:23,276 --> 00:33:26,426 A:middle
So that's a case where we can
override Accessibility Value

782
00:33:26,726 --> 00:33:28,116 A:middle
to return the age instead.

783
00:33:31,936 --> 00:33:33,796 A:middle
Next, we'll talk about actions.

784
00:33:34,046 --> 00:33:38,236 A:middle
So actions are how VoiceOver
can control your app.

785
00:33:38,486 --> 00:33:42,356 A:middle
Two really common ones are the
Increment and Decrement actions.

786
00:33:42,666 --> 00:33:45,196 A:middle
So these are actions that
are associated specifically

787
00:33:45,376 --> 00:33:47,096 A:middle
for views that have
the adjustable trait.

788
00:33:47,096 --> 00:33:49,556 A:middle
And they allow the
user to increase

789
00:33:49,556 --> 00:33:51,276 A:middle
or decrease an element's value.

790
00:33:51,736 --> 00:33:56,146 A:middle
So again, in our app, the
age slider right now can be

791
00:33:56,256 --> 00:33:57,476 A:middle
incremented or decremented,

792
00:33:57,716 --> 00:33:59,676 A:middle
but right now it's
doing that by 10 years.

793

794
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

795
00:34:00,786 --> 00:34:03,726 A:middle
We can override these
methods to allow the user

796
00:34:03,726 --> 00:34:05,316 A:middle
to change their age
by a single year.

797
00:34:08,735 --> 00:34:12,076 A:middle
Another really important
action is the Activate action,

798
00:34:12,116 --> 00:34:14,186 A:middle
and that's what happens
when a user double taps.

799
00:34:15,226 --> 00:34:16,866 A:middle
Normally, when you
double tap something,

800
00:34:16,866 --> 00:34:18,045 A:middle
that just taps the view.

801
00:34:18,876 --> 00:34:21,815 A:middle
But you can override this
method on views that respond

802
00:34:21,815 --> 00:34:24,916 A:middle
to a specific gesture, and
that way VoiceOver users can do

803
00:34:24,916 --> 00:34:26,366 A:middle
that action as well easily.

804
00:34:26,806 --> 00:34:29,726 A:middle
For example, in our app, we can
use this for the Preview tab,

805
00:34:30,156 --> 00:34:32,436 A:middle
which currently only
responds to a sliding gesture.

806
00:34:32,866 --> 00:34:38,156 A:middle
And finally, we have
notifications,

807
00:34:38,335 --> 00:34:40,025 A:middle
which allow your app
to tell VoiceOver

808
00:34:40,025 --> 00:34:41,056 A:middle
when something has changed.

809
00:34:41,916 --> 00:34:43,985 A:middle
One really important
notification is

810
00:34:44,106 --> 00:34:45,485 A:middle
the LayoutChangeNotification.

811
00:34:46,156 --> 00:34:50,576 A:middle
You should send this when you're
changing the layout of your app,

812
00:34:50,576 --> 00:34:52,326 A:middle
for example, adding
or removing views.

813
00:34:52,886 --> 00:34:55,616 A:middle
For example, in our
app right now,

814
00:34:55,616 --> 00:34:59,866 A:middle
when you reveal the preview,
VoiceOver might not realize

815
00:34:59,866 --> 00:35:02,986 A:middle
that new elements
have come on screen.

816

817
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

818
00:34:59,866 --> 00:35:02,986 A:middle
that new elements
have come on screen.

819
00:35:03,146 --> 00:35:06,616 A:middle
Once you post a layout change
notification, VoiceOver checks

820
00:35:06,616 --> 00:35:09,386 A:middle
to find the elements
that are there currently.

821
00:35:12,896 --> 00:35:15,766 A:middle
Now, let's put all this
together in our sample app

822
00:35:15,766 --> 00:35:17,876 A:middle
to resolve some more of
those issues we encountered.

823
00:35:18,106 --> 00:35:19,906 A:middle
So the first thing we're
going to do is make sure

824
00:35:19,906 --> 00:35:22,446 A:middle
that VoiceOver users
can edit their age.

825
00:35:23,466 --> 00:35:26,466 A:middle
To do that, I'm going
to go to Xcode and click

826
00:35:26,466 --> 00:35:30,866 A:middle
on the AgeSlider
class on the left.

827
00:35:30,866 --> 00:35:33,166 A:middle
Here let's override
accessibilityValue,

828
00:35:33,326 --> 00:35:36,906 A:middle
and that way we can return the
age instead of a percentage.

829
00:35:37,486 --> 00:35:39,806 A:middle
All we're doing is taking
the value of the slider,

830
00:35:39,886 --> 00:35:45,016 A:middle
which corresponds to the age,
and making it into a string.

831
00:35:45,136 --> 00:35:48,096 A:middle
Next, let's make sure that
VoiceOver users can add

832
00:35:48,456 --> 00:35:51,776 A:middle
or remove to their
age by a single year.

833
00:35:52,626 --> 00:35:55,266 A:middle
So to do that, let's override
accessibilityIncrement.

834
00:35:56,196 --> 00:35:59,066 A:middle
All we're doing here is adding
1 to the slider's value.

835
00:35:59,786 --> 00:36:02,286 A:middle
We also send the Value
Change Control Event,

836

837
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

838
00:35:59,786 --> 00:36:02,286 A:middle
We also send the Value
Change Control Event,

839
00:36:02,716 --> 00:36:05,396 A:middle
that way other parts
of our UI that rely

840
00:36:05,396 --> 00:36:07,636 A:middle
on the slider's value
can update accordingly.

841
00:36:08,236 --> 00:36:12,576 A:middle
We do the same thing for
accessibilityDecrement.

842
00:36:13,026 --> 00:36:16,146 A:middle
And now, one nuance to this.

843
00:36:16,356 --> 00:36:21,296 A:middle
After these changes, our age
slider has all the information

844
00:36:21,296 --> 00:36:22,386 A:middle
that the user needs to know.

845
00:36:22,576 --> 00:36:23,896 A:middle
Namely, the user's age.

846
00:36:24,856 --> 00:36:27,206 A:middle
So from a Semantic
Accessibility standpoint,

847
00:36:27,806 --> 00:36:31,236 A:middle
that label that's showing up
next to the slider is redundant,

848
00:36:31,676 --> 00:36:33,186 A:middle
and might even be confusing.

849
00:36:34,086 --> 00:36:36,126 A:middle
So let's just hide it.

850
00:36:37,196 --> 00:36:40,136 A:middle
To do that, I'm going to click
on the Profile View Controller

851
00:36:40,136 --> 00:36:43,586 A:middle
on the left, and open
the drop-down to find

852
00:36:43,586 --> 00:36:45,006 A:middle
where we add that label.

853
00:36:47,836 --> 00:36:54,546 A:middle
To hide it, we simply set
isAccessibilityElement to no.

854
00:36:54,546 --> 00:36:56,656 A:middle
Okay. Next, let's make sure

855
00:36:56,656 --> 00:36:58,956 A:middle
that VoiceOver users can
preview their profiles.

856
00:36:59,666 --> 00:37:03,746 A:middle
To do that, let's go
in Xcode and click

857

858
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

859
00:36:59,666 --> 00:37:03,746 A:middle
To do that, let's go
in Xcode and click

860
00:37:03,776 --> 00:37:06,246 A:middle
on our PreviewLabel class.

861
00:37:06,836 --> 00:37:08,496 A:middle
So here's our roadmap for this.

862
00:37:09,396 --> 00:37:11,666 A:middle
We're going to override
accessibilityActivate

863
00:37:11,856 --> 00:37:14,626 A:middle
on the Preview Label, so that
we can control what happens

864
00:37:14,626 --> 00:37:16,166 A:middle
when the user double taps.

865
00:37:16,566 --> 00:37:18,866 A:middle
But we need to tell the
Profile View Controller

866
00:37:19,226 --> 00:37:20,446 A:middle
to show or hide the preview.

867
00:37:20,446 --> 00:37:23,526 A:middle
So we'll need a way
to communicate that.

868
00:37:23,946 --> 00:37:27,446 A:middle
To do that, let's set
up a delegate protocol.

869
00:37:27,976 --> 00:37:31,126 A:middle
And all this delegate
protocol has is a single method

870
00:37:31,336 --> 00:37:33,606 A:middle
that we're going to call when
the label gets activated.

871
00:37:33,956 --> 00:37:37,336 A:middle
Of course, we also set
up a delegate property

872
00:37:37,786 --> 00:37:40,486 A:middle
so that the View Controller
can set itself a delegate.

873
00:37:40,486 --> 00:37:43,906 A:middle
Now let's go to the
implementation file.

874
00:37:44,466 --> 00:37:48,886 A:middle
Here we're going to override
accessibilityActivate.

875
00:37:49,786 --> 00:37:52,376 A:middle
All we're doing is
letting the delegate know

876
00:37:52,586 --> 00:37:56,086 A:middle
that the label was activated,
and we return yes to indicate

877
00:37:56,086 --> 00:37:57,076 A:middle
that the action succeeded.

878
00:37:57,586 --> 00:38:02,836 A:middle
While we're here, let's
also add a button trait

879

880
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

881
00:37:57,586 --> 00:38:02,836 A:middle
While we're here, let's
also add a button trait

882
00:38:02,896 --> 00:38:06,786 A:middle
to the Preview Label, and that
way VoiceOver users will have a

883
00:38:06,786 --> 00:38:10,316 A:middle
hint that they can
double tap to activate it.

884
00:38:10,856 --> 00:38:13,476 A:middle
To do that, I'm going to
override accessibilityTraits,

885
00:38:14,576 --> 00:38:16,476 A:middle
and first recalling super,

886
00:38:16,706 --> 00:38:18,276 A:middle
to get any traits we
would have by default.

887
00:38:19,106 --> 00:38:22,846 A:middle
Then we use the bitwise
or operator to combine

888
00:38:22,846 --> 00:38:23,776 A:middle
that with a button trait.

889
00:38:24,476 --> 00:38:29,556 A:middle
Okay. Now, let's go back to
our Profile View Controller,

890
00:38:30,046 --> 00:38:31,536 A:middle
to implement the
delegate protocol.

891
00:38:32,066 --> 00:38:35,256 A:middle
So first, I'm going to scroll
to the top of the file,

892
00:38:36,386 --> 00:38:38,716 A:middle
and declare that this
view controller implements

893
00:38:38,716 --> 00:38:39,286 A:middle
that protocol.

894
00:38:39,716 --> 00:38:45,336 A:middle
Next, I'm going to open the
drop down and find where we add

895
00:38:45,336 --> 00:38:47,376 A:middle
that Preview Label to the view.

896
00:38:48,856 --> 00:38:52,726 A:middle
Here we set the View
Controller as its delegate.

897
00:38:53,806 --> 00:38:55,706 A:middle
And finally, let's
implement that protocol.

898
00:38:55,976 --> 00:39:01,736 A:middle
I'm going to scroll
to the bottom.

899

900
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

901
00:38:55,976 --> 00:39:01,736 A:middle
I'm going to scroll
to the bottom.

902
00:39:01,886 --> 00:39:04,426 A:middle
And here we've implemented the
only delegate protocol method

903
00:39:04,426 --> 00:39:04,696 A:middle
we have.

904
00:39:05,796 --> 00:39:08,046 A:middle
So when the Preview
Label is activated,

905
00:39:08,626 --> 00:39:11,116 A:middle
we'll first check whether the
preview is currently showing.

906
00:39:11,766 --> 00:39:12,896 A:middle
If it is, we can hide it.

907
00:39:13,646 --> 00:39:15,866 A:middle
Otherwise, we reveal it.

908
00:39:16,956 --> 00:39:18,366 A:middle
One additional thing.

909
00:39:19,006 --> 00:39:21,376 A:middle
Recall that when you
hide or show the preview,

910
00:39:21,626 --> 00:39:23,206 A:middle
you're changing the
layout of the screen.

911
00:39:23,486 --> 00:39:25,556 A:middle
So we should tell VoiceOver
that that's happened.

912
00:39:26,496 --> 00:39:28,616 A:middle
To do that, let's go
to the implementation

913
00:39:28,946 --> 00:39:30,926 A:middle
of reveal card and dismiss card.

914
00:39:31,216 --> 00:39:32,726 A:middle
So I'm going to click on
the drop down of the top

915
00:39:33,226 --> 00:39:34,426 A:middle
and find those two methods.

916
00:39:35,036 --> 00:39:39,126 A:middle
Both of these methods
are animating the card

917
00:39:39,126 --> 00:39:39,986 A:middle
on or off screen.

918
00:39:40,996 --> 00:39:42,516 A:middle
In the completion
for that animation,

919
00:39:43,536 --> 00:39:45,266 A:middle
we post the layout
change notification.

920
00:39:45,726 --> 00:39:47,496 A:middle
Let's do the same
thing down here

921
00:39:47,496 --> 00:39:51,746 A:middle
when dismissing the preview.

922
00:39:52,196 --> 00:39:52,296 A:middle
Okay.

923
00:39:53,176 --> 00:39:54,876 A:middle
>> Now let's build
and run our app

924
00:39:54,876 --> 00:39:57,906 A:middle
with these changes
[beeping sound].

925
00:39:58,706 --> 00:39:59,426 A:middle
>> HelloGoodbye.

926

927
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

928
00:40:00,486 --> 00:40:02,696 A:middle
>> Double tap to open.

929
00:40:02,696 --> 00:40:03,426 A:middle
>> [beeping sound].

930
00:40:03,426 --> 00:40:04,126 A:middle
>> Extras folder.

931
00:40:04,416 --> 00:40:06,896 A:middle
Two apps. Double tap to open.

932
00:40:06,896 --> 00:40:07,816 A:middle
HelloGoodbye.

933
00:40:07,816 --> 00:40:10,096 A:middle
>> Okay, so here we are in
the app with our changes.

934
00:40:10,686 --> 00:40:12,446 A:middle
First I'm going to tap
on the profile button.

935
00:40:12,976 --> 00:40:14,356 A:middle
>> Profile button.

936
00:40:14,556 --> 00:40:16,006 A:middle
>> And I'm going to
double tap to activate.

937
00:40:16,546 --> 00:40:19,376 A:middle
>> Profile, Profile,
Back, Back button.

938
00:40:20,086 --> 00:40:21,916 A:middle
>> First, let's touch
on the age slider.

939
00:40:22,796 --> 00:40:24,226 A:middle
>> 37. Adjustable.

940
00:40:25,346 --> 00:40:27,456 A:middle
Swipe up or down with one
finger to adjust the value.

941
00:40:27,666 --> 00:40:30,216 A:middle
>> So notice how
that's much clearer.

942
00:40:30,216 --> 00:40:32,966 A:middle
We're actually seeing the
age now, and when I swipe

943
00:40:33,016 --> 00:40:34,096 A:middle
up to adjust the value.

944
00:40:34,816 --> 00:40:35,206 A:middle
>> 38.

945
00:40:35,696 --> 00:40:36,936 A:middle
>> It goes up by a single year.

946
00:40:37,946 --> 00:40:39,326 A:middle
When I swipe to the right --

947
00:40:40,136 --> 00:40:40,756 A:middle
>> Hobbies.

948
00:40:41,306 --> 00:40:42,276 A:middle
>> Notice how we've skipped

949
00:40:42,276 --> 00:40:44,006 A:middle
over that redundant
label to the right.

950
00:40:44,516 --> 00:40:47,566 A:middle
Now, I'm going to touch
on the preview tab.

951
00:40:48,136 --> 00:40:49,206 A:middle
>> Preview button.

952
00:40:50,146 --> 00:40:52,516 A:middle
>> So this time, because
it says it's a button,

953
00:40:52,556 --> 00:40:54,246 A:middle
I know I can do something
with this.

954
00:40:54,346 --> 00:40:55,186 A:middle
So I'm going to double tap.

955
00:40:56,216 --> 00:40:56,816 A:middle
>> Preview.

956
00:40:56,816 --> 00:40:59,066 A:middle
>> And notice how
the preview appears.

957
00:40:59,276 --> 00:41:00,256 A:middle
So when I swipe to the right.

958

959
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

960
00:40:59,276 --> 00:41:00,256 A:middle
So when I swipe to the right.

961
00:41:00,576 --> 00:41:01,456 A:middle
>> Profile photo.

962
00:41:01,776 --> 00:41:02,116 A:middle
Image.

963
00:41:02,206 --> 00:41:04,116 A:middle
>> I can see stuff
inside the preview.

964
00:41:05,106 --> 00:41:06,586 A:middle
If I tap on preview again --

965
00:41:07,076 --> 00:41:08,166 A:middle
>> Preview button.

966
00:41:08,166 --> 00:41:08,966 A:middle
>> And double tap.

967
00:41:09,516 --> 00:41:10,416 A:middle
>> Preview.

968
00:41:10,686 --> 00:41:12,966 A:middle
>> That hides the preview, so
when I swipe to the right now,

969
00:41:13,036 --> 00:41:16,296 A:middle
I hear that sound,
VoiceOver knows

970
00:41:16,296 --> 00:41:17,766 A:middle
that the preview
has gone off screen.

971
00:41:18,176 --> 00:41:21,376 A:middle
So that's how we can make
even custom UI accessible

972
00:41:21,376 --> 00:41:21,986 A:middle
to VoiceOver.

973
00:41:24,516 --> 00:41:27,746 A:middle
To resolve the last remaining
issues we encountered during our

974
00:41:27,746 --> 00:41:30,926 A:middle
audit, we're going to use some
new API we've added in iOS 8.

975
00:41:31,416 --> 00:41:36,636 A:middle
First, let's talk about the
UIAccessibilityContainer

976
00:41:36,636 --> 00:41:37,126 A:middle
protocol.

977
00:41:37,486 --> 00:41:40,286 A:middle
Some of you may already
realize that that isn't new,

978
00:41:40,386 --> 00:41:43,896 A:middle
but we've updated it in iOS 8
to make it much easier to use.

979
00:41:44,836 --> 00:41:46,676 A:middle
For those who aren't
familiar with this protocol,

980
00:41:47,516 --> 00:41:50,536 A:middle
UIAccessibilityContainer
is a way to return a list

981
00:41:50,536 --> 00:41:52,276 A:middle
of accessibility
elements from a view.

982
00:41:53,086 --> 00:41:56,156 A:middle
You'll need to do this
if you have elements

983
00:41:56,156 --> 00:41:57,656 A:middle
that don't correspond to views.

984
00:41:58,846 --> 00:42:02,086 A:middle
For example, you might have
a view with a drawing in it,

985

986
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

987
00:41:58,846 --> 00:42:02,086 A:middle
For example, you might have
a view with a drawing in it,

988
00:42:02,086 --> 00:42:03,706 A:middle
and you might want
different parts of the drawing

989
00:42:03,906 --> 00:42:05,746 A:middle
to be separate accessibility
elements.

990
00:42:06,366 --> 00:42:08,926 A:middle
In that case, you would create
an accessibility element

991
00:42:08,926 --> 00:42:10,196 A:middle
for each part of the drawing,

992
00:42:10,646 --> 00:42:13,936 A:middle
and return those elements using
the UIAccessibilityContainer

993
00:42:13,936 --> 00:42:14,456 A:middle
protocol.

994
00:42:15,106 --> 00:42:18,646 A:middle
And you can see last year's
talk, for a great example of how

995
00:42:18,646 --> 00:42:20,466 A:middle
to create your own elements.

996
00:42:21,656 --> 00:42:23,356 A:middle
But what many people
don't realize is

997
00:42:23,356 --> 00:42:25,436 A:middle
that this protocol
is also a great way

998
00:42:25,686 --> 00:42:28,266 A:middle
to return existing elements
in a specific order.

999
00:42:28,646 --> 00:42:32,566 A:middle
So for example, if
VoiceOver is navigating things

1000
00:42:32,736 --> 00:42:35,156 A:middle
in a different order
from what we want,

1001
00:42:35,546 --> 00:42:38,266 A:middle
we can use this protocol
to return those elements

1002
00:42:38,446 --> 00:42:41,916 A:middle
in the order that we want
VoiceOver to see them.

1003
00:42:45,546 --> 00:42:47,076 A:middle
And now for what's changed.

1004
00:42:47,246 --> 00:42:49,896 A:middle
So currently, in order
to use this protocol,

1005
00:42:50,306 --> 00:42:52,836 A:middle
there are three methods
you need to override.

1006
00:42:53,276 --> 00:42:57,746 A:middle
In iOS 8, there's a
single property called

1007
00:42:57,746 --> 00:43:01,966 A:middle
accessibilityElements, which
you can set to return a list

1008

1009
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1010
00:42:57,746 --> 00:43:01,966 A:middle
accessibilityElements, which
you can set to return a list

1011
00:43:01,966 --> 00:43:04,436 A:middle
of those elements, and
notice how now you don't need

1012
00:43:04,436 --> 00:43:07,536 A:middle
to override subclass, and
you don't have to deal

1013
00:43:07,536 --> 00:43:08,606 A:middle
with three separate methods.

1014
00:43:08,846 --> 00:43:11,706 A:middle
So we think people are going to
find that much easier to use.

1015
00:43:11,706 --> 00:43:12,466 A:middle
[Applause]Thank you.

1016
00:43:13,166 --> 00:43:20,046 A:middle
Okay next up we're
introducing a new class called

1017
00:43:20,046 --> 00:43:20,946 A:middle
the CustomAction.

1018
00:43:21,436 --> 00:43:24,706 A:middle
You should use CustomActions
when you have more

1019
00:43:24,706 --> 00:43:26,926 A:middle
than one action for an element.

1020
00:43:27,496 --> 00:43:30,176 A:middle
For example, in the
app switcher,

1021
00:43:30,176 --> 00:43:32,546 A:middle
each of the app thumbnails
can either be tapped

1022
00:43:33,256 --> 00:43:38,206 A:middle
to launch the app, or you can
slide it up to close the app.

1023
00:43:38,456 --> 00:43:41,506 A:middle
And so we expose a CustomAction
for closing the app,

1024
00:43:41,906 --> 00:43:44,526 A:middle
and that way VoiceOver users
can do that action easily

1025
00:43:44,776 --> 00:43:46,356 A:middle
without needing to do
the sliding gesture.

1026
00:43:46,356 --> 00:43:50,706 A:middle
In our sample app, we
can also use this API

1027
00:43:51,306 --> 00:43:53,566 A:middle
to allow VoiceOver
users to say hello

1028
00:43:53,566 --> 00:43:54,856 A:middle
or goodbye to their matches.

1029
00:43:55,396 --> 00:44:00,216 A:middle
The custom matching
class looks like this.

1030

1031
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1032
00:43:55,396 --> 00:44:00,216 A:middle
The custom matching
class looks like this.

1033
00:44:00,816 --> 00:44:03,436 A:middle
You create a custom
action object with a name

1034
00:44:03,976 --> 00:44:05,896 A:middle
that VoiceOver uses
to describe it.

1035
00:44:06,206 --> 00:44:08,426 A:middle
And you also give it a
target and a selector,

1036
00:44:08,636 --> 00:44:11,116 A:middle
so similar to what you
would pass to a UI button.

1037
00:44:11,396 --> 00:44:14,236 A:middle
And that determines what happens
when the action is performed.

1038
00:44:14,696 --> 00:44:18,446 A:middle
Once you've created all of
your CustomAction objects,

1039
00:44:19,106 --> 00:44:20,946 A:middle
you can assign them
to a view using the

1040
00:44:20,946 --> 00:44:23,666 A:middle
accessibilityCustomActions
array property.

1041
00:44:24,276 --> 00:44:30,196 A:middle
So now, let's use this in our
app to fix the remaining issues.

1042
00:44:30,796 --> 00:44:33,406 A:middle
First, what we're going
to do is make sure

1043
00:44:33,406 --> 00:44:35,656 A:middle
that VoiceOver navigates
the views

1044
00:44:35,816 --> 00:44:38,226 A:middle
in the profile card
in the correct order.

1045
00:44:38,816 --> 00:44:40,496 A:middle
Namely, we don't want
it to go from age

1046
00:44:40,496 --> 00:44:42,106 A:middle
to hobbies and back to 32.

1047
00:44:42,106 --> 00:44:49,506 A:middle
So to fix that, let's click on
the card view class on the left.

1048
00:44:49,606 --> 00:44:51,846 A:middle
Here's our method where we
add all the profile views.

1049
00:44:52,426 --> 00:44:53,526 A:middle
When I scroll to the bottom,

1050
00:44:54,846 --> 00:44:57,436 A:middle
after all of our subviews
have been created,

1051
00:44:57,916 --> 00:45:00,266 A:middle
we can set the
accessibilityElement property

1052

1053
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1054
00:44:57,916 --> 00:45:00,266 A:middle
we can set the
accessibilityElement property

1055
00:45:00,266 --> 00:45:03,516 A:middle
of our card view to an
array of its subviews

1056
00:45:03,556 --> 00:45:04,946 A:middle
in the order you
want them to appear.

1057
00:45:05,816 --> 00:45:09,756 A:middle
Notice how I put the age title
right next to the age value.

1058
00:45:11,496 --> 00:45:14,036 A:middle
Whoops. Okay.

1059
00:45:14,576 --> 00:45:19,176 A:middle
Next let's make sure that
VoiceOver users can say hello

1060
00:45:19,176 --> 00:45:20,236 A:middle
or goodbye to their matches.

1061
00:45:20,676 --> 00:45:23,576 A:middle
To do that, I'm going to click

1062
00:45:23,576 --> 00:45:26,266 A:middle
on the Matches View
Controller on the left.

1063
00:45:26,636 --> 00:45:29,856 A:middle
First, let's find out what we're
doing when a user swipes up

1064
00:45:29,856 --> 00:45:31,676 A:middle
or down without VoiceOver
enabled.

1065
00:45:31,946 --> 00:45:34,656 A:middle
So I'm going to click
on the drop down

1066
00:45:34,916 --> 00:45:37,756 A:middle
and find our swipe gesture
recognizer handlers.

1067
00:45:39,336 --> 00:45:41,686 A:middle
So both of these handlers
are simply calling

1068
00:45:41,686 --> 00:45:44,976 A:middle
in to methods called say
hello and say goodbye,

1069
00:45:45,486 --> 00:45:47,826 A:middle
which are implemented
right above.

1070
00:45:48,346 --> 00:45:52,056 A:middle
These methods are also great
candidates for the selector

1071
00:45:52,056 --> 00:45:54,776 A:middle
that we pass to the
CustomAction objects.

1072
00:45:55,646 --> 00:45:58,046 A:middle
The only thing we'll need
to change is make sure

1073
00:45:58,046 --> 00:45:59,406 A:middle
that they return Booleans

1074
00:45:59,446 --> 00:46:01,406 A:middle
to indicate whether
the action succeeded.

1075

1076
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1077
00:45:59,446 --> 00:46:01,406 A:middle
to indicate whether
the action succeeded.

1078
00:46:01,906 --> 00:46:04,526 A:middle
In most cases, you
can just return yes.

1079
00:46:05,436 --> 00:46:06,646 A:middle
Oh, one more thing.

1080
00:46:07,746 --> 00:46:11,436 A:middle
When you say hello or goodbye
to a match, the layout changes.

1081
00:46:12,026 --> 00:46:14,656 A:middle
So again, we're going to post
a layout change notification.

1082
00:46:15,326 --> 00:46:17,006 A:middle
Both of these methods
are calling

1083
00:46:17,006 --> 00:46:19,566 A:middle
in to a helper called
animateCardsForHello,

1084
00:46:19,636 --> 00:46:21,526 A:middle
which is implemented
right above.

1085
00:46:21,876 --> 00:46:26,186 A:middle
So in the completion
for this animation,

1086
00:46:27,396 --> 00:46:29,686 A:middle
we should post our
layoutChangedNotification.

1087
00:46:30,216 --> 00:46:32,756 A:middle
Okay. So that's all
the setup we need.

1088
00:46:33,116 --> 00:46:35,326 A:middle
Now, let's create those
CustomAction objects.

1089
00:46:36,146 --> 00:46:40,406 A:middle
I'm going to click on the
drop down at the top and find

1090
00:46:40,406 --> 00:46:42,596 A:middle
where we add the card
to the Matches page.

1091
00:46:42,706 --> 00:46:45,946 A:middle
So here's where we're
creating the card,

1092
00:46:47,036 --> 00:46:50,566 A:middle
and we're assigning swipe
gesture recognizers to it.

1093
00:46:51,796 --> 00:46:53,886 A:middle
Alongside those swipe
gesture recognizers,

1094
00:46:54,226 --> 00:46:55,846 A:middle
let's now create
our CustomActions.

1095
00:46:56,306 --> 00:46:58,466 A:middle
First, I'm going to create
an action for saying hello.

1096
00:46:59,106 --> 00:47:02,566 A:middle
So here's how that looks.

1097

1098
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1099
00:46:59,106 --> 00:47:02,566 A:middle
So here's how that looks.

1100
00:47:03,156 --> 00:47:05,936 A:middle
We give it a name, which in
this case is simply say hello.

1101
00:47:06,746 --> 00:47:10,906 A:middle
We pass in the View Controller
as a target, and as a selector,

1102
00:47:10,906 --> 00:47:13,036 A:middle
we pass in the method
that we just modified

1103
00:47:13,036 --> 00:47:13,916 A:middle
to return a Boolean.

1104
00:47:14,516 --> 00:47:17,646 A:middle
We do the same thing
for saying goodbye.

1105
00:47:18,306 --> 00:47:22,476 A:middle
And now, we want the user
to be able to say hello

1106
00:47:22,476 --> 00:47:25,856 A:middle
or goodbye wherever they
are in the profile card.

1107
00:47:26,106 --> 00:47:29,596 A:middle
So for every element
in the card view,

1108
00:47:29,876 --> 00:47:32,696 A:middle
we're going to set it's
accessibilityCustomActions

1109
00:47:32,696 --> 00:47:35,436 A:middle
property to an array
of these two actions.

1110
00:47:36,016 --> 00:47:40,976 A:middle
Okay. Now, let's build and
run with these changes.

1111
00:47:41,516 --> 00:47:51,726 A:middle
[ Background Sounds ]

1112
00:47:52,226 --> 00:47:56,656 A:middle
>> Double tap to open.

1113
00:47:56,656 --> 00:47:57,336 A:middle
HelloGoodbye [clicking sound].

1114
00:47:57,916 --> 00:47:58,276 A:middle
HelloGoodbye.

1115
00:47:58,566 --> 00:47:59,736 A:middle
>> Okay. Let's tap on Matches.

1116

1117
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1118
00:48:00,206 --> 00:48:01,006 A:middle
>> Matches button.

1119
00:48:01,046 --> 00:48:03,676 A:middle
>> And double tap to activate.

1120
00:48:03,676 --> 00:48:04,036 A:middle
>> [Beeping sound] Matches.

1121
00:48:04,426 --> 00:48:05,386 A:middle
Matches. Back.

1122
00:48:05,696 --> 00:48:06,456 A:middle
Back button.

1123
00:48:06,606 --> 00:48:09,476 A:middle
>> So the first thing I'm going
to do is tap on the photo,

1124
00:48:09,776 --> 00:48:10,966 A:middle
and start swiping to the right

1125
00:48:11,096 --> 00:48:13,626 A:middle
to see what order VoiceOver
sees these elements.

1126
00:48:14,796 --> 00:48:15,706 A:middle
>> Profile photo.

1127
00:48:16,006 --> 00:48:17,296 A:middle
Image. Age.

1128
00:48:17,736 --> 00:48:19,346 A:middle
32. Hobbies.

1129
00:48:19,946 --> 00:48:21,436 A:middle
Cooking. Bubble tea
with friends.

1130
00:48:21,696 --> 00:48:22,026 A:middle
Travel.

1131
00:48:22,536 --> 00:48:24,536 A:middle
>> So that's much
easier to understand.

1132
00:48:24,776 --> 00:48:28,506 A:middle
Next, let's touch any
element in the profile card.

1133
00:48:28,736 --> 00:48:30,526 A:middle
In this case, I'm going
to touch on the photo.

1134
00:48:30,846 --> 00:48:31,896 A:middle
And listen to what it says.

1135
00:48:32,396 --> 00:48:33,266 A:middle
>> Profile photo.

1136
00:48:33,586 --> 00:48:36,706 A:middle
Image. Swipe up or down
to select a CustomAction.

1137
00:48:37,166 --> 00:48:38,996 A:middle
>> So we're given the
option to choose one

1138
00:48:38,996 --> 00:48:40,246 A:middle
of the actions we created.

1139
00:48:40,726 --> 00:48:41,596 A:middle
When I swipe down --

1140
00:48:42,056 --> 00:48:42,726 A:middle
>> Say hello.

1141
00:48:43,716 --> 00:48:45,256 A:middle
>> I hear the description
of the action.

1142
00:48:45,646 --> 00:48:49,046 A:middle
If I want to take that action, I
can double tap, [clicking sound]

1143
00:48:49,486 --> 00:48:52,856 A:middle
and so now VoiceOver
users can also say hello

1144
00:48:52,856 --> 00:48:54,086 A:middle
or goodbye to their matches.

1145
00:48:54,236 --> 00:48:56,826 A:middle
And that's how easy it is

1146
00:48:56,826 --> 00:48:59,106 A:middle
to use the new API
we've added in iOS 8.

1147

1148
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1149
00:49:00,516 --> 00:49:06,546 A:middle
[ Applause ]

1150
00:49:07,046 --> 00:49:08,846 A:middle
>> So we've come to
the end of our talk,

1151
00:49:08,916 --> 00:49:10,776 A:middle
and there are a few
takeaways I'd like you

1152
00:49:10,776 --> 00:49:13,526 A:middle
to have when you leave.

1153
00:49:14,066 --> 00:49:16,586 A:middle
First, iOS users are diverse.

1154
00:49:16,936 --> 00:49:19,556 A:middle
Keep in mind that there
may be users of your app

1155
00:49:19,986 --> 00:49:22,286 A:middle
who have different needs,
which you should accommodate.

1156
00:49:23,166 --> 00:49:27,766 A:middle
When you accommodate more users,
you're widening your user base.

1157
00:49:28,196 --> 00:49:31,186 A:middle
When more people can use
your app, more people will.

1158
00:49:31,726 --> 00:49:33,836 A:middle
And finally,

1159
00:49:33,836 --> 00:49:39,516 A:middle
adding accessibility is a low
effort, high reward business.

1160
00:49:39,756 --> 00:49:42,666 A:middle
We've just seen how, with only a
few code changes, we took an app

1161
00:49:43,086 --> 00:49:45,306 A:middle
that was just unusable
for many users,

1162
00:49:45,306 --> 00:49:47,886 A:middle
and made it into an experience
that they, too, can enjoy.

1163
00:49:49,336 --> 00:49:52,116 A:middle
So without needing
a lot of work,

1164
00:49:52,116 --> 00:49:54,266 A:middle
you can make a real
difference to users.

1165
00:49:55,446 --> 00:50:00,536 A:middle
For more information, you
can contact our Evangelist,

1166

1167
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00,000

1168
00:49:55,446 --> 00:50:00,536 A:middle
For more information, you
can contact our Evangelist,

1169
00:50:00,626 --> 00:50:04,146 A:middle
Jake Behrens, or you can consult
the Accessibility Programming

1170
00:50:04,146 --> 00:50:04,796 A:middle
Guide for iOS.

1171
00:50:05,876 --> 00:50:07,336 A:middle
There is also the
developer forums.

1172
00:50:07,566 --> 00:50:09,416 A:middle
So you can ask other
developers your questions.

1173
00:50:09,866 --> 00:50:13,866 A:middle
There are several related
sessions to this one.

1174
00:50:14,476 --> 00:50:16,166 A:middle
Prior to this talk,
we had a talk

1175
00:50:16,166 --> 00:50:17,586 A:middle
about accessibility on OS X.

1176
00:50:17,726 --> 00:50:19,626 A:middle
If you missed it, you
can watch the video.

1177
00:50:20,096 --> 00:50:23,886 A:middle
Tomorrow there will be a talk
about designing apps for people

1178
00:50:23,886 --> 00:50:25,166 A:middle
on the autistic spectrum.

1179
00:50:25,346 --> 00:50:27,936 A:middle
And on Friday, you can learn how

1180
00:50:27,936 --> 00:50:30,746 A:middle
to make even complex web
applications accessible.

1181
00:50:32,396 --> 00:50:33,346 A:middle
Thank you all for coming.

1182
00:50:33,526 --> 00:50:34,576 A:middle
I hope you enjoyed the talk.

1183
00:50:34,926 --> 00:50:36,576 A:middle
And have a great rest
of the conference.

1184
00:50:37,508 --> 00:50:39,508 A:middle
[ Applause ]

1185
